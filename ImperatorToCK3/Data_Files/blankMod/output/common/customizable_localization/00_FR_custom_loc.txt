# Last updated: CK3 patch 1.3.0
####################################
#   FRENCH CUSTOM LOCALISATION     #
#      By Xavier Zimmermann        #
####################################

###################################
## I. PERSONNAGES HOMME OU FEMME ##
###################################

##################
## TERMINAISONS ##
##################
# FR_E (blessé\blessée ; Pluriel ; Sans espace avant)
# FR_EOpp (Pluriel ; Sans espace avant)
# FR_EauElle (beau\belle, jumeau\jumelle ; Sans espace avant)
# FR_EauxElles (beaux\belles ; Pluriel ; Sans espace avant)
# FR_EEsse (traître\traîtresse ; Pluriel ; Sans espace avant)
# FR_EEtte (ce\cette ; Sans espace avant)
# FR_ErEre (Pluriel ; Sans espace avant)
# FR_ErEreOpp (Pluriel ; Sans espace avant)
# FR_Eresse (devin\devineresse ; Pluriel ; Sans espace avant)
# FR_EteEtesse (poète\poétesse ; Pluriel ; Sans espace avant)
# FR_EtEte (secret\secrète, inquiet\inquiète ; Pluriel ; Sans espace avant)
# FR_EtEtte (cet\cette; muet\muette ; Pluriel ; Sans espace avant)
# FR_EurEresse (chasseur\chasseresse ; Pluriel ; Sans espace avant)
# FR_EurRice (Pluriel ; Sans espace avant)
# FR_FVe (lascif\lascive ; Pluriel ; Sans espace avant)
# FR_IeuxIeille (vieux\vieille ; Sans espace avant)
# FR_LLle (tel\telle ; Pluriel ; Sans espace avant)
# FR_NNne (poltron\poltronne ; Pluriel ; Sans espace avant)
# FR_OnA (mon\ma, son\sa ; Sans espace avant)
# FR_OnAOpp (Sans espace avant)
# FR_OuOlle (fou\folle, mou\molle ; Pluriel ; Sans espace avant)
# FR_RSe (Pluriel ; Sans espace avant)
# FR_Hesse (duc\duchesse ; Pluriel ; Sans espace avant)
# FR_SSse (gros\grosse, las\lasse ; Sans espace avant)
# FR_TTte (sot\sotte ; Pluriel ; Sans espace avant)
# FR_XCe (doux\douce ; Sans espace avant)
# FR_XSe (furieux\furieuse ; Sans espace avant)
# FR_XSeOpp (Sans espace avant)
# FR_XSse (faux\fausse, roux\rousse ; Sans espace avant)
# FR_He (franc\franche ; Pluriel ; Sans espace avant)
# FR_EfEve (bref\brève ; Pluriel ; Sans espace avant)
# FR_Te (favori\favorite ; Sans espace avant)
# FR_AuxAles (vassaux\vassales, égaux\égales ; Pluriel ; Sans espace avant)
# FR_Es (assis\assises ; Pluriel ; Sans espace avant)
# FR_EuxElles (eux\elles ; Pluriel)
# FR_IlsElles (ils\elles ; Pluriel)
# FR_STes (tous\toutes ; Pluriel ; Sans espace avant)

##################
#### ARTICLES ####
##################
# FR_AuAla
# FR_DuDela
# FR_LeLa
# FR_LeLaOpp
# FR_CeluiCelle
# FR_IlElle
# FR_LuiElle

# FR_EluiElle (e lui\'elle ; Sans espace avant)
# FR_SilSielle (s'il\si elle)
# FR_LLa (l'\la ; Sans espace après)
# FR_AlAla (à\à la ; Sans espace après)
# FR_DDe (d'\de ; Sans espace après)

##################
###### NOMS ######
##################
# FR_MonseigneurMadame
# FR_SeigneurDame (Pluriel)
# FR_SieurDame (Pluriel)
# FR_EpouxEpouse
# FR_EpouxEpouseOpp
# FR_PaternelMaternel
# FR_GarconFille (Pluriel)
# FR_ServiteurServante (Pluriel)

###########################################
# II. REMPLACEMENT DE COMMANDES ANGLAISES #
###########################################
# FR_RelationToMe_OnA - mon\ma + RelationToMe
# FR_RelationToMe_Le - le\la + RelationToMe
# FR_RelationToMeShort_OnA - mon\ma + RelationToMeShort
# FR_Du_signature_weapon - signature_weapon
# FR_OnA_signature_weapon - signature_weapon
# FR_Un_signature_weapon - signature_weapon
# FR_CompositionType_lela - CompositionType
# FR_FaithGenderedAdj - GetFaith.GetAdjective\GetFaith.GetAdherentName (scope: character)
# FR_LocalAnimal_e - Le 'e' du féminin pour LocalAnimal
# FR_LocalAnimal_d - de\d' pour LocalAnimal (Sans espace après)
# FR_LocalAnimal_he - Le 'he' du féminin pour LocalAnimal (blanc/blanche)
# FR_LocalAnimal_le - devant LocalAnimal (Sans espace après)
# FR_Scheme_FullAction - GetActionName - SCHEME_FULL_ACTION_NAME
# FR_Le_PointOfRidicule - le pour PointOfRidicule

# FR_du_CharacterIntroductionSupportNoComma pour CharacterIntroductionSupportNoComma
# FR_du_MyCharacterIntroductionNoComma pour MyCharacterIntroductionNoComma
# FR_du_YourCharacterIntroductionNoComma pour YourCharacterIntroductionNoComma
# FR_du_HerHisCharacterIntroductionNoComma pour HerHisCharacterIntroductionNoComma
# FR_du_MyCharacterIntroduction pour MyCharacterIntroduction
# FR_du_YourCharacterIntroduction pour YourCharacterIntroduction
# FR_du_HerHisCharacterIntroduction pour HerHisCharacterIntroduction

# FR_au_CharacterIntroductionSupportNoComma pour CharacterIntroductionSupportNoComma
# FR_au_MyCharacterIntroductionNoComma pour MyCharacterIntroductionNoComma
# FR_au_YourCharacterIntroductionNoComma pour YourCharacterIntroductionNoComma
# FR_au_HerHisCharacterIntroductionNoComma pour HerHisCharacterIntroductionNoComma
# FR_au_MyCharacterIntroduction pour MyCharacterIntroduction
# FR_au_YourCharacterIntroduction pour YourCharacterIntroduction
# FR_au_HerHisCharacterIntroduction pour HerHisCharacterIntroduction



##################################
# III. ARTICLES DEVANT COMMANDES #
##################################
# Char:    commande de base
# Char_L:  affiche "le/la" pour "sans terre"
# Char_U:  affiche "vous" quand perso est le joueur
# Char_P:  affiche Prince
# Char_Pi: affiche "le/la" pour les titres comme prince, seulement si le perso est marié ou avec terre

# FR_le_Char_Pi devant GetTitledFirstName, GetShortUINameNotMe (Sans espace après)
# FR_du_Char_Pi
# FR_au_Char_Pi

# FR_le_Char_P devant GetFullName, GetFullNameNicknamed, GetUINameNotMe (Sans espace après)
# FR_du_Char_P
# FR_au_Char_P

# FR_le_Char_U_P devant GetUIName (Sans espace après)
# FR_du_Char_U_P
# FR_au_Char_U_P

# FR_le_Char_U_Pi devant GetShortUIName (Sans espace après)
# FR_du_Char_U_Pi
# FR_au_Char_U_Pi

# FR_le_Char_L devant GetTitleTierName, GetTitleAsName (Sans espace après)
# FR_du_Char_L
# FR_au_Char_L

# FR_le_Char devant GetName (Sans espace après)
# FR_du_Char
# FR_au_Char

# FR_only_le_HouseOfWorship devant HouseOfWorship (Sans espace après)
# FR_only_du_HouseOfWorship devant HouseOfWorship (Sans espace après)
# FR_only_au_HouseOfWorship devant HouseOfWorship (Sans espace après)
# FR_only_de_HouseOfWorshipPlural devant HouseOfWorshipPlural (Sans espace après)

##################################################################
##################################################################

FR_E = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_E_female
	}
	text = {
		localization_key = CustomLoc_FR_E_male
		fallback = yes
	}
}

FR_EOpp = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_EOpp_female
	}
	text = {
		localization_key = CustomLoc_FR_EOpp_male
		fallback = yes
	}
}

FR_Eresse = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_Eresse_female
	}
	text = {
		localization_key = CustomLoc_FR_Eresse_male
		fallback = yes
	}
}

FR_AuAla = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_AuAla_female
	}
	text = {
		localization_key = CustomLoc_FR_AuAla_male
		fallback = yes
	}
}

FR_CeluiCelle = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_CeluiCelle_female
	}
	text = {
		localization_key = CustomLoc_FR_CeluiCelle_male
		fallback = yes
	}
}

FR_DDe = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_DDe_female
	}
	text = {
		localization_key = CustomLoc_FR_DDe_male
		fallback = yes
	}
}

FR_DuDela = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_DuDela_female
	}
	text = {
		localization_key = CustomLoc_FR_DuDela_male
		fallback = yes
	}
}

FR_EauElle = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_EauElle_female
	}
	text = {
		localization_key = CustomLoc_FR_EauElle_male
		fallback = yes
	}
}

FR_EauxElles = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_EauxElles_female
	}
	text = {
		localization_key = CustomLoc_FR_EauxElles_male
		fallback = yes
	}
}

FR_EEsse = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_EEsse_female
	}
	text = {
		localization_key = CustomLoc_FR_EEsse_male
		fallback = yes
	}
}

FR_EEtte = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_EEtte_female
	}
	text = {
		localization_key = CustomLoc_FR_EEtte_male
		fallback = yes
	}
}

FR_ErEre = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_ErEre_female
	}
	text = {
		localization_key = CustomLoc_FR_ErEre_male
		fallback = yes
	}
}

FR_ErEreOpp = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_ErEre_male
	}
	text = {
		localization_key = CustomLoc_FR_ErEre_female
		fallback = yes
	}
}

FR_EluiElle = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_EluiElle_female
	}
	text = {
		localization_key = CustomLoc_FR_EluiElle_male
		fallback = yes
	}
}

FR_EteEtesse = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_EteEtesse_female
	}
	text = {
		localization_key = CustomLoc_FR_EteEtesse_male
		fallback = yes
	}
}

FR_EtEte = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_EtEte_female
	}
	text = {
		localization_key = CustomLoc_FR_EtEte_male
		fallback = yes
	}
}

FR_EtEtte = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_EtEtte_female
	}
	text = {
		localization_key = CustomLoc_FR_EtEtte_male
		fallback = yes
	}
}

FR_EurEresse = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_EurEresse_female
	}
	text = {
		localization_key = CustomLoc_FR_EurEresse_male
		fallback = yes
	}
}

FR_EurRice = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_EurRice_female
	}
	text = {
		localization_key = CustomLoc_FR_EurRice_male
		fallback = yes
	}
}

FR_FVe = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_FVe_female
	}
	text = {
		localization_key = CustomLoc_FR_FVe_male
		fallback = yes
	}
}

FR_IeuxIeille = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_IeuxIeille_female
	}
	text = {
		localization_key = CustomLoc_FR_IeuxIeille_male
		fallback = yes
	}
}

FR_IlElle = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_IlElle_female
	}
	text = {
		localization_key = CustomLoc_FR_IlElle_male
		fallback = yes
	}
}

FR_LeLa = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_LeLa_female
	}
	text = {
		localization_key = CustomLoc_FR_LeLa_male
		fallback = yes
	}
}

FR_LeLaOpp = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_LeLaOpp_female
	}
	text = {
		localization_key = CustomLoc_FR_LeLaOpp_male
		fallback = yes
	}
}

FR_LLa = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_LLa_female
	}
	text = {
		localization_key = CustomLoc_FR_LLa_male
		fallback = yes
	}
}

FR_AlAla = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_AlAla_female
	}
	text = {
		localization_key = CustomLoc_FR_AlAla_male
		fallback = yes
	}
}

FR_LLle = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_LLle_female
	}
	text = {
		localization_key = CustomLoc_FR_LLle_male
		fallback = yes
	}
}

FR_LuiElle = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_LuiElle_female
	}
	text = {
		localization_key = CustomLoc_FR_LuiElle_male
		fallback = yes
	}
}

FR_NNne = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_NNne_female
	}
	text = {
		localization_key = CustomLoc_FR_NNne_male
		fallback = yes
	}
}

FR_OnA = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_OnA_female
	}
	text = {
		localization_key = CustomLoc_FR_OnA_male
		fallback = yes
	}
}

FR_OnAOpp = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_OnAOpp_female
	}
	text = {
		localization_key = CustomLoc_FR_OnAOpp_male
		fallback = yes
	}
}

FR_OuOlle = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_OuOlle_female
	}
	text = {
		localization_key = CustomLoc_FR_OuOlle_male
		fallback = yes
	}
}

FR_RSe = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_RSe_female
	}
	text = {
		localization_key = CustomLoc_FR_RSe_male
		fallback = yes
	}
}

FR_SilSielle = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_SilSielle_female
	}
	text = {
		localization_key = CustomLoc_FR_SilSielle_male
		fallback = yes
	}
}

FR_SSse = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_SSse_female
	}
	text = {
		localization_key = CustomLoc_FR_SSse_male
		fallback = yes
	}
}

FR_TTte = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_TTte_female
	}
	text = {
		localization_key = CustomLoc_FR_TTte_male
		fallback = yes
	}
}

FR_XCe = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_XCe_female
	}
	text = {
		localization_key = CustomLoc_FR_XCe_male
		fallback = yes
	}
}

FR_XSe = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_XSe_female
	}
	text = {
		localization_key = CustomLoc_FR_XSe_male
		fallback = yes
	}
}

FR_XSeOpp = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_XSeOpp_female
	}
	text = {
		localization_key = CustomLoc_FR_XSeOpp_male
		fallback = yes
	}
}

FR_XSse = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_XSse_female
	}
	text = {
		localization_key = CustomLoc_FR_XSse_male
		fallback = yes
	}
}

FR_He = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_He_female
	}
	text = {
		localization_key = CustomLoc_FR_He_male
		fallback = yes
	}
}

FR_EfEve = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_EfEve_female
	}
	text = {
		localization_key = CustomLoc_FR_EfEve_male
		fallback = yes
	}
}

FR_Te = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_Te_female
	}
	text = {
		localization_key = CustomLoc_FR_Te_male
		fallback = yes
	}
}

FR_AuxAles = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_AuxAles_female
	}
	text = {
		localization_key = CustomLoc_FR_AuxAles_male
		fallback = yes
	}
}

FR_Es = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_Es_female
	}
	text = {
		localization_key = CustomLoc_FR_Es_male
		fallback = yes
	}
}

FR_EuxElles = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_EuxElles_female
	}
	text = {
		localization_key = CustomLoc_FR_EuxElles_male
		fallback = yes
	}
}

FR_IlsElles = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_IlsElles_female
	}
	text = {
		localization_key = CustomLoc_FR_IlsElles_male
		fallback = yes
	}
}

FR_STes = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_STes_female
	}
	text = {
		localization_key = CustomLoc_FR_STes_male
		fallback = yes
	}
}

FR_Hesse = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_Hesse_female
	}
	text = {
		localization_key = CustomLoc_FR_Hesse_male
		fallback = yes
	}
}

FR_MonseigneurMadame = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_MonseigneurMadame_female
	}
	text = {
		localization_key = CustomLoc_FR_MonseigneurMadame_male
		fallback = yes
	}
}

FR_SeigneurDame = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_SeigneurDame_female
	}
	text = {
		localization_key = CustomLoc_FR_SeigneurDame_male
		fallback = yes
	}
}

FR_SieurDame = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_SieurDame_female
	}
	text = {
		localization_key = CustomLoc_FR_SieurDame_male
		fallback = yes
	}
}

FR_EpouxEpouse = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_EpouxEpouse_female
	}
	text = {
		localization_key = CustomLoc_FR_EpouxEpouse_male
		fallback = yes
	}
}

FR_EpouxEpouseOpp = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_EpouxEpouseOpp_female
	}
	text = {
		localization_key = CustomLoc_FR_EpouxEpouseOpp_male
		fallback = yes
	}
}

FR_PaternelMaternel = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_PaternelMaternel_female
	}
	text = {
		localization_key = CustomLoc_FR_PaternelMaternel_male
		fallback = yes
	}
}

FR_GarconFille = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_GarconFille_female
	}
	text = {
		localization_key = CustomLoc_FR_GarconFille_male
		fallback = yes
	}
}

FR_ServiteurServante = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
					NOT = { exists = scope:second }
				}
				this = { is_female = yes }
			}
			trigger_if = {
				limit = { 
					exists = this
					exists = scope:second
				}
				this = { is_female = yes }
				scope:second = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_ServiteurServante_female
	}
	text = {
		localization_key = CustomLoc_FR_ServiteurServante_male
		fallback = yes
	}
}

FR_RelationToMe_OnA = {
	type = character

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_motherwife
		trigger = {
			scope:second = {
				OR = {
					this = root.mother
					this = root.mother.mother
					this = root.father.mother
				}
				any_spouse = { this = root }
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_mother_concubine
		trigger = {
			scope:second = {
				OR = {
					this = root.mother
					this = root.mother.mother
					this = root.father.mother
				}
				any_consort = { this = root }
				is_concubine = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_sisterwife
		trigger = {
			scope:second = {
				any_sibling = { this = root }
				is_female = yes
				any_spouse = { this = root }
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_sister_concubine
		trigger = {
			scope:second = {
				any_sibling = { this = root }
				is_female = yes
				any_consort = { this = root }
				is_concubine = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_daughterwife
		trigger = {
			scope:second = {
				OR = {
					any_parent = { this = root }
					any_parent = { any_parent = { this = root } }
				}
				is_female = yes
				any_spouse = { this = root }
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_daughter_concubine
		trigger = {
			scope:second = {
				OR = {
					any_parent = { this = root }
					any_parent = { any_parent = { this = root } }
				}
				any_consort = { this = root }
				is_female = yes
				is_concubine = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_fatherhusband
		trigger = {
			scope:second = {
				OR = {
					this = root.father
					this = root.father.father
					this = root.mother.father
				}
				any_spouse = { this = root }
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_father_consort
		trigger = {
			scope:second = {
				OR = {
					this = root.father
					this = root.father.father
					this = root.mother.father
				}
				any_consort = { this = root }
				is_concubine = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_brotherhusband
		trigger = {
			scope:second = {
				any_sibling = { this = root }
				is_female = no
				any_spouse = { this = root }
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_brother_consort
		trigger = {
			scope:second = {
				any_sibling = { this = root }
				is_female = no
				any_consort = { this = root }
				is_concubine = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_sonhusband
		trigger = {
			scope:second = {
				OR = {
					any_parent = { this = root }
					any_parent = {
						even_if_dead = yes
						any_parent = {
							this = root
						}
					}
				}
				is_female = no
				any_spouse = { this = root }
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_son_consort
		trigger = {
			scope:second = {
				OR = {
					any_parent = { this = root }
					any_parent = {
						even_if_dead = yes
						any_parent = {
							this = root
						}
					}
				}
				is_female = no
				any_consort = { this = root }
				is_concubine = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_wife
		trigger = {
			scope:second = {
				is_female = yes
				any_spouse = {
					even_if_dead = yes
					this = root
				}
				is_alive = yes
				is_concubine = no
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_husband
		trigger = {
			scope:second = {
				is_male = yes
				any_spouse = {
					even_if_dead = yes
					this = root
				}
				is_alive = yes
				is_concubine = no
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_wife_departed
		trigger = {
			scope:second = {
				is_female = yes
				any_spouse = {
					even_if_dead = yes
					this = root
				}
				is_alive = no
				is_concubine = no
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_husband_departed
		trigger = {
			scope:second = {
				is_male = yes
				any_spouse = {
					even_if_dead = yes
					this = root
				}
				is_alive = no
				is_concubine = no
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_mother
		trigger = {
			scope:second = {
				is_female = yes
				any_child = {
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_father
		trigger = {
			scope:second = {
				is_female = no
				any_child = {
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_heir_daughter
		trigger = {
			exists = player_heir
			player_heir = scope:second
			scope:second = {
				is_female = yes
				is_child_of = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_heir_son
		trigger = {
			exists = player_heir
			player_heir = scope:second
			scope:second = {
				is_male = yes
				is_child_of = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_daughter
		trigger = {
			scope:second = {
				is_female = yes
				is_child_of = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_son
		trigger = {
			scope:second = {
				is_female = no
				is_child_of = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_grandmother
		trigger = {
			scope:second = {
				is_female = yes
				is_grandparent_of = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_grandfather
		trigger = {
			scope:second = {
				is_male = yes
				is_grandparent_of = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_granddaughter
		trigger = {
			scope:second = {
				is_female = yes
				is_grandchild_of = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_grandson
		trigger = {
			scope:second = {
				is_female = no
				is_grandchild_of = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_half_sister
		trigger = {
			scope:second = {
				is_female = yes
				any_sibling = {
					this = root
				}
				any_parent = { NOT = { is_parent_of = root } }
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_half_brother
		trigger = {
			scope:second = {
				is_female = no
				any_sibling = {
					this = root
				}
				any_parent = { NOT = { is_parent_of = root } }
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_sister_rival
		trigger = {
			scope:second = {
				has_relation_rival = root
				is_female = yes
				any_sibling = {
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_brother_rival
		trigger = {
			scope:second = {
				has_relation_rival = root
				is_female = no
				any_sibling = {
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_sister_friend
		trigger = {
			scope:second = {
				is_female = yes
				any_relation = {
					type = friend
					this = root
				}
				any_sibling = {
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_brother_friend
		trigger = {
			scope:second = {
				is_female = no
				any_relation = {
					type = friend
					this = root
				}
				any_sibling = {
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_sister_bully
		trigger = {
			scope:second = {
				is_female = yes
				any_relation = {
					type = victim
					this = root
				}
				any_sibling = {
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_brother_bully
		trigger = {
			scope:second = {
				is_female = no
				any_relation = {
					type = victim
					this = root
				}
				any_sibling = {
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_sister_victim
		trigger = {
			scope:second = {
				is_female = yes
				any_relation = {
					type = bully
					this = root
				}
				any_sibling = {
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_brother_victim
		trigger = {
			scope:second = {
				is_female = no
				any_relation = {
					type = bully
					this = root
				}
				any_sibling = {
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_sister
		trigger = {
			scope:second = {
				is_female = yes
				is_sibling_of = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_brother
		trigger = {
			scope:second = {
				is_female = no
				is_sibling_of = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_niece
		trigger = {
			scope:second = {
				is_female = yes
				is_sibling_child_of_root_trigger = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_nephew
		trigger = {
			scope:second = {
				is_female = no
				is_sibling_child_of_root_trigger = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_aunt
		trigger = {
			scope:second = {
				is_female = yes
				is_parent_sibling_of_root_trigger = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_uncle
		trigger = {
			scope:second = {
				is_female = no
				is_parent_sibling_of_root_trigger = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_concubine_female
		trigger = {
			scope:second = {
				is_female = yes
				any_consort = { this = root }
				is_concubine = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_concubine_male
		trigger = {
			scope:second = {
				is_male = yes
				any_consort = { this = root }
				is_concubine = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_religious_head
		trigger = {
			faith.religious_head = scope:second
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_great_grandfather
		trigger = {
			scope:second = {
				is_male = yes
				is_great_grandparent_of = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_great_grandmother
		trigger = {
			scope:second = {
				is_female = yes
				is_great_grandparent_of = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_greatgranddaughter
		trigger = {
			scope:second = {
				is_female = yes
				is_great_grandchild_of = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_greatgrandson
		trigger = {
			scope:second = {
				is_female = no
				is_great_grandchild_of = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_daughter_in_law
		trigger = {
			scope:second = {
				is_female = yes
				any_spouse = {
					is_child_of = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_son_in_law
		trigger = {
			scope:second = {
				is_female = no
				any_spouse = {
					is_child_of = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_cousin
		trigger = {
			scope:second = {
				is_cousin_of_root_trigger = yes
				is_male = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_cousin_female
		trigger = {
			scope:second = {
				is_cousin_of_root_trigger = yes
				is_female = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_stepdaughter
		trigger = {
			scope:second = {
				is_female = yes
				any_parent = {
					any_spouse = {
						this = root
						NOT = { is_parent_of = scope:second }
					}
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_stepson
		trigger = {
			scope:second = {
				is_male = yes
				any_parent = {
					any_spouse = {
						this = root
						NOT = { is_parent_of = scope:second }
					}
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_stepsister
		trigger = {
			scope:second = {
				is_female = yes
				any_parent = {
					any_spouse = {
						any_child = {
							this = root
							NOT = { is_sibling_of = scope:second }
						}
					}
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_stepbrother
		trigger = {
			scope:second = {
				is_male = yes
				any_parent = {
					any_spouse = {
						any_child = {
							this = root
							NOT = { is_sibling_of = scope:second }
						}
					}
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_stepmother
		trigger = {
			scope:second = {
				is_female = yes
				any_spouse = {
					any_child = {
						this = root
						NOT = { is_child_of = scope:second }
					}
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_stepfather
		trigger = {
			scope:second = {
				is_male = yes
				any_spouse = {
					any_child = {
						this = root
						NOT = { is_child_of = scope:second }
					}
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_liege_female_lover
		trigger = {
			scope:second = {
				has_relation_lover = root
				is_female = yes
				any_vassal_or_below = {
					this = root
				}
				trigger_if = { # not reflected in has_RelationToMe_relation trigger
					limit = { has_secret_relation_lover = root }
					any_secret = {
						secret_type = secret_lover
						secret_target = { this = root }
						local_player_knows_this_secret = yes
					}
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_liege_male_lover
		trigger = {
			scope:second = {
				has_relation_lover = root
				is_female = no
				any_vassal_or_below = {
					this = root
				}
				trigger_if = { # not reflected in has_RelationToMe_relation trigger
					limit = { has_secret_relation_lover = root }
					any_secret = {
						secret_type = secret_lover
						secret_target = { this = root }
						local_player_knows_this_secret = yes
					}
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_lover_female
		trigger = {
			scope:second = {
				any_relation = {
					type = lover
					this = root
				}
				is_female = yes
				trigger_if = { # not reflected in has_RelationToMe_relation trigger
					limit = { has_secret_relation_lover = root }
					any_secret = {
						secret_type = secret_lover
						secret_target = { this = root }
						local_player_knows_this_secret = yes
					}
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_lover_male
		trigger = {
			scope:second = {
				any_relation = {
					type = lover
					this = root
				}
				is_female = no
				trigger_if = { # not reflected in has_RelationToMe_relation trigger
					limit = { has_secret_relation_lover = root }
					any_secret = {
						secret_type = secret_lover
						secret_target = { this = root }
						local_player_knows_this_secret = yes
					}
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_friend_female
		trigger = {
			scope:second = {
				has_relation_friend = root
				is_female = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_friend_male
		trigger = {
			scope:second = {
				has_relation_friend = root
				is_female = no
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_liege_female_rival
		trigger = {
			scope:second = {
				has_relation_rival = root
				is_female = yes
				any_vassal_or_below = {
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_liege_male_rival
		trigger = {
			scope:second = {
				has_relation_rival = root
				is_female = no
				any_vassal_or_below = {
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_vassal_female_rival
		trigger = {
			scope:second = {
				is_female = yes
				has_relation_rival = root				
			}
			any_vassal_or_below = {
				this = scope:second
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_vassal_male_rival
		trigger = {
			scope:second = {
				is_female = no
				has_relation_rival = root				
			}
			any_vassal_or_below = {
				this = scope:second
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_rival_female
		trigger = {
			scope:second = {
				any_relation = {
					type = rival
					this = root
				}
				is_female = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_rival_male
		trigger = {
			scope:second = {
				any_relation = {
					type = rival
					this = root
				}
				is_female = no
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_crush
		trigger = {
			any_relation = {
				type = crush
				this = scope:second
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_bully
		trigger = {
			scope:second = {
				any_relation = {
					type = victim
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_victim
		trigger = {
			scope:second = {
				any_relation = {
					type = bully
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_ward
		trigger = {
			scope:second = {
				any_relation = {
					type = guardian
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_guardian
		trigger = {
			scope:second = {
				any_relation = {
					type = ward
					this = root
				}
			}
		}
	}

	text = { #intrigue-mentor
		localization_key = CustomLoc_FR_OnA_Relation_mentor
		trigger = {
			scope:second = {
				any_relation = {
					type = intrigue_student
					this = root
				}
			}
		}
	}

	text = { #intrigue-mentor
		localization_key = CustomLoc_FR_OnA_Relation_student
		trigger = {
			scope:second = {
				any_relation = {
					type = intrigue_mentor
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_mentor
		trigger = {
			scope:second = {
				any_relation = {
					type = student
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_student
		trigger = {
			scope:second = {
				any_relation = {
					type = mentor
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_sisterinlaw
		trigger = {
			scope:second = {
				is_female = yes
				any_sibling = {
					any_spouse = {
						this = root
					}
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_brotherinlaw
		trigger = {
			scope:second = {
				is_female = no
				any_sibling = {
					any_spouse = {
						this = root
					}
				}
			}
		}
	}


	text = {
		localization_key = CustomLoc_FR_OnA_Relation_liege_female
		trigger = {
			scope:second = {
				is_female = yes
				OR = {
					any_vassal_or_below = {
						this = root
					}
					any_courtier = {
						this = root
					}
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_liege_male
		trigger = {
			scope:second = {
				is_female = no
				OR = {
					any_vassal_or_below = {
						this = root
					}
					any_courtier = {
						this = root
					}
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_councillor_female
		trigger = {
			scope:second = {
				is_female = yes			
				is_councillor_of = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_councillor_male
		trigger = {
			scope:second = {
				is_female = no				
				is_councillor_of = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_court_physician_female
		trigger = {
			scope:second = { is_female = yes }
			has_relation_court_physician = scope:second
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_court_physician_male
		trigger = {
			scope:second = { is_male = yes }
			has_relation_court_physician = scope:second
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_vassal_female
		trigger = {
			scope:second = {
				is_female = yes			
			}
			any_vassal_or_below = {
				this = scope:second
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_vassal_male
		trigger = {
			scope:second = {
				is_female = no				
			}
			any_vassal_or_below = {
				this = scope:second
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_knight
		trigger = {
			scope:second = { is_knight_of = root }
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_kinswoman
		trigger = {
			scope:second = { is_female = yes }
			scope:second.dynasty = root.dynasty
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_kinsman
		trigger = {
			scope:second = { is_male = yes }
			scope:second.dynasty = root.dynasty
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_courtier_female
		trigger = {
			scope:second = {
				is_courtier_of = root
				is_female = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_courtier_male
		trigger = {
			scope:second = {
				is_courtier_of = root
				is_male = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_peasant_affair_female
		trigger = {
			any_owned_story = {
				story_type = story_peasant_affair
				var:peasant_character = {
					this = scope:second
					is_female = yes
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_peasant_affair_male
		trigger = {
			any_owned_story = {
				story_type = story_peasant_affair
				var:peasant_character = {
					this = scope:second
					is_male = yes
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_agent
		trigger = {
			any_scheme = {
				scheme_is_character_agent = scope:second
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_host_female
		trigger = {
			exists = host
			host = scope:second
			scope:second = { is_female = yes }
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_host_male
		trigger = {
			exists = host
			host = scope:second
			scope:second = { is_male = yes }
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_prisoner_female
		trigger = {
			scope:second = {
				is_female = yes
				is_imprisoned_by = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_prisoner_male
		trigger = {
			scope:second = {
				is_male = yes
				is_imprisoned_by = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_jailer_female
		trigger = {
			is_imprisoned_by = scope:second
			scope:second = {
				is_female = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_jailer_male
		trigger = {
			is_imprisoned_by = scope:second
			scope:second = {
				is_male = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_guest_female
		trigger = {
			scope:second = {
				is_female = yes
				exists = host
				host = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_guest_male
		trigger = {
			scope:second = {
				is_male = yes
				exists = host
				host = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_acquaintance_female
		trigger = {
			scope:second = {
				is_female = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_acquaintance_male
		trigger = {
			scope:second = {
				is_male = yes
			}
		}
	}
}

FR_RelationToMe_Le = {
	type = character

	text = {
		localization_key = CustomLoc_FR_Le_Relation_motherwife
		trigger = {
			scope:second = {
				OR = {
					this = root.mother
					this = root.mother.mother
					this = root.father.mother
				}
				any_spouse = { this = root }
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_mother_concubine
		trigger = {
			scope:second = {
				OR = {
					this = root.mother
					this = root.mother.mother
					this = root.father.mother
				}
				any_consort = { this = root }
				is_concubine = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_sisterwife
		trigger = {
			scope:second = {
				any_sibling = { this = root }
				is_female = yes
				any_spouse = { this = root }
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_sister_concubine
		trigger = {
			scope:second = {
				any_sibling = { this = root }
				is_female = yes
				any_consort = { this = root }
				is_concubine = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_daughterwife
		trigger = {
			scope:second = {
				OR = {
					any_parent = { this = root }
					any_parent = { any_parent = { this = root } }
				}
				is_female = yes
				any_spouse = { this = root }
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_daughter_concubine
		trigger = {
			scope:second = {
				OR = {
					any_parent = { this = root }
					any_parent = { any_parent = { this = root } }
				}
				any_consort = { this = root }
				is_female = yes
				is_concubine = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_fatherhusband
		trigger = {
			scope:second = {
				OR = {
					this = root.father
					this = root.father.father
					this = root.mother.father
				}
				any_spouse = { this = root }
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_father_consort
		trigger = {
			scope:second = {
				OR = {
					this = root.father
					this = root.father.father
					this = root.mother.father
				}
				any_consort = { this = root }
				is_concubine = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_brotherhusband
		trigger = {
			scope:second = {
				any_sibling = { this = root }
				is_female = no
				any_spouse = { this = root }
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_brother_consort
		trigger = {
			scope:second = {
				any_sibling = { this = root }
				is_female = no
				any_consort = { this = root }
				is_concubine = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_sonhusband
		trigger = {
			scope:second = {
				OR = {
					any_parent = { this = root }
					any_parent = {
						even_if_dead = yes
						any_parent = {
							this = root
						}
					}
				}
				is_female = no
				any_spouse = { this = root }
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_son_consort
		trigger = {
			scope:second = {
				OR = {
					any_parent = { this = root }
					any_parent = {
						even_if_dead = yes
						any_parent = {
							this = root
						}
					}
				}
				is_female = no
				any_consort = { this = root }
				is_concubine = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_wife
		trigger = {
			scope:second = {
				is_female = yes
				any_spouse = {
					even_if_dead = yes
					this = root
				}
				is_alive = yes
				is_concubine = no
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_husband
		trigger = {
			scope:second = {
				is_male = yes
				any_spouse = {
					even_if_dead = yes
					this = root
				}
				is_alive = yes
				is_concubine = no
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_wife_departed
		trigger = {
			scope:second = {
				is_female = yes
				any_spouse = {
					even_if_dead = yes
					this = root
				}
				is_alive = no
				is_concubine = no
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_husband_departed
		trigger = {
			scope:second = {
				is_male = yes
				any_spouse = {
					even_if_dead = yes
					this = root
				}
				is_alive = no
				is_concubine = no
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_mother
		trigger = {
			scope:second = {
				is_female = yes
				any_child = {
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_father
		trigger = {
			scope:second = {
				is_female = no
				any_child = {
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_heir_daughter
		trigger = {
			exists = player_heir
			player_heir = scope:second
			scope:second = {
				is_female = yes
				is_child_of = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_heir_son
		trigger = {
			exists = player_heir
			player_heir = scope:second
			scope:second = {
				is_male = yes
				is_child_of = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_daughter
		trigger = {
			scope:second = {
				is_female = yes
				is_child_of = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_son
		trigger = {
			scope:second = {
				is_female = no
				is_child_of = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_grandmother
		trigger = {
			scope:second = {
				is_female = yes
				is_grandparent_of = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_grandfather
		trigger = {
			scope:second = {
				is_male = yes
				is_grandparent_of = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_granddaughter
		trigger = {
			scope:second = {
				is_female = yes
				is_grandchild_of = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_grandson
		trigger = {
			scope:second = {
				is_female = no
				is_grandchild_of = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_half_sister
		trigger = {
			scope:second = {
				is_female = yes
				any_sibling = {
					this = root
				}
				any_parent = { NOT = { is_parent_of = root } }
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_half_brother
		trigger = {
			scope:second = {
				is_female = no
				any_sibling = {
					this = root
				}
				any_parent = { NOT = { is_parent_of = root } }
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_sister_rival
		trigger = {
			scope:second = {
				has_relation_rival = root
				is_female = yes
				any_sibling = {
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_brother_rival
		trigger = {
			scope:second = {
				has_relation_rival = root
				is_female = no
				any_sibling = {
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_sister_friend
		trigger = {
			scope:second = {
				is_female = yes
				any_relation = {
					type = friend
					this = root
				}
				any_sibling = {
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_brother_friend
		trigger = {
			scope:second = {
				is_female = no
				any_relation = {
					type = friend
					this = root
				}
				any_sibling = {
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_sister_bully
		trigger = {
			scope:second = {
				is_female = yes
				any_relation = {
					type = victim
					this = root
				}
				any_sibling = {
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_brother_bully
		trigger = {
			scope:second = {
				is_female = no
				any_relation = {
					type = victim
					this = root
				}
				any_sibling = {
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_sister_victim
		trigger = {
			scope:second = {
				is_female = yes
				any_relation = {
					type = bully
					this = root
				}
				any_sibling = {
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_brother_victim
		trigger = {
			scope:second = {
				is_female = no
				any_relation = {
					type = bully
					this = root
				}
				any_sibling = {
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_sister
		trigger = {
			scope:second = {
				is_female = yes
				is_sibling_of = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_brother
		trigger = {
			scope:second = {
				is_female = no
				is_sibling_of = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_niece
		trigger = {
			scope:second = {
				is_female = yes
				is_sibling_child_of_root_trigger = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_nephew
		trigger = {
			scope:second = {
				is_female = no
				is_sibling_child_of_root_trigger = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_aunt
		trigger = {
			scope:second = {
				is_female = yes
				is_parent_sibling_of_root_trigger = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_uncle
		trigger = {
			scope:second = {
				is_female = no
				is_parent_sibling_of_root_trigger = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_concubine_female
		trigger = {
			scope:second = {
				is_female = yes
				any_consort = { this = root }
				is_concubine = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_concubine_male
		trigger = {
			scope:second = {
				is_male = yes
				any_consort = { this = root }
				is_concubine = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_religious_head
		trigger = {
			faith.religious_head = scope:second
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_great_grandfather
		trigger = {
			scope:second = {
				is_male = yes
				is_great_grandparent_of = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_great_grandmother
		trigger = {
			scope:second = {
				is_female = yes
				is_great_grandparent_of = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_greatgranddaughter
		trigger = {
			scope:second = {
				is_female = yes
				is_great_grandchild_of = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_greatgrandson
		trigger = {
			scope:second = {
				is_female = no
				is_great_grandchild_of = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_daughter_in_law
		trigger = {
			scope:second = {
				is_female = yes
				any_spouse = {
					is_child_of = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_son_in_law
		trigger = {
			scope:second = {
				is_female = no
				any_spouse = {
					is_child_of = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_cousin
		trigger = {
			scope:second = {
				is_cousin_of_root_trigger = yes
				is_male = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_cousin_female
		trigger = {
			scope:second = {
				is_cousin_of_root_trigger = yes
				is_female = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_stepdaughter
		trigger = {
			scope:second = {
				is_female = yes
				any_parent = {
					any_spouse = {
						this = root
						NOT = { is_parent_of = scope:second }
					}
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_stepson
		trigger = {
			scope:second = {
				is_male = yes
				any_parent = {
					any_spouse = {
						this = root
						NOT = { is_parent_of = scope:second }
					}
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_stepsister
		trigger = {
			scope:second = {
				is_female = yes
				any_parent = {
					any_spouse = {
						any_child = {
							this = root
							NOT = { is_sibling_of = scope:second }
						}
					}
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_stepbrother
		trigger = {
			scope:second = {
				is_male = yes
				any_parent = {
					any_spouse = {
						any_child = {
							this = root
							NOT = { is_sibling_of = scope:second }
						}
					}
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_stepmother
		trigger = {
			scope:second = {
				is_female = yes
				any_spouse = {
					any_child = {
						this = root
						NOT = { is_child_of = scope:second }
					}
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_stepfather
		trigger = {
			scope:second = {
				is_male = yes
				any_spouse = {
					any_child = {
						this = root
						NOT = { is_child_of = scope:second }
					}
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_liege_female_lover
		trigger = {
			scope:second = {
				has_relation_lover = root
				is_female = yes
				any_vassal_or_below = {
					this = root
				}
				trigger_if = { # not reflected in has_RelationToMe_relation trigger
					limit = { has_secret_relation_lover = root }
					any_secret = {
						secret_type = secret_lover
						secret_target = { this = root }
						local_player_knows_this_secret = yes
					}
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_liege_male_lover
		trigger = {
			scope:second = {
				has_relation_lover = root
				is_female = no
				any_vassal_or_below = {
					this = root
				}
				trigger_if = { # not reflected in has_RelationToMe_relation trigger
					limit = { has_secret_relation_lover = root }
					any_secret = {
						secret_type = secret_lover
						secret_target = { this = root }
						local_player_knows_this_secret = yes
					}
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_lover_female
		trigger = {
			scope:second = {
				any_relation = {
					type = lover
					this = root
				}
				is_female = yes
				trigger_if = { # not reflected in has_RelationToMe_relation trigger
					limit = { has_secret_relation_lover = root }
					any_secret = {
						secret_type = secret_lover
						secret_target = { this = root }
						local_player_knows_this_secret = yes
					}
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_lover_male
		trigger = {
			scope:second = {
				any_relation = {
					type = lover
					this = root
				}
				is_female = no
				trigger_if = { # not reflected in has_RelationToMe_relation trigger
					limit = { has_secret_relation_lover = root }
					any_secret = {
						secret_type = secret_lover
						secret_target = { this = root }
						local_player_knows_this_secret = yes
					}
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_friend_female
		trigger = {
			scope:second = {
				has_relation_friend = root
				is_female = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_friend_male
		trigger = {
			scope:second = {
				has_relation_friend = root
				is_female = no
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_liege_female_rival
		trigger = {
			scope:second = {
				has_relation_rival = root
				is_female = yes
				any_vassal_or_below = {
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_liege_male_rival
		trigger = {
			scope:second = {
				has_relation_rival = root
				is_female = no
				any_vassal_or_below = {
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_vassal_female_rival
		trigger = {
			scope:second = {
				is_female = yes
				has_relation_rival = root				
			}
			any_vassal_or_below = {
				this = scope:second
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_vassal_male_rival
		trigger = {
			scope:second = {
				is_female = no
				has_relation_rival = root				
			}
			any_vassal_or_below = {
				this = scope:second
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_rival_female
		trigger = {
			scope:second = {
				any_relation = {
					type = rival
					this = root
				}
				is_female = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_rival_male
		trigger = {
			scope:second = {
				any_relation = {
					type = rival
					this = root
				}
				is_female = no
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_crush
		trigger = {
			any_relation = {
				type = crush
				this = scope:second
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_bully
		trigger = {
			scope:second = {
				any_relation = {
					type = victim
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_victim
		trigger = {
			scope:second = {
				any_relation = {
					type = bully
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_ward
		trigger = {
			scope:second = {
				any_relation = {
					type = guardian
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_guardian
		trigger = {
			scope:second = {
				any_relation = {
					type = ward
					this = root
				}
			}
		}
	}

	text = { #intrigue-mentor
		localization_key = CustomLoc_FR_Le_Relation_mentor
		trigger = {
			scope:second = {
				any_relation = {
					type = intrigue_student
					this = root
				}
			}
		}
	}

	text = { #intrigue-mentor
		localization_key = CustomLoc_FR_Le_Relation_student
		trigger = {
			scope:second = {
				any_relation = {
					type = intrigue_mentor
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_mentor
		trigger = {
			scope:second = {
				any_relation = {
					type = student
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_student
		trigger = {
			scope:second = {
				any_relation = {
					type = mentor
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_sisterinlaw
		trigger = {
			scope:second = {
				is_female = yes
				any_sibling = {
					any_spouse = {
						this = root
					}
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_brotherinlaw
		trigger = {
			scope:second = {
				is_female = no
				any_sibling = {
					any_spouse = {
						this = root
					}
				}
			}
		}
	}


	text = {
		localization_key = CustomLoc_FR_Le_Relation_liege_female
		trigger = {
			scope:second = {
				is_female = yes
				OR = {
					any_vassal_or_below = {
						this = root
					}
					any_courtier = {
						this = root
					}
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_liege_male
		trigger = {
			scope:second = {
				is_female = no
				OR = {
					any_vassal_or_below = {
						this = root
					}
					any_courtier = {
						this = root
					}
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_councillor_female
		trigger = {
			scope:second = {
				is_female = yes			
				is_councillor_of = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_councillor_male
		trigger = {
			scope:second = {
				is_female = no				
				is_councillor_of = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_court_physician_female
		trigger = {
			scope:second = { is_female = yes }
			has_relation_court_physician = scope:second
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_court_physician_male
		trigger = {
			scope:second = { is_male = yes }
			has_relation_court_physician = scope:second
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_vassal_female
		trigger = {
			scope:second = {
				is_female = yes			
			}
			any_vassal_or_below = {
				this = scope:second
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_vassal_male
		trigger = {
			scope:second = {
				is_female = no				
			}
			any_vassal_or_below = {
				this = scope:second
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_knight
		trigger = {
			scope:second = { is_knight_of = root }
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_kinswoman
		trigger = {
			scope:second = { is_female = yes }
			scope:second.dynasty = root.dynasty
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_kinsman
		trigger = {
			scope:second = { is_male = yes }
			scope:second.dynasty = root.dynasty
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_courtier_female
		trigger = {
			scope:second = {
				is_courtier_of = root
				is_female = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_courtier_male
		trigger = {
			scope:second = {
				is_courtier_of = root
				is_male = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_peasant_affair_female
		trigger = {
			any_owned_story = {
				story_type = story_peasant_affair
				var:peasant_character = {
					this = scope:second
					is_female = yes
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_peasant_affair_male
		trigger = {
			any_owned_story = {
				story_type = story_peasant_affair
				var:peasant_character = {
					this = scope:second
					is_male = yes
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_agent
		trigger = {
			any_scheme = {
				scheme_is_character_agent = scope:second
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_host_female
		trigger = {
			exists = host
			host = scope:second
			scope:second = { is_female = yes }
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_host_male
		trigger = {
			exists = host
			host = scope:second
			scope:second = { is_male = yes }
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_prisoner_female
		trigger = {
			scope:second = {
				is_female = yes
				is_imprisoned_by = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_prisoner_male
		trigger = {
			scope:second = {
				is_male = yes
				is_imprisoned_by = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_jailer_female
		trigger = {
			is_imprisoned_by = scope:second
			scope:second = {
				is_female = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_jailer_male
		trigger = {
			is_imprisoned_by = scope:second
			scope:second = {
				is_male = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_guest_female
		trigger = {
			scope:second = {
				is_female = yes
				exists = host
				host = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_guest_male
		trigger = {
			scope:second = {
				is_male = yes
				exists = host
				host = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_acquaintance_female
		trigger = {
			scope:second = {
				is_female = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_Le_Relation_acquaintance_male
		trigger = {
			scope:second = {
				is_male = yes
			}
		}
	}
}

FR_RelationToMeShort_OnA = {
	type = character

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_motherwife
		trigger = {
			scope:second = {
				OR = {
					this = root.mother
					this = root.mother.mother
					this = root.father.mother
				}
				any_spouse = { this = root }
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_mother_concubine
		trigger = {
			scope:second = {
				OR = {
					this = root.mother
					this = root.mother.mother
					this = root.father.mother
				}
				any_consort = { this = root }
				is_concubine = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_sisterwife
		trigger = {
			scope:second = {
				any_sibling = { this = root }
				is_female = yes
				any_spouse = { this = root }
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_sister_concubine
		trigger = {
			scope:second = {
				any_sibling = { this = root }
				is_female = yes
				any_consort = { this = root }
				is_concubine = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_daughterwife
		trigger = {
			scope:second = {
				OR = {
					any_parent = { this = root }
					any_parent = { any_parent = { this = root } }
				}
				is_female = yes
				any_spouse = { this = root }
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_daughter_concubine
		trigger = {
			scope:second = {
				OR = {
					any_parent = { this = root }
					any_parent = { any_parent = { this = root } }
				}
				any_consort = { this = root }
				is_female = yes
				is_concubine = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_fatherhusband
		trigger = {
			scope:second = {
				OR = {
					this = root.father
					this = root.father.father
					this = root.mother.father
				}
				any_spouse = { this = root }
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_father_consort
		trigger = {
			scope:second = {
				OR = {
					this = root.father
					this = root.father.father
					this = root.mother.father
				}
				any_consort = { this = root }
				is_concubine = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_brotherhusband
		trigger = {
			scope:second = {
				any_sibling = { this = root }
				is_female = no
				any_spouse = { this = root }
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_brother_consort
		trigger = {
			scope:second = {
				any_sibling = { this = root }
				is_female = no
				any_consort = { this = root }
				is_concubine = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_sonhusband
		trigger = {
			scope:second = {
				OR = {
					any_parent = { this = root }
					any_parent = {
						even_if_dead = yes
						any_parent = {
							this = root
						}
					}
				}
				is_female = no
				any_spouse = { this = root }
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_son_consort
		trigger = {
			scope:second = {
				OR = {
					any_parent = { this = root }
					any_parent = {
						even_if_dead = yes
						any_parent = {
							this = root
						}
					}
				}
				is_female = no
				any_consort = { this = root }
				is_concubine = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_wife
		trigger = {
			scope:second = {
				is_female = yes
				any_spouse = {
					even_if_dead = yes
					this = root
				}
				is_alive = yes
				is_concubine = no
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_husband
		trigger = {
			scope:second = {
				is_male = yes
				any_spouse = {
					even_if_dead = yes
					this = root
				}
				is_alive = yes
				is_concubine = no
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_wife
		trigger = {
			scope:second = {
				is_female = yes
				any_spouse = {
					even_if_dead = yes
					this = root
				}
				is_alive = no
				is_concubine = no
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_husband
		trigger = {
			scope:second = {
				is_male = yes
				any_spouse = {
					even_if_dead = yes
					this = root
				}
				is_alive = no
				is_concubine = no
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_mother
		trigger = {
			scope:second = {
				is_female = yes
				any_child = {
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_father
		trigger = {
			scope:second = {
				is_female = no
				any_child = {
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_daughter
		trigger = {
			scope:second = {
				is_female = yes
				is_child_of = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_son
		trigger = {
			scope:second = {
				is_male = yes
				is_child_of = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_grandmother
		trigger = {
			scope:second = {
				is_female = yes
				is_grandparent_of = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_grandfather
		trigger = {
			scope:second = {
				is_male = yes
				is_grandparent_of = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_granddaughter
		trigger = {
			scope:second = {
				is_female = yes
				any_parent = {
					even_if_dead = yes
					any_parent = {
						this = root
					}
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_grandson
		trigger = {
			scope:second = {
				is_female = no
				any_parent = {
					even_if_dead = yes
					any_parent = {
						this = root
					}
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_sister
		trigger = {
			scope:second = {
				is_female = yes
				any_sibling = {
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_brother
		trigger = {
			scope:second = {
				is_female = no
				any_sibling = {
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_niece
		trigger = {
			scope:second = {
				is_female = yes
				is_sibling_child_of_root_trigger = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_nephew
		trigger = {
			scope:second = {
				is_female = no
				is_sibling_child_of_root_trigger = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_aunt
		trigger = {
			scope:second = {
				is_female = yes
				is_parent_sibling_of_root_trigger = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_uncle
		trigger = {
			scope:second = {
				is_female = no
				is_parent_sibling_of_root_trigger = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_concubine_female
		trigger = {
			scope:second = {
				is_female = yes
				any_consort = { this = root }
				is_concubine = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_concubine_male
		trigger = {
			scope:second = {
				is_male = yes
				any_consort = { this = root }
				is_concubine = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_great_grandmother
		trigger = {
			scope:second = {
				is_female = yes
				is_great_grandparent_of = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_great_grandfather
		trigger = {
			scope:second = {
				is_male = yes
				is_great_grandparent_of = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_religious_head
		trigger = {
			faith.religious_head = scope:second
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_greatgranddaughter
		trigger = {
			scope:second = {
				is_female = yes
				any_parent = {
					even_if_dead = yes
					any_parent = {
						even_if_dead = yes
						any_parent = {
							this = root
						}
					}
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_greatgrandson
		trigger = {
			scope:second = {
				is_female = no
				any_parent = {
					even_if_dead = yes
					any_parent = {
						even_if_dead = yes
						any_parent = {
							this = root
						}
					}
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_cousin
		trigger = {
			scope:second = {
				is_cousin_of_root_trigger = yes
				is_male = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_cousin_female
		trigger = {
			scope:second = {
				is_cousin_of_root_trigger = yes
				is_female = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_daughter_in_law
		trigger = {
			scope:second = {
				is_female = yes
				any_spouse = {
					is_child_of = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_son_in_law
		trigger = {
			scope:second = {
				is_female = no
				any_spouse = {
					is_child_of = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_lover_female
		trigger = {
			scope:second = {
				any_relation = {
					type = lover
					this = root
				}
				is_female = yes
				trigger_if = { # not reflected in has_RelationToMe_relation trigger
					limit = { has_secret_relation_lover = root }
					any_secret = {
						secret_type = secret_lover
						secret_target = { this = root }
						local_player_knows_this_secret = yes
					}
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_lover_male
		trigger = {
			scope:second = {
				any_relation = {
					type = lover
					this = root
				}
				is_female = no
				trigger_if = { # not reflected in has_RelationToMe_relation trigger
					limit = { has_secret_relation_lover = root }
					any_secret = {
						secret_type = secret_lover
						secret_target = { this = root }
						local_player_knows_this_secret = yes
					}
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_friend_female
		trigger = {
			scope:second = {
				has_relation_friend = root
				is_female = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_friend_male
		trigger = {
			scope:second = {
				has_relation_friend = root
				is_female = no
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_rival_female
		trigger = {
			scope:second = {
				any_relation = {
					type = rival
					this = root
				}
				is_female = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_rival_male
		trigger = {
			scope:second = {
				any_relation = {
					type = rival
					this = root
				}
				is_female = no
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_crush
		trigger = {
			any_relation = {
				type = crush
				this = scope:second
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_bully
		trigger = {
			scope:second = {
				any_relation = {
					type = victim
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_victim
		trigger = {
			scope:second = {
				any_relation = {
					type = bully
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_ward
		trigger = {
			scope:second = {
				any_relation = {
					type = guardian
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_guardian
		trigger = {
			scope:second = {
				any_relation = {
					type = ward
					this = root
				}
			}
		}
	}

	text = { #intrigue-mentor
		localization_key = CustomLoc_FR_OnA_Relation_mentor
		trigger = {
			scope:second = {
				any_relation = {
					type = intrigue_student
					this = root
				}
			}
		}
	}

	text = { #intrigue-mentor
		localization_key = CustomLoc_FR_OnA_Relation_student
		trigger = {
			scope:second = {
				any_relation = {
					type = intrigue_mentor
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_mentor
		trigger = {
			scope:second = {
				any_relation = {
					type = student
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_student
		trigger = {
			scope:second = {
				any_relation = {
					type = mentor
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_sisterinlaw
		trigger = {
			scope:second = {
				is_female = yes
				is_sibling_in_law_of_root_trigger = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_brotherinlaw
		trigger = {
			scope:second = {
				is_female = no
				is_sibling_in_law_of_root_trigger = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_stepdaughter
		trigger = {
			scope:second = {
				is_female = yes
				any_parent = {
					any_spouse = {
						this = root
						NOT = { is_parent_of = scope:second }
					}
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_stepson
		trigger = {
			scope:second = {
				is_male = yes
				any_parent = {
					any_spouse = {
						this = root
						NOT = { is_parent_of = scope:second }
					}
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_stepsister
		trigger = {
			scope:second = {
				is_female = yes
				any_parent = {
					any_spouse = {
						any_child = {
							this = root
							NOT = { is_sibling_of = scope:second }
						}
					}
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_stepbrother
		trigger = {
			scope:second = {
				is_male = yes
				any_parent = {
					any_spouse = {
						any_child = {
							this = root
							NOT = { is_sibling_of = scope:second }
						}
					}
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_stepmother
		trigger = {
			scope:second = {
				is_female = yes
				any_spouse = {
					any_child = {
						this = root
						NOT = { is_child_of = scope:second }
					}
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_stepfather
		trigger = {
			scope:second = {
				is_male = yes
				any_spouse = {
					any_child = {
						this = root
						NOT = { is_child_of = scope:second }
					}
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_liege_female
		trigger = {
			scope:second = {
				is_female = yes
				any_vassal_or_below = {
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_liege_male
		trigger = {
			scope:second = {
				is_female = no
				any_vassal_or_below = {
					this = root
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_vassal_female
		trigger = {
			scope:second = {
				is_female = yes			
			}
			any_vassal_or_below = {
				this = scope:second
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_vassal_male
		trigger = {
			scope:second = {
				is_female = no				
			}
			any_vassal_or_below = {
				this = scope:second
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_councillor_female
		trigger = {
			scope:second = {
				is_female = yes			
				is_councillor_of = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_councillor_male
		trigger = {
			scope:second = {
				is_female = no				
				is_councillor_of = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_court_physician_female
		trigger = {
			scope:second = { is_female = yes }
			has_relation_court_physician = scope:second
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_court_physician_male
		trigger = {
			scope:second = { is_male = yes }
			has_relation_court_physician = scope:second
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_knight
		trigger = {
			scope:second = { is_knight_of = root }
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_kinswoman
		trigger = {
			scope:second = { is_female = yes }
			scope:second.dynasty = root.dynasty
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_kinsman
		trigger = {
			scope:second = { is_male = yes }
			scope:second.dynasty = root.dynasty
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_courtier_female
		trigger = {
			scope:second = {
				is_courtier_of = root
				is_female = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_courtier_male
		trigger = {
			scope:second = {
				is_courtier_of = root
				is_male = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_peasant_affair_female
		trigger = {
			any_owned_story = {
				story_type = story_peasant_affair
				var:peasant_character = {
					this = scope:second
					is_female = yes
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_peasant_affair_male
		trigger = {
			any_owned_story = {
				story_type = story_peasant_affair
				var:peasant_character = {
					this = scope:second
					is_male = yes
				}
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_agent
		trigger = {
			any_scheme = {
				scheme_is_character_agent = scope:second
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_host_female
		trigger = {
			exists = host
			host = scope:second
			scope:second = { is_female = yes }
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_host_male
		trigger = {
			exists = host
			host = scope:second
			scope:second = { is_male = yes }
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_prisoner_female
		trigger = {
			scope:second = {
				is_female = yes
				is_imprisoned_by = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_prisoner_male
		trigger = {
			scope:second = {
				is_male = yes
				is_imprisoned_by = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_jailer_female
		trigger = {
			is_imprisoned_by = scope:second
			scope:second = {
				is_female = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_jailer_male
		trigger = {
			is_imprisoned_by = scope:second
			scope:second = {
				is_male = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_guest_female
		trigger = {
			scope:second = {
				is_female = yes
				exists = host
				host = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_guest_male
		trigger = {
			scope:second = {
				is_male = yes
				exists = host
				host = root
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_acquaintance_female
		trigger = {
			scope:second = {
				is_female = yes
			}
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_Relation_acquaintance_male
		trigger = {
			scope:second = {
				is_male = yes
			}
		}
	}
}

FR_Du_signature_weapon = {
	type = character

	text = {
		localization_key = CustomLoc_FR_Du_signature_weapon_sword
		trigger = {
			var:signature_weapon = flag:sword
		}
		fallback = yes
	}

	text = {
		localization_key = CustomLoc_FR_Du_signature_weapon_mace
		trigger = {
			var:signature_weapon = flag:mace
		}
	}

	text = {
		localization_key = CustomLoc_FR_Du_signature_weapon_axe
		trigger = {
			var:signature_weapon = flag:axe
		}
	}

	text = {
		localization_key = CustomLoc_FR_Du_signature_weapon_hammer
		trigger = {
			var:signature_weapon = flag:hammer
		}
	}

	text = {
		localization_key = CustomLoc_FR_Du_signature_weapon_spear
		trigger = {
			var:signature_weapon = flag:spear
		}
	}

	text = {
		localization_key = CustomLoc_FR_Du_signature_weapon_dagger
		trigger = {
			var:signature_weapon = flag:dagger
		}
	}
}

FR_OnA_signature_weapon = {
	type = character

	text = {
		localization_key = CustomLoc_FR_OnA_signature_weapon_sword
		trigger = {
			var:signature_weapon = flag:sword
		}
		fallback = yes
	}

	text = {
		localization_key = CustomLoc_FR_OnA_signature_weapon_mace
		trigger = {
			var:signature_weapon = flag:mace
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_signature_weapon_axe
		trigger = {
			var:signature_weapon = flag:axe
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_signature_weapon_hammer
		trigger = {
			var:signature_weapon = flag:hammer
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_signature_weapon_spear
		trigger = {
			var:signature_weapon = flag:spear
		}
	}

	text = {
		localization_key = CustomLoc_FR_OnA_signature_weapon_dagger
		trigger = {
			var:signature_weapon = flag:dagger
		}
	}
}

FR_Un_signature_weapon = {
	type = character

	text = {
		localization_key = CustomLoc_FR_Un_signature_weapon_sword
		trigger = {
			var:signature_weapon = flag:sword
		}
		fallback = yes
	}

	text = {
		localization_key = CustomLoc_FR_Un_signature_weapon_mace
		trigger = {
			var:signature_weapon = flag:mace
		}
	}

	text = {
		localization_key = CustomLoc_FR_Un_signature_weapon_axe
		trigger = {
			var:signature_weapon = flag:axe
		}
	}

	text = {
		localization_key = CustomLoc_FR_Un_signature_weapon_hammer
		trigger = {
			var:signature_weapon = flag:hammer
		}
	}

	text = {
		localization_key = CustomLoc_FR_Un_signature_weapon_spear
		trigger = {
			var:signature_weapon = flag:spear
		}
	}

	text = {
		localization_key = CustomLoc_FR_Un_signature_weapon_dagger
		trigger = {
			var:signature_weapon = flag:dagger
		}
	}
}

FR_CompositionType_lela = {
	type = character

	text = {
		trigger = { var:composition_type = flag:song }
		localization_key = FR_CompositionType_song_lela
	}
	text = {
		trigger = { var:composition_type = flag:chronicle }
		localization_key = FR_CompositionType_chronicle_lela
	}
	text = {
		trigger = { var:composition_type = flag:poem }
		localization_key = FR_CompositionType_poem_lela
	}
}

FR_FaithGenderedAdj = { 
	type = character
	text = {
		trigger = {
			trigger_if = {
				limit = { 
					exists = this
				}
				this = { is_female = yes }
			}
		}
		localization_key = CustomLoc_FR_FaithGenderedAdj_female
	}
	text = {
		localization_key = CustomLoc_FR_FaithGenderedAdj_male
		fallback = yes
	}
}

FR_LocalAnimal_e = {
	type = character

	text = {
		localization_key = CustomLoc_FR_E_female
		trigger = {
			var:local_animal = flag:unicorn
		}
	}
	text = {
		localization_key = ""
		fallback = yes
	}
}

FR_LocalAnimal_d = {
	type = character

	text = {
		localization_key = CustomLoc_FR_d
		trigger = {
			var:local_animal = flag:bear
		}
	}
	text = {
		localization_key = CustomLoc_FR_de
		fallback = yes
	}
}

FR_LocalAnimal_he = {
	type = character

	text = {
		localization_key = CustomLoc_FR_He_female
		trigger = {
			var:local_animal = flag:unicorn
		}
	}
	text = {
		localization_key = ""
		fallback = yes
	}
}

FR_LocalAnimal_le = {
	type = character

	text = {
		localization_key = CustomLoc_FR_l
		trigger = {
			var:local_animal = flag:bear
		}
	}
	text = {
		localization_key = CustomLoc_FR_la
		trigger = {
			var:local_animal = flag:unicorn
		}
	}
	text = {
		localization_key = CustomLoc_FR_le
		fallback = yes
	}
}

FR_le_Char_L = { 
	type = character
	text = {
		trigger = {
			holds_landed_title = no
			is_female = no
		}
		localization_key = CustomLoc_FR_le
	}
	text = {
		trigger = {
			holds_landed_title = no
			is_female = yes
		}
		localization_key = CustomLoc_FR_la
	}
	text = {
		localization_key = "[ROOT.Char.Custom('FR_le_Char')]"
		fallback = yes
	}
}

FR_le_Char_U_Pi = { 
	type = character
	text = {
		trigger = {
			is_local_player = yes
		}
		localization_key = ""
	}
	text = {
		trigger = {
			OR = {
				any_spouse = { holds_landed_title = yes }
				holds_landed_title = yes
			}
		}
		localization_key = "[ROOT.Char.Custom('FR_le_Char_P')]"
	}
	text = {
		localization_key = "[ROOT.Char.Custom('FR_le_Char')]"
		fallback = yes
	}
}

FR_le_Char_U_P = { 
	type = character
	text = {
		trigger = {
			is_local_player = yes
		}
		localization_key = ""
	}
	text = {
		localization_key = "[ROOT.Char.Custom('FR_le_Char_P')]"
		fallback = yes
	}
}

FR_le_Char_Pi = { 
	type = character
	text = {
		trigger = {
			OR = {
				any_spouse = { holds_landed_title = yes }
				holds_landed_title = yes
			}
		}
		localization_key = "[ROOT.Char.Custom('FR_le_Char_P')]"
	}
	text = {
		localization_key = "[ROOT.Char.Custom('FR_le_Char')]"
		fallback = yes
	}
}

FR_le_Char_P = { 
	type = character
	text = {
		trigger = { # queen_mother (Reine mère)
			is_female = yes
			has_government = feudal_government
			any_child = { primary_title.tier = tier_kingdom }
			primary_title.tier < tier_kingdom
		}
		localization_key = CustomLoc_FR_la
	}
	text = {
		trigger = {
			OR = {
				AND = { # prince_male_iberian_group (Infant), prince_female_iberian_group (Infante)
					primary_title.tier < tier_kingdom
					culture_group = culture_group:iberian_group
					has_government = feudal_government
					any_parent = { even_if_dead = yes primary_title.tier >= tier_kingdom }
				}
				AND = { # empress_mother (Impératrice mère)
					is_female = yes
					has_government = feudal_government
					any_child = { primary_title.tier = tier_empire }
					primary_title.tier < tier_empire
				}
			}
		}
		localization_key = CustomLoc_FR_l
	}
	text = {
		trigger = { # Prince
			is_female = no
			primary_title.tier < tier_kingdom
			OR = {
				has_government = feudal_government
				has_government = clan_government
			}
			any_parent = { even_if_dead = yes primary_title.tier >= tier_kingdom }
		}
		localization_key = CustomLoc_FR_le
	}
	text = {
		trigger = { # Princesse
			is_female = yes
			primary_title.tier < tier_kingdom
			OR = {
				has_government = feudal_government
				has_government = clan_government
			}
			any_parent = { even_if_dead = yes primary_title.tier >= tier_kingdom }
		}
		localization_key = CustomLoc_FR_la
	}
	text = {
		localization_key = "[ROOT.Char.Custom('FR_le_Char')]"
		fallback = yes
	}
}

FR_le_Char = { 
	type = character
	text = { # chef de foi
		trigger = {
			any_held_title = { is_head_of_faith = yes }
		}
		localization_key = CustomLoc_FR_le
	}
	text = {
		trigger = {
			OR = {
				AND = { # emperor (Empereur), emperor_female (Impératrice)
					highest_held_title_tier = tier_empire
					NOT = {
						culture_group = culture_group:central_germanic_group # Kaiser
						culture = culture:greek # Basileus
						AND = { # emperor_feudal_male_altaic_group (Khagan)
							OR = {
								has_government = feudal_government
								has_government = clan_government
								has_government = tribal_government
							}
							OR = {
								has_culture_group = culture_group:mongolic_group
								has_culture_group = culture_group:turkic_group
							}
						}
					}
				}
				AND = { # duke_theocracy_male_paganism_religion (Archiprêtre), duke_theocracy_female_paganism_religion (Archiprêtresse)
					highest_held_title_tier = tier_duchy
					has_government = theocracy_government
					OR = {
						religion = religion:paganism_religion
						religion = religion:taoism_religion
						religion = religion:bon_religion
						religion = religion:germanic_religion
						religion = religion:tengrism_religion
						religion = religion:west_african_religion
						religion = religion:west_african_bori_religion
						religion = religion:west_african_roog_religion
						religion = religion:zunism_religion
						religion = religion:anatolian_religion
						religion = religion:arabic_religion
						religion = religion:armenian_religion
						religion = religion:berber_religion
						religion = religion:caucasian_religion
						religion = religion:canaanite_religion
						religion = religion:celtic_religion
						religion = religion:dacian_religion
						religion = religion:iberic_religion
						religion = religion:mesopotamian_religion
						religion = religion:scythian_religion
					}
				}
				AND = { # king_feudal_male_uyghur (Idiqut), king_feudal_female_uyghur (Idiqut)
					highest_held_title_tier = tier_kingdom
					culture = culture:uyghur
					OR = {
						has_government = feudal_government
						has_government = clan_government
						has_government = tribal_government
					}
				}
				AND = { # duke_feudal_male_turkish (Atabeg), duke_feudal_female_turkish (Atabegum)
					highest_held_title_tier = tier_duchy
					OR = {
						AND = { 
							exists = top_liege
							top_liege = {
								OR = {
									has_government = feudal_government
									has_government = clan_government
								}
								has_culture = culture:turkish
							}
						}
						AND = {
							NOT = { exists = top_liege }
							OR = {
								has_government = feudal_government
								has_government = clan_government
							}
							has_culture = culture:turkish
						}
					}
				}
				AND = { # duke_feudal_male_sogdian (Ikhshide)
					is_female = no
					culture = culture:sogdian
					highest_held_title_tier = tier_duchy
					OR = {
						has_government = feudal_government
						has_government = clan_government
					}
				}
				AND = {
					trigger_if = {
						limit = { 
							exists = top_liege
						}
						top_liege = {
							OR = {
								culture_group = culture_group:berber_group # duke_feudal_male_berber_group (Émir), duke_feudal_female_berber_group (Émira)
								culture = culture:beja # duke_feudal_male_beja (Émir), duke_feudal_female_beja (Émira)
							}
							OR = {
								has_government = feudal_government
								has_government = clan_government
								has_government = tribal_government
							}
						}
					}
					OR = {
						culture_group = culture_group:berber_group # duke_feudal_male_berber_group (Émir), duke_feudal_female_berber_group (Émira)
						culture = culture:beja # duke_feudal_male_beja (Émir), duke_feudal_female_beja (Émira)
					}
					highest_held_title_tier = tier_duchy
					OR = {
						has_government = feudal_government
						has_government = clan_government
						has_government = tribal_government
					}
				}
				AND = { # duke_feudal_male_arabic_group (Émir), duke_feudal_female_arabic_group (Émira)
					trigger_if = {
						limit = { 
							exists = top_liege
						}
						top_liege = {
							OR = {
								culture_group = culture_group:arabic_group
							}
							OR = {
								has_government = feudal_government
								has_government = clan_government
							}
						}
					}
					OR = {
						culture_group = culture_group:arabic_group
					}
					highest_held_title_tier = tier_duchy
					OR = {
						has_government = feudal_government
						has_government = clan_government
					}
				}
#				AND = {
#					is_female = no
#					highest_held_title_tier = tier_county
#					OR = {
#						AND = { # count_feudal_male_english (Earl)
#							has_government = feudal_government
#							primary_title = { 
#								target_is_de_jure_liege_or_above = title:e_britannia
#								NOT = { target_is_de_jure_liege_or_above = title:k_wales } # count_feudal_male_k_wales (Lord)
#							}
#						}
#						AND = { # count_feudal_male_e_britannia (Earl)
#							OR = {
#								has_government = feudal_government
#								has_government = tribal_government
#							}
#							culture = culture:english
#							culture = culture:anglo_saxon
#							culture = culture:scottish
#						}
#					}
#				}
				AND = { # count_theocracy_male_ismaili (Ayatollah), count_theocracy_female_ismaili (Ayatollah)
					highest_held_title_tier = tier_county
					has_government = theocracy_government
					faith = faith:ismaili
				}
				AND = { # baron_theocracy_male_christianity_religion (Évêque), baron_theocracy_female_christianity_religion (Évêque)
					highest_held_title_tier = tier_barony
					has_government = theocracy_government
					OR = {
						religion = religion:christianity_religion
						religion = religion:dualism_religion
					}
				}
				AND = { # baron_theocracy_male_zoroastrianism_religion (Ervad), baron_theocracy_female_zoroastrianism_religion (Ervad)
					highest_held_title_tier = tier_barony
					has_government = theocracy_government
					religion = religion:zoroastrianism_religion
				}
				AND = { # baron_theocracy_male_west_african_bori_religion (Adjingi)
					highest_held_title_tier = tier_barony
					has_government = theocracy_government
					religion = religion:west_african_bori_religion
				}
				AND = { # baron_feudal_male_iranian_group (Argbadh)
					highest_held_title_tier = tier_barony
					OR = {
						has_government = feudal_government
						has_government = clan_government
					}
					culture_group = culture_group:iranian_group
				}
				primary_title = title:k_austria # archduke (Archiduc), archduchess (Archiduchesse)
			}
		}
		localization_key = CustomLoc_FR_l
	}
	text = {
		trigger = {
			is_female = no
			OR = {
				primary_title.tier >= tier_barony
				any_spouse = { primary_title.tier >= tier_barony }
			}
		}
		localization_key = CustomLoc_FR_le
	}
	text = {
		trigger = {
			is_female = yes
			OR = {
				primary_title.tier >= tier_barony
				any_spouse = { primary_title.tier >= tier_barony }
			}
		}
		localization_key = CustomLoc_FR_la
	}
	text = {
		localization_key = ""
		fallback = yes
	}
}

FR_du_Char_L = { 
	type = character
	text = {
		trigger = {
			holds_landed_title = no
			is_female = no
		}
		localization_key = CustomLoc_FR_du
	}
	text = {
		trigger = {
			holds_landed_title = no
			is_female = yes
		}
		localization_key = CustomLoc_FR_dela
	}
	text = {
		localization_key = "[ROOT.Char.Custom('FR_du_Char')]"
		fallback = yes
	}
}

FR_du_Char_U_Pi = { 
	type = character
	text = {
		trigger = {
			is_local_player = yes
		}
		localization_key = CustomLoc_FR_de
	}
	text = {
		trigger = {
			OR = {
				any_spouse = { holds_landed_title = yes }
				holds_landed_title = yes
			}
		}
		localization_key = "[ROOT.Char.Custom('FR_du_Char_P')]"
	}
	text = {
		localization_key = "[ROOT.Char.Custom('FR_du_Char')]"
		fallback = yes
	}
}

FR_du_Char_U_P = { 
	type = character
	text = {
		trigger = {
			is_local_player = yes
		}
		localization_key = CustomLoc_FR_de
	}
	text = {
		localization_key = "[ROOT.Char.Custom('FR_du_Char_P')]"
		fallback = yes
	}
}

FR_du_Char_Pi = { 
	type = character
	text = {
		trigger = {
			OR = {
				any_spouse = { holds_landed_title = yes }
				holds_landed_title = yes
			}
		}
		localization_key = "[ROOT.Char.Custom('FR_du_Char_P')]"
	}
	text = {
		localization_key = "[ROOT.Char.Custom('FR_du_Char')]"
		fallback = yes
	}
}

FR_du_Char_P = { 
	type = character
	text = {
		trigger = { # queen_mother (Reine mère)
			is_female = yes
			has_government = feudal_government
			any_child = { primary_title.tier = tier_kingdom }
			primary_title.tier < tier_kingdom
		}
		localization_key = CustomLoc_FR_dela
	}
	text = {
		trigger = {
			OR = {
				AND = { # prince_male_iberian_group (Infant), prince_female_iberian_group (Infante)
					primary_title.tier < tier_kingdom
					culture_group = culture_group:iberian_group
					has_government = feudal_government
					any_parent = { even_if_dead = yes primary_title.tier >= tier_kingdom }
				}
				AND = { # empress_mother (Impératrice mère)
					is_female = yes
					has_government = feudal_government
					any_child = { primary_title.tier = tier_empire }
					primary_title.tier < tier_empire
				}
			}
		}
		localization_key = CustomLoc_FR_del
	}
	text = {
		trigger = { # Prince
			is_female = no
			primary_title.tier < tier_kingdom
			OR = {
				has_government = feudal_government
				has_government = clan_government
			}
			any_parent = { even_if_dead = yes primary_title.tier >= tier_kingdom }
		}
		localization_key = CustomLoc_FR_du
	}
	text = {
		trigger = { # Princesse
			is_female = yes
			primary_title.tier < tier_kingdom
			OR = {
				has_government = feudal_government
				has_government = clan_government
			}
			any_parent = { even_if_dead = yes primary_title.tier >= tier_kingdom }
		}
		localization_key = CustomLoc_FR_dela
	}
	text = {
		localization_key = "[ROOT.Char.Custom('FR_du_Char')]"
		fallback = yes
	}
}

FR_du_Char = { 
	type = character
	text = { # chef de foi
		trigger = {
			any_held_title = { is_head_of_faith = yes }
		}
		localization_key = CustomLoc_FR_du
	}
	text = {
		trigger = {
			OR = {
				AND = { # emperor (Empereur), emperor_female (Impératrice)
					highest_held_title_tier = tier_empire
					NOT = {
						culture_group = culture_group:central_germanic_group # Kaiser
						culture = culture:greek # Basileus
						AND = { # emperor_feudal_male_altaic_group (Khagan)
							OR = {
								has_government = feudal_government
								has_government = clan_government
								has_government = tribal_government
							}
							OR = {
								has_culture_group = culture_group:mongolic_group
								has_culture_group = culture_group:turkic_group
							}
						}
					}
				}
				AND = { # duke_theocracy_male_paganism_religion (Archiprêtre), duke_theocracy_female_paganism_religion (Archiprêtresse)
					highest_held_title_tier = tier_duchy
					has_government = theocracy_government
					OR = {
						religion = religion:paganism_religion
						religion = religion:taoism_religion
						religion = religion:bon_religion
						religion = religion:germanic_religion
						religion = religion:tengrism_religion
						religion = religion:west_african_religion
						religion = religion:west_african_bori_religion
						religion = religion:west_african_roog_religion
						religion = religion:zunism_religion
						religion = religion:anatolian_religion
						religion = religion:arabic_religion
						religion = religion:armenian_religion
						religion = religion:berber_religion
						religion = religion:caucasian_religion
						religion = religion:canaanite_religion
						religion = religion:celtic_religion
						religion = religion:dacian_religion
						religion = religion:iberic_religion
						religion = religion:mesopotamian_religion
						religion = religion:scythian_religion
					}
				}
				AND = { # king_feudal_male_uyghur (Idiqut), king_feudal_female_uyghur (Idiqut)
					highest_held_title_tier = tier_kingdom
					culture = culture:uyghur
					OR = {
						has_government = feudal_government
						has_government = clan_government
						has_government = tribal_government
					}
				}
				AND = { # duke_feudal_male_turkish (Atabeg), duke_feudal_female_turkish (Atabegum)
					highest_held_title_tier = tier_duchy
					OR = {
						AND = { 
							exists = top_liege
							top_liege = {
								OR = {
									has_government = feudal_government
									has_government = clan_government
								}
								has_culture = culture:turkish
							}
						}
						AND = {
							NOT = { exists = top_liege }
							OR = {
								has_government = feudal_government
								has_government = clan_government
							}
							has_culture = culture:turkish
						}
					}
				}
				AND = { # duke_feudal_male_sogdian (Ikhshide)
					is_female = no
					culture = culture:sogdian
					highest_held_title_tier = tier_duchy
					OR = {
						has_government = feudal_government
						has_government = clan_government
					}
				}
				AND = {
					trigger_if = {
						limit = { 
							exists = top_liege
						}
						top_liege = {
							OR = {
								culture_group = culture_group:berber_group # duke_feudal_male_berber_group (Émir), duke_feudal_female_berber_group (Émira)
								culture = culture:beja # duke_feudal_male_beja (Émir), duke_feudal_female_beja (Émira)
							}
							OR = {
								has_government = feudal_government
								has_government = clan_government
								has_government = tribal_government
							}
						}
					}
					OR = {
						culture_group = culture_group:berber_group # duke_feudal_male_berber_group (Émir), duke_feudal_female_berber_group (Émira)
						culture = culture:beja # duke_feudal_male_beja (Émir), duke_feudal_female_beja (Émira)
					}
					highest_held_title_tier = tier_duchy
					OR = {
						has_government = feudal_government
						has_government = clan_government
						has_government = tribal_government
					}
				}
				AND = { # duke_feudal_male_arabic_group (Émir), duke_feudal_female_arabic_group (Émira)
					trigger_if = {
						limit = { 
							exists = top_liege
						}
						top_liege = {
							OR = {
								culture_group = culture_group:arabic_group
							}
							OR = {
								has_government = feudal_government
								has_government = clan_government
							}
						}
					}
					OR = {
						culture_group = culture_group:arabic_group
					}
					highest_held_title_tier = tier_duchy
					OR = {
						has_government = feudal_government
						has_government = clan_government
					}
				}
#				AND = {
#					is_female = no
#					highest_held_title_tier = tier_county
#					OR = {
#						AND = { # count_feudal_male_english (Earl)
#							has_government = feudal_government
#							primary_title = { 
#								target_is_de_jure_liege_or_above = title:e_britannia
#								NOT = { target_is_de_jure_liege_or_above = title:k_wales } # count_feudal_male_k_wales (Lord)
#							}
#						}
#						AND = { # count_feudal_male_e_britannia (Earl)
#							OR = {
#								has_government = feudal_government
#								has_government = tribal_government
#							}
#							culture = culture:english
#							culture = culture:anglo_saxon
#							culture = culture:scottish
#						}
#					}
#				}
				AND = { # count_theocracy_male_ismaili (Ayatollah), count_theocracy_female_ismaili (Ayatollah)
					highest_held_title_tier = tier_county
					has_government = theocracy_government
					faith = faith:ismaili
				}
				AND = { # baron_theocracy_male_christianity_religion (Évêque), baron_theocracy_female_christianity_religion (Évêque)
					highest_held_title_tier = tier_barony
					has_government = theocracy_government
					OR = {
						religion = religion:christianity_religion
						religion = religion:dualism_religion
					}
				}
				AND = { # baron_theocracy_male_zoroastrianism_religion (Ervad), baron_theocracy_female_zoroastrianism_religion (Ervad)
					highest_held_title_tier = tier_barony
					has_government = theocracy_government
					religion = religion:zoroastrianism_religion
				}
				AND = { # baron_theocracy_male_west_african_bori_religion (Adjingi)
					highest_held_title_tier = tier_barony
					has_government = theocracy_government
					religion = religion:west_african_bori_religion
				}
				AND = { # baron_feudal_male_iranian_group (Argbadh)
					highest_held_title_tier = tier_barony
					OR = {
						has_government = feudal_government
						has_government = clan_government
					}
					culture_group = culture_group:iranian_group
				}
				primary_title = title:k_austria # archduke (Archiduc), archduchess (Archiduchesse)
			}
		}
		localization_key = CustomLoc_FR_del
	}
	text = {
		trigger = {
			is_female = no
			OR = {
				primary_title.tier >= tier_barony
				any_spouse = { primary_title.tier >= tier_barony }
			}
		}
		localization_key = CustomLoc_FR_du
	}
	text = {
		trigger = {
			is_female = yes
			OR = {
				primary_title.tier >= tier_barony
				any_spouse = { primary_title.tier >= tier_barony }
			}
		}
		localization_key = CustomLoc_FR_dela
	}
	text = {
		localization_key = CustomLoc_FR_de
		fallback = yes
	}
}

FR_au_Char_L = { 
	type = character
	text = {
		trigger = {
			holds_landed_title = no
			is_female = no
		}
		localization_key = CustomLoc_FR_au
	}
	text = {
		trigger = {
			holds_landed_title = no
			is_female = yes
		}
		localization_key = CustomLoc_FR_ala
	}
	text = {
		localization_key = "[ROOT.Char.Custom('FR_au_Char')]"
		fallback = yes
	}
}

FR_au_Char_U_Pi = { 
	type = character
	text = {
		trigger = {
			is_local_player = yes
		}
		localization_key = CustomLoc_FR_a
	}
	text = {
		trigger = {
			OR = {
				any_spouse = { holds_landed_title = yes }
				holds_landed_title = yes
			}
		}
		localization_key = "[ROOT.Char.Custom('FR_au_Char_P')]"
	}
	text = {
		localization_key = "[ROOT.Char.Custom('FR_au_Char')]"
		fallback = yes
	}
}

FR_au_Char_U_P = { 
	type = character
	text = {
		trigger = {
			is_local_player = yes
		}
		localization_key = CustomLoc_FR_a
	}
	text = {
		localization_key = "[ROOT.Char.Custom('FR_au_Char_P')]"
		fallback = yes
	}
}

FR_au_Char_Pi = { 
	type = character
	text = {
		trigger = {
			OR = {
				any_spouse = { holds_landed_title = yes }
				holds_landed_title = yes
			}
		}
		localization_key = "[ROOT.Char.Custom('FR_au_Char_P')]"
	}
	text = {
		localization_key = "[ROOT.Char.Custom('FR_au_Char')]"
		fallback = yes
	}
}

FR_au_Char_P = { 
	type = character
	text = {
		trigger = { # queen_mother (Reine mère)
			is_female = yes
			has_government = feudal_government
			any_child = { primary_title.tier = tier_kingdom }
			primary_title.tier < tier_kingdom
		}
		localization_key = CustomLoc_FR_ala
	}
	text = {
		trigger = {
			OR = {
				AND = { # prince_male_iberian_group (Infant), prince_female_iberian_group (Infante)
					primary_title.tier < tier_kingdom
					culture_group = culture_group:iberian_group
					has_government = feudal_government
					any_parent = { even_if_dead = yes primary_title.tier >= tier_kingdom }
				}
				AND = { # empress_mother (Impératrice mère)
					is_female = yes
					has_government = feudal_government
					any_child = { primary_title.tier = tier_empire }
					primary_title.tier < tier_empire
				}
			}
		}
		localization_key = CustomLoc_FR_al
	}
	text = {
		trigger = { # Prince
			is_female = no
			primary_title.tier < tier_kingdom
			OR = {
				has_government = feudal_government
				has_government = clan_government
			}
			any_parent = { even_if_dead = yes primary_title.tier >= tier_kingdom }
		}
		localization_key = CustomLoc_FR_au
	}
	text = {
		trigger = { # Princesse
			is_female = yes
			primary_title.tier < tier_kingdom
			OR = {
				has_government = feudal_government
				has_government = clan_government
			}
			any_parent = { even_if_dead = yes primary_title.tier >= tier_kingdom }
		}
		localization_key = CustomLoc_FR_ala
	}
	text = {
		localization_key = "[ROOT.Char.Custom('FR_au_Char')]"
		fallback = yes
	}
}

FR_au_Char = { 
	type = character
	text = { # chef de foi
		trigger = {
			any_held_title = { is_head_of_faith = yes }
		}
		localization_key = CustomLoc_FR_au
	}
	text = {
		trigger = {
			OR = {
				AND = { # emperor (Empereur), emperor_female (Impératrice)
					highest_held_title_tier = tier_empire
					NOT = {
						culture_group = culture_group:central_germanic_group # Kaiser
						culture = culture:greek # Basileus
						AND = { # emperor_feudal_male_altaic_group (Khagan)
							OR = {
								has_government = feudal_government
								has_government = clan_government
								has_government = tribal_government
							}
							OR = {
								has_culture_group = culture_group:mongolic_group
								has_culture_group = culture_group:turkic_group
							}
						}
					}
				}
				AND = { # duke_theocracy_male_paganism_religion (Archiprêtre), duke_theocracy_female_paganism_religion (Archiprêtresse)
					highest_held_title_tier = tier_duchy
					has_government = theocracy_government
					OR = {
						religion = religion:paganism_religion
						religion = religion:taoism_religion
						religion = religion:bon_religion
						religion = religion:germanic_religion
						religion = religion:tengrism_religion
						religion = religion:west_african_religion
						religion = religion:west_african_bori_religion
						religion = religion:west_african_roog_religion
						religion = religion:zunism_religion
						religion = religion:anatolian_religion
						religion = religion:arabic_religion
						religion = religion:armenian_religion
						religion = religion:berber_religion
						religion = religion:caucasian_religion
						religion = religion:canaanite_religion
						religion = religion:celtic_religion
						religion = religion:dacian_religion
						religion = religion:iberic_religion
						religion = religion:mesopotamian_religion
						religion = religion:scythian_religion
					}
				}
				AND = { # king_feudal_male_uyghur (Idiqut), king_feudal_female_uyghur (Idiqut)
					highest_held_title_tier = tier_kingdom
					culture = culture:uyghur
					OR = {
						has_government = feudal_government
						has_government = clan_government
						has_government = tribal_government
					}
				}
				AND = { # duke_feudal_male_turkish (Atabeg), duke_feudal_female_turkish (Atabegum)
					highest_held_title_tier = tier_duchy
					OR = {
						AND = { 
							exists = top_liege
							top_liege = {
								OR = {
									has_government = feudal_government
									has_government = clan_government
								}
								has_culture = culture:turkish
							}
						}
						AND = {
							NOT = { exists = top_liege }
							OR = {
								has_government = feudal_government
								has_government = clan_government
							}
							has_culture = culture:turkish
						}
					}
				}
				AND = { # duke_feudal_male_sogdian (Ikhshide)
					is_female = no
					culture = culture:sogdian
					highest_held_title_tier = tier_duchy
					OR = {
						has_government = feudal_government
						has_government = clan_government
					}
				}
				AND = {
					trigger_if = {
						limit = { 
							exists = top_liege
						}
						top_liege = {
							OR = {
								culture_group = culture_group:berber_group # duke_feudal_male_berber_group (Émir), duke_feudal_female_berber_group (Émira)
								culture = culture:beja # duke_feudal_male_beja (Émir), duke_feudal_female_beja (Émira)
							}
							OR = {
								has_government = feudal_government
								has_government = clan_government
								has_government = tribal_government
							}
						}
					}
					OR = {
						culture_group = culture_group:berber_group # duke_feudal_male_berber_group (Émir), duke_feudal_female_berber_group (Émira)
						culture = culture:beja # duke_feudal_male_beja (Émir), duke_feudal_female_beja (Émira)
					}
					highest_held_title_tier = tier_duchy
					OR = {
						has_government = feudal_government
						has_government = clan_government
						has_government = tribal_government
					}
				}
				AND = { # duke_feudal_male_arabic_group (Émir), duke_feudal_female_arabic_group (Émira)
					trigger_if = {
						limit = { 
							exists = top_liege
						}
						top_liege = {
							OR = {
								culture_group = culture_group:arabic_group
							}
							OR = {
								has_government = feudal_government
								has_government = clan_government
							}
						}
					}
					OR = {
						culture_group = culture_group:arabic_group
					}
					highest_held_title_tier = tier_duchy
					OR = {
						has_government = feudal_government
						has_government = clan_government
					}
				}
#				AND = {
#					is_female = no
#					highest_held_title_tier = tier_county
#					OR = {
#						AND = { # count_feudal_male_english (Earl)
#							has_government = feudal_government
#							primary_title = { 
#								target_is_de_jure_liege_or_above = title:e_britannia
#								NOT = { target_is_de_jure_liege_or_above = title:k_wales } # count_feudal_male_k_wales (Lord)
#							}
#						}
#						AND = { # count_feudal_male_e_britannia (Earl)
#							OR = {
#								has_government = feudal_government
#								has_government = tribal_government
#							}
#							culture = culture:english
#							culture = culture:anglo_saxon
#							culture = culture:scottish
#						}
#					}
#				}
				AND = { # count_theocracy_male_ismaili (Ayatollah), count_theocracy_female_ismaili (Ayatollah)
					highest_held_title_tier = tier_county
					has_government = theocracy_government
					faith = faith:ismaili
				}
				AND = { # baron_theocracy_male_christianity_religion (Évêque), baron_theocracy_female_christianity_religion (Évêque)
					highest_held_title_tier = tier_barony
					has_government = theocracy_government
					OR = {
						religion = religion:christianity_religion
						religion = religion:dualism_religion
					}
				}
				AND = { # baron_theocracy_male_zoroastrianism_religion (Ervad), baron_theocracy_female_zoroastrianism_religion (Ervad)
					highest_held_title_tier = tier_barony
					has_government = theocracy_government
					religion = religion:zoroastrianism_religion
				}
				AND = { # baron_theocracy_male_west_african_bori_religion (Adjingi)
					highest_held_title_tier = tier_barony
					has_government = theocracy_government
					religion = religion:west_african_bori_religion
				}
				AND = { # baron_feudal_male_iranian_group (Argbadh)
					highest_held_title_tier = tier_barony
					OR = {
						has_government = feudal_government
						has_government = clan_government
					}
					culture_group = culture_group:iranian_group
				}
				primary_title = title:k_austria # archduke (Archiduc), archduchess (Archiduchesse)
			}
		}
		localization_key = CustomLoc_FR_al
	}
	text = {
		trigger = {
			is_female = no
			OR = {
				primary_title.tier >= tier_barony
				any_spouse = { primary_title.tier >= tier_barony }
			}
		}
		localization_key = CustomLoc_FR_au
	}
	text = {
		trigger = {
			is_female = yes
			OR = {
				primary_title.tier >= tier_barony
				any_spouse = { primary_title.tier >= tier_barony }
			}
		}
		localization_key = CustomLoc_FR_ala
	}
	text = {
		localization_key = CustomLoc_FR_a
		fallback = yes
	}
}

FR_only_le_HouseOfWorship = { 
	type = character
	text = {
		trigger = {
			OR = {
				AND = {
					has_religion = religion:christianity_religion # église, abbaye
					NOT = { faith = faith:bosnian_church } # hiža
				}
				has_religion = religion:magyar_religion # egyház
			}
		}
		localization_key = CustomLoc_FR_l
	}
	text = {
		trigger = {
			OR = {
				has_religion = religion:judaism_religion # synagogue
				AND = {
					has_religion = religion:islam_religion # mosquée
					NOT = { faith = faith:alevi } # cemevi
				}
			}
		}
		localization_key = CustomLoc_FR_la
	}
	text = {
		localization_key = CustomLoc_FR_le
		fallback = yes
	}
}

FR_only_du_HouseOfWorship = { 
	type = character
	text = {
		trigger = {
			OR = {
				AND = {
					has_religion = religion:christianity_religion # église, abbaye
					NOT = { faith = faith:bosnian_church } # hiža
				}
				has_religion = religion:magyar_religion # egyház
			}
		}
		localization_key = CustomLoc_FR_del
	}
	text = {
		trigger = {
			OR = {
				has_religion = religion:judaism_religion # synagogue
				AND = {
					has_religion = religion:islam_religion # mosquée
					NOT = { faith = faith:alevi } # cemevi
				}
			}
		}
		localization_key = CustomLoc_FR_dela
	}
	text = {
		localization_key = CustomLoc_FR_du
		fallback = yes
	}
}

FR_only_au_HouseOfWorship = { 
	type = character
	text = {
		trigger = {
			OR = {
				AND = {
					has_religion = religion:christianity_religion # église, abbaye
					NOT = { faith = faith:bosnian_church } # hiža
				}
				has_religion = religion:magyar_religion # egyház
			}
		}
		localization_key = CustomLoc_FR_a
	}
	text = {
		trigger = {
			OR = {
				has_religion = religion:judaism_religion # synagogue
				AND = {
					has_religion = religion:islam_religion # mosquée
					NOT = { faith = faith:alevi } # cemevi
				}
			}
		}
		localization_key = CustomLoc_FR_ala
	}
	text = {
		localization_key = CustomLoc_FR_au
		fallback = yes
	}
}

FR_only_de_HouseOfWorshipPlural = { 
	type = character
	text = {
		trigger = {
			OR = {
				AND = {
					has_religion = religion:christianity_religion # église, abbaye
					NOT = { faith = faith:bosnian_church } # hiža
				}
				has_religion = religion:magyar_religion # egyház
			}
		}
		localization_key = CustomLoc_FR_d
	}
	text = {
		localization_key = CustomLoc_FR_de
		fallback = yes
	}
}

FR_Scheme_FullAction = { 
	type = scheme
	text = {
		trigger = {
			scheme_target = { is_local_player = yes }
			scheme_type = abduct
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_abduct_you
	}
	text = {
		trigger = {
			scheme_target = { is_local_player = yes }
			scheme_type = befriend
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_befriend_you
	}
	text = {
		trigger = {
			scheme_target = { is_local_player = yes }
			scheme_type = claim_throne
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_claim_throne_you
	}
	text = {
		trigger = {
			scheme_target = { is_local_player = yes }
			scheme_type = convert_to_witchcraft
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_convert_to_witchcraft_you
	}
	text = {
		trigger = {
			scheme_target = { is_local_player = yes }
			scheme_type = courting
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_courting_you
	}
	text = {
		trigger = {
			scheme_target = { is_local_player = yes }
			scheme_type = elope
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_elope_you
	}
	text = {
		trigger = {
			scheme_target = { is_local_player = yes }
			scheme_type = fabricate_hook
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_fabricate_hook_you
	}
	text = {
		trigger = {
			scheme_target = { is_local_player = yes }
			scheme_type = murder
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_murder_you
	}
	text = {
		trigger = {
			scheme_target = { is_local_player = yes }
			scheme_type = seduce
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_seduce_you
	}
	text = {
		trigger = {
			scheme_target = { is_local_player = yes }
			scheme_type = sway
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_sway_you
	}
	text = {
		trigger = {
			scheme_type = abduct
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_abduct
	}
	text = {
		trigger = {
			scheme_type = befriend
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_befriend
	}
	text = {
		trigger = {
			scheme_type = claim_throne
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_claim_throne
	}
	text = {
		trigger = {
			scheme_type = convert_to_witchcraft
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_convert_to_witchcraft
	}
	text = {
		trigger = {
			scheme_type = courting
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_courting
	}
	text = {
		trigger = {
			scheme_type = elope
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_elope
	}
	text = {
		trigger = {
			scheme_type = fabricate_hook
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_fabricate_hook
	}
	text = {
		trigger = {
			scheme_type = murder
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_murder
	}
	text = {
		trigger = {
			scheme_type = seduce
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_seduce
	}
	text = {
		trigger = {
			scheme_type = sway
		}
		localization_key = CustomLoc_FR_Scheme_FullAction_sway
	}
	text = {
		localization_key = CustomLoc_FR_Scheme_FullAction_fallback
		fallback = yes
	}
}

FR_Le_PointOfRidicule = {
	type = character

	random_valid = yes

	text = {
		weight_multiplier = { base = 0.5 }
		trigger = { ai_rationality <= low_negative_rationality }
		localization_key = CustomLoc_FR_Le_PointOfRidicule_foolishness
	}

	text = {
		weight_multiplier = { base = 0.5 }
		trigger = { ai_compassion >= low_positive_compassion }
		localization_key = CustomLoc_FR_Le_PointOfRidicule_sensitive_soul
	}

	text = {
		weight_multiplier = { base = 0.5 }
		trigger = { has_personality_emotional_trigger = yes }
		localization_key = CustomLoc_FR_Le_PointOfRidicule_unrestrained_emotions
	}

	text = {
		weight_multiplier = { base = 0.5 }
		trigger = { has_personality_annoying_trigger = yes }
		localization_key = CustomLoc_FR_Le_PointOfRidicule_bothersome_nature
	}

	text = {
		trigger = { has_trait = leper }
		localization_key = CustomLoc_FR_Le_PointOfRidicule_lesion_ridden_face
	}

	text = {
		trigger = {
			has_trait = maimed
		}
		localization_key = CustomLoc_FR_Le_PointOfRidicule_disfigurement
	}

	text = {
		trigger = { has_trait = infirm }
		localization_key = CustomLoc_FR_Le_PointOfRidicule_infirmity
	}

	text = {
		trigger = { has_trait = eunuch }
		localization_key = CustomLoc_FR_Le_PointOfRidicule_lack_of_certain_parts
	}

	text = {
		trigger = { has_trait = blind }
		localization_key = CustomLoc_FR_Le_PointOfRidicule_blindness
	}

	text = {
		trigger = {
			has_trait = beauty_bad
		}
		localization_key = CustomLoc_FR_Le_PointOfRidicule_ghastly_visage
	}

	text = {
		trigger = {
			OR = {
				has_trait = physique_bad
				has_trait = weak
			}
		}
		localization_key = CustomLoc_FR_Le_PointOfRidicule_frailty
	}

	text = {
		trigger = { has_trait = clubfooted }
		localization_key = CustomLoc_FR_Le_PointOfRidicule_grotesque_limp
	}

	text = {
		trigger = { has_trait = hunchbacked }
		localization_key = CustomLoc_FR_Le_PointOfRidicule_grotesque_hump
	}

	text = {
		trigger = { has_trait = lisping }
		localization_key = CustomLoc_FR_Le_PointOfRidicule_ludicrous_lisp
	}

	text = {
		trigger = { has_trait = dwarf }
		localization_key = CustomLoc_FR_Le_PointOfRidicule_stature
	}

	text = {
		trigger = { has_trait = giant }
		localization_key = CustomLoc_FR_Le_PointOfRidicule_grotesque_size
	}

	text = {
		trigger = { has_trait = spindly }
		localization_key = CustomLoc_FR_Le_PointOfRidicule_spindly_frame
	}

	text = {
		trigger = { has_trait = scaly }
		localization_key = CustomLoc_FR_Le_PointOfRidicule_snake_scales
	}

	text = {
		trigger = { has_trait = albino }
		localization_key = CustomLoc_FR_Le_PointOfRidicule_ghostly_pallor
	}

	text = {
		trigger = { has_trait = wheezing }
		localization_key = CustomLoc_FR_Le_PointOfRidicule_disgusting_wheezing
	}

	text = {
		trigger = { always = no }
		fallback = yes
		localization_key = CustomLoc_FR_Le_PointOfRidicule_insistent_whining
	}
}

###############################################################################################################################
###############################################################################################################################
###############################################################################################################################

#Support key
FR_du_CharacterIntroductionSupportNoComma = {
	type = character

	#My/Your/HerHis/NamePossessive relation comest first, handled by the My/Your/HerHis/NamePossessive NoComma loc

	text = {
		trigger = {
			exists = primary_title
		}
		localization_key = CustomLoc_FR_du_CharacterIntroductionSupportNoComma_titledfirstnameoftitle
	}

	#Spouse/Child/knight of landed character comest after has primary title check, handled by the My/Your/HerHis/NamePossessive NoComma loc


	#has a liege
	text = {
		trigger = {
			exists = liege
			liege = { exists = primary_title }
			is_lowborn = no
			is_female = yes
		}
		localization_key = CustomLoc_FR_du_CharacterIntroductionSupportNoComma_firstnamedynastyname_a_noblewoman_from_liege_title
	}

	text = {
		trigger = {
			exists = liege
			liege = { exists = primary_title }
			is_lowborn = no
			is_male = yes
		}
		localization_key = CustomLoc_FR_du_CharacterIntroductionSupportNoComma_firstnamedynastyname_a_nobleman_from_liege_title
	}

	text = {
		trigger = {
			exists = liege
			liege = { exists = primary_title }
			is_lowborn = yes
		}
		localization_key = CustomLoc_FR_du_CharacterIntroductionSupportNoComma_firstname_a_commoner_from_liege_title
	}

	#had a location
	text = {
		trigger = {
			is_lowborn = no
			is_female = yes
			exists = location.barony
		}
		localization_key = CustomLoc_FR_du_CharacterIntroductionSupportNoComma_firstnamedynastyname_a_noblewoman_from_current_location
	}

	text = {
		trigger = {
			is_lowborn = no
			is_male = yes
			exists = location.barony
		}
		localization_key = CustomLoc_FR_du_CharacterIntroductionSupportNoComma_firstnamedynastyname_a_nobleman_from_current_location
	}

	text = {
		trigger = {
			is_lowborn = yes
			exists = location.barony
		}
		localization_key = CustomLoc_FR_du_CharacterIntroductionSupportNoComma_firstname_a_commoner_from_current_location
	}

	#fallback
	text = {
		trigger = {
			is_lowborn = no
			is_female = yes
		}
		localization_key = CustomLoc_FR_du_CharacterIntroductionSupportNoComma_firstnamedynastyname_a_noblewoman
	}

	text = {
		trigger = {
			is_lowborn = no
			is_male = yes
		}
		localization_key = CustomLoc_FR_du_CharacterIntroductionSupportNoComma_firstnamedynastyname_a_nobleman
	}

	text = {
		trigger = {
			is_lowborn = yes
		}
		localization_key = CustomLoc_FR_du_CharacterIntroductionSupportNoComma_firstname_a_commoner
	}
}

#NoCommaKey
FR_du_MyCharacterIntroductionNoComma = {
	type = character

	text = { #Exception for landed court chaplains who shouldn't have their title appear twice
		trigger = {
			is_councillor_of = scope:second
			has_council_position = councillor_court_chaplain
			is_landed = yes
			NOR = {
				is_spouse_of = scope:second
				is_close_or_extended_family_of = scope:second
			}
		}
		localization_key = CustomLoc_FR_du_MyCharacterIntroductionNoComma_my_counciltitle_firstname
	}

	text = {
		trigger = { has_RelationToMe_relation = { CHARACTER = scope:second } }
		localization_key = CustomLoc_FR_du_MyCharacterIntroductionNoComma_my_relation_titledfirstname
	}

	text = {
		trigger = {
			NOT = { exists = primary_title }
			exists = primary_spouse
			primary_spouse = { exists = primary_title }
		}
		localization_key = CustomLoc_FR_du_MyCharacterIntroductionNoComma_the_relation_of_MyCharacterIntroductionNoComma_primaryspouse
	}

	text = {
		trigger = {
			NOT = { exists = primary_title }
			exists = father
			dynasty = father.dynasty
			father = { exists = primary_title }
		}
		localization_key = CustomLoc_FR_du_MyCharacterIntroductionNoComma_the_relation_of_MyCharacterIntroductionNoComma_father
	}

	text = {
		trigger = {
			NOT = { exists = primary_title }
			exists = mother
			mother = { exists = primary_title }
		}
		localization_key = CustomLoc_FR_du_MyCharacterIntroductionNoComma_the_relation_of_MyCharacterIntroductionNoComma_mother
	}

	text = {
		trigger = {
			NOT = { exists = primary_title }
			exists = liege
			is_councillor_of = liege
		}
		localization_key = CustomLoc_FR_du_MyCharacterIntroductionNoComma_the_relation_of_MyCharacterIntroductionNoComma_councillor
	}

	text = {
		trigger = {
			NOT = { exists = primary_title }
			exists = liege
			is_knight_of = liege
		}
		localization_key = CustomLoc_FR_du_MyCharacterIntroductionNoComma_the_relation_of_MyCharacterIntroductionNoComma_knight
	}


	#Uses "CharacterIntroductionNoComma"
	text = {
		localization_key = CustomLoc_FR_du_CharacterIntroductionSupportNoComma_fallback
	}
}

FR_du_YourCharacterIntroductionNoComma = {
	type = character

	text = { #Exception for landed court chaplains who shouldn't have their title appear twice
		trigger = {
			is_councillor_of = scope:second
			has_council_position = councillor_court_chaplain
			is_landed = yes
			NOR = {
				is_spouse_of = scope:second
				is_close_or_extended_family_of = scope:second
			}
		}
		localization_key = CustomLoc_FR_du_YourCharacterIntroductionNoComma_your_counciltitle_firstname
	}

	text = {
		trigger = { has_RelationToMe_relation = { CHARACTER = scope:second } }
		localization_key = CustomLoc_FR_du_YourCharacterIntroductionNoComma_your_relation_titledfirstname
	}

	text = {
		trigger = {
			NOT = { exists = primary_title }
			exists = primary_spouse
			primary_spouse = { exists = primary_title }
		}
		localization_key = CustomLoc_FR_du_YourCharacterIntroductionNoComma_the_relation_of_YourCharacterIntroductionNoComma_primaryspouse
	}

	text = {
		trigger = {
			NOT = { exists = primary_title }
			exists = father
			dynasty = father.dynasty
			father = { exists = primary_title }
		}
		localization_key = CustomLoc_FR_du_YourCharacterIntroductionNoComma_the_relation_of_YourCharacterIntroductionNoComma_father
	}

	text = {
		trigger = {
			NOT = { exists = primary_title }
			exists = mother
			mother = { exists = primary_title }
		}
		localization_key = CustomLoc_FR_du_YourCharacterIntroductionNoComma_the_relation_of_YourCharacterIntroductionNoComma_mother
	}

	text = {
		trigger = {
			NOT = { exists = primary_title }
			exists = liege
			is_councillor_of = liege
		}
		localization_key = CustomLoc_FR_du_YourCharacterIntroductionNoComma_the_relation_of_YourCharacterIntroductionNoComma_councillor
	}
	text = {
		trigger = {
			NOT = { exists = primary_title }
			exists = liege
			is_knight_of = liege
		}
		localization_key = CustomLoc_FR_du_YourCharacterIntroductionNoComma_the_relation_of_YourCharacterIntroductionNoComma_knight
	}

	#Uses "CharacterIntroductionNoComma"
	text = {
		localization_key = CustomLoc_FR_du_CharacterIntroductionSupportNoComma_fallback
	}
}


FR_du_HerHisCharacterIntroductionNoComma = {
	type = character

	text = { #Exception for landed court chaplains who shouldn't have their title appear twice
		trigger = {
			is_councillor_of = scope:second
			has_council_position = councillor_court_chaplain
			is_landed = yes
			NOR = {
				is_spouse_of = scope:second
				is_close_or_extended_family_of = scope:second
			}
		}
		localization_key = CustomLoc_FR_du_HerHisCharacterIntroductionNoComma_herhis_counciltitle_firstname
	}


	text = {
		trigger = { has_RelationToMe_relation = { CHARACTER = scope:second } }
		localization_key = CustomLoc_FR_du_HerHisCharacterIntroductionNoComma_herhis_relation_titledfirstname
	}

	text = {
		trigger = {
			NOT = { exists = primary_title }
			exists = primary_spouse
			primary_spouse = { exists = primary_title }
		}
		localization_key = CustomLoc_FR_du_HerHisCharacterIntroductionNoComma_the_relation_of_HerHisCharacterIntroductionNoComma_primaryspouse
	}

	text = {
		trigger = {
			NOT = { exists = primary_title }
			exists = father
			dynasty = father.dynasty
			father = { exists = primary_title }
		}
		localization_key = CustomLoc_FR_du_HerHisCharacterIntroductionNoComma_the_relation_of_HerHisCharacterIntroductionNoComma_father
	}

	text = {
		trigger = {
			NOT = { exists = primary_title }
			exists = mother
			mother = { exists = primary_title }
		}
		localization_key = CustomLoc_FR_du_HerHisCharacterIntroductionNoComma_the_relation_of_HerHisCharacterIntroductionNoComma_mother
	}

	text = {
		trigger = {
			NOT = { exists = primary_title }
			exists = liege
			is_councillor_of = liege
		}
		localization_key = CustomLoc_FR_du_HerHisCharacterIntroductionNoComma_the_relation_of_HerHisCharacterIntroductionNoComma_councillor
	}

	text = {
		trigger = {
			NOT = { exists = primary_title }
			exists = liege
			is_knight_of = liege
		}
		localization_key = CustomLoc_FR_du_HerHisCharacterIntroductionNoComma_the_relation_of_HerHisCharacterIntroductionNoComma_knight
	}

	#Uses "CharacterIntroductionNoComma"
	text = {
		localization_key = CustomLoc_FR_du_CharacterIntroductionSupportNoComma_fallback
	}
}

FR_du_MyCharacterIntroduction = {
	type = character

	text = {
		trigger = {
			OR = {
				has_RelationToMe_relation = { CHARACTER = scope:second }
				exists = primary_title
			}
		}
		localization_key = CustomLoc_FR_du_MyCharacterIntroductionNoComma #Should have no comma
	}

	#MyCharacterIntroductionNoComma + comma
	text = {
		localization_key = CustomLoc_FR_du_MyCharacterIntroductionNoCommaPlusComma
	}
}

FR_du_YourCharacterIntroduction = {
	type = character

	text = {
		trigger = {
			OR = {
				has_RelationToMe_relation = { CHARACTER = scope:second }
				exists = primary_title
			}
		}
		localization_key = CustomLoc_FR_du_YourCharacterIntroductionNoComma #Should have no comma
	}

	#MyCharacterIntroductionNoComma + comma
	text = {
		localization_key = CustomLoc_FR_du_YourCharacterIntroductionNoCommaPlusComma
	}
}

FR_du_HerHisCharacterIntroduction = {
	type = character

	text = {
		trigger = {
			OR = {
				has_RelationToMe_relation = { CHARACTER = scope:second }
				exists = primary_title
			}
		}
		localization_key = CustomLoc_FR_du_HerHisCharacterIntroductionNoComma #Should have no comma
	}

	#MyCharacterIntroductionNoComma + comma
	text = {
		localization_key = CustomLoc_FR_du_HerHisCharacterIntroductionNoCommaPlusComma
	}
}

###############################################################################################################################
###############################################################################################################################
###############################################################################################################################

#Support key
FR_au_CharacterIntroductionSupportNoComma = {
	type = character

	#My/Your/HerHis/NamePossessive relation comest first, handled by the My/Your/HerHis/NamePossessive NoComma loc

	text = {
		trigger = {
			exists = primary_title
		}
		localization_key = CustomLoc_FR_au_CharacterIntroductionSupportNoComma_titledfirstnameoftitle
	}

	#Spouse/Child/knight of landed character comest after has primary title check, handled by the My/Your/HerHis/NamePossessive NoComma loc


	#has a liege
	text = {
		trigger = {
			exists = liege
			liege = { exists = primary_title }
			is_lowborn = no
			is_female = yes
		}
		localization_key = CustomLoc_FR_au_CharacterIntroductionSupportNoComma_firstnamedynastyname_a_noblewoman_from_liege_title
	}

	text = {
		trigger = {
			exists = liege
			liege = { exists = primary_title }
			is_lowborn = no
			is_male = yes
		}
		localization_key = CustomLoc_FR_au_CharacterIntroductionSupportNoComma_firstnamedynastyname_a_nobleman_from_liege_title
	}

	text = {
		trigger = {
			exists = liege
			liege = { exists = primary_title }
			is_lowborn = yes
		}
		localization_key = CustomLoc_FR_au_CharacterIntroductionSupportNoComma_firstname_a_commoner_from_liege_title
	}

	#had a location
	text = {
		trigger = {
			is_lowborn = no
			is_female = yes
			exists = location.barony
		}
		localization_key = CustomLoc_FR_au_CharacterIntroductionSupportNoComma_firstnamedynastyname_a_noblewoman_from_current_location
	}

	text = {
		trigger = {
			is_lowborn = no
			is_male = yes
			exists = location.barony
		}
		localization_key = CustomLoc_FR_au_CharacterIntroductionSupportNoComma_firstnamedynastyname_a_nobleman_from_current_location
	}

	text = {
		trigger = {
			is_lowborn = yes
			exists = location.barony
		}
		localization_key = CustomLoc_FR_au_CharacterIntroductionSupportNoComma_firstname_a_commoner_from_current_location
	}

	#fallback
	text = {
		trigger = {
			is_lowborn = no
			is_female = yes
		}
		localization_key = CustomLoc_FR_au_CharacterIntroductionSupportNoComma_firstnamedynastyname_a_noblewoman
	}

	text = {
		trigger = {
			is_lowborn = no
			is_male = yes
		}
		localization_key = CustomLoc_FR_au_CharacterIntroductionSupportNoComma_firstnamedynastyname_a_nobleman
	}

	text = {
		trigger = {
			is_lowborn = yes
		}
		localization_key = CustomLoc_FR_au_CharacterIntroductionSupportNoComma_firstname_a_commoner
	}
}

#NoCommaKey
FR_au_MyCharacterIntroductionNoComma = {
	type = character

	text = { #Exception for landed court chaplains who shouldn't have their title appear twice
		trigger = {
			is_councillor_of = scope:second
			has_council_position = councillor_court_chaplain
			is_landed = yes
			NOR = {
				is_spouse_of = scope:second
				is_close_or_extended_family_of = scope:second
			}
		}
		localization_key = CustomLoc_FR_au_MyCharacterIntroductionNoComma_my_counciltitle_firstname
	}

	text = {
		trigger = { has_RelationToMe_relation = { CHARACTER = scope:second } }
		localization_key = CustomLoc_FR_au_MyCharacterIntroductionNoComma_my_relation_titledfirstname
	}

	text = {
		trigger = {
			NOT = { exists = primary_title }
			exists = primary_spouse
			primary_spouse = { exists = primary_title }
		}
		localization_key = CustomLoc_FR_au_MyCharacterIntroductionNoComma_the_relation_of_MyCharacterIntroductionNoComma_primaryspouse
	}

	text = {
		trigger = {
			NOT = { exists = primary_title }
			exists = father
			dynasty = father.dynasty
			father = { exists = primary_title }
		}
		localization_key = CustomLoc_FR_au_MyCharacterIntroductionNoComma_the_relation_of_MyCharacterIntroductionNoComma_father
	}

	text = {
		trigger = {
			NOT = { exists = primary_title }
			exists = mother
			mother = { exists = primary_title }
		}
		localization_key = CustomLoc_FR_au_MyCharacterIntroductionNoComma_the_relation_of_MyCharacterIntroductionNoComma_mother
	}

	text = {
		trigger = {
			NOT = { exists = primary_title }
			exists = liege
			is_councillor_of = liege
		}
		localization_key = CustomLoc_FR_au_MyCharacterIntroductionNoComma_the_relation_of_MyCharacterIntroductionNoComma_councillor
	}

	text = {
		trigger = {
			NOT = { exists = primary_title }
			exists = liege
			is_knight_of = liege
		}
		localization_key = CustomLoc_FR_au_MyCharacterIntroductionNoComma_the_relation_of_MyCharacterIntroductionNoComma_knight
	}


	#Uses "CharacterIntroductionNoComma"
	text = {
		localization_key = CustomLoc_FR_au_CharacterIntroductionSupportNoComma_fallback
	}
}

FR_au_YourCharacterIntroductionNoComma = {
	type = character

	text = { #Exception for landed court chaplains who shouldn't have their title appear twice
		trigger = {
			is_councillor_of = scope:second
			has_council_position = councillor_court_chaplain
			is_landed = yes
			NOR = {
				is_spouse_of = scope:second
				is_close_or_extended_family_of = scope:second
			}
		}
		localization_key = CustomLoc_FR_au_YourCharacterIntroductionNoComma_your_counciltitle_firstname
	}

	text = {
		trigger = { has_RelationToMe_relation = { CHARACTER = scope:second } }
		localization_key = CustomLoc_FR_au_YourCharacterIntroductionNoComma_your_relation_titledfirstname
	}

	text = {
		trigger = {
			NOT = { exists = primary_title }
			exists = primary_spouse
			primary_spouse = { exists = primary_title }
		}
		localization_key = CustomLoc_FR_au_YourCharacterIntroductionNoComma_the_relation_of_YourCharacterIntroductionNoComma_primaryspouse
	}

	text = {
		trigger = {
			NOT = { exists = primary_title }
			exists = father
			dynasty = father.dynasty
			father = { exists = primary_title }
		}
		localization_key = CustomLoc_FR_au_YourCharacterIntroductionNoComma_the_relation_of_YourCharacterIntroductionNoComma_father
	}

	text = {
		trigger = {
			NOT = { exists = primary_title }
			exists = mother
			mother = { exists = primary_title }
		}
		localization_key = CustomLoc_FR_au_YourCharacterIntroductionNoComma_the_relation_of_YourCharacterIntroductionNoComma_mother
	}

	text = {
		trigger = {
			NOT = { exists = primary_title }
			exists = liege
			is_councillor_of = liege
		}
		localization_key = CustomLoc_FR_au_YourCharacterIntroductionNoComma_the_relation_of_YourCharacterIntroductionNoComma_councillor
	}
	text = {
		trigger = {
			NOT = { exists = primary_title }
			exists = liege
			is_knight_of = liege
		}
		localization_key = CustomLoc_FR_au_YourCharacterIntroductionNoComma_the_relation_of_YourCharacterIntroductionNoComma_knight
	}

	#Uses "CharacterIntroductionNoComma"
	text = {
		localization_key = CustomLoc_FR_au_CharacterIntroductionSupportNoComma_fallback
	}
}


FR_au_HerHisCharacterIntroductionNoComma = {
	type = character

	text = { #Exception for landed court chaplains who shouldn't have their title appear twice
		trigger = {
			is_councillor_of = scope:second
			has_council_position = councillor_court_chaplain
			is_landed = yes
			NOR = {
				is_spouse_of = scope:second
				is_close_or_extended_family_of = scope:second
			}
		}
		localization_key = CustomLoc_FR_au_HerHisCharacterIntroductionNoComma_herhis_counciltitle_firstname
	}


	text = {
		trigger = { has_RelationToMe_relation = { CHARACTER = scope:second } }
		localization_key = CustomLoc_FR_au_HerHisCharacterIntroductionNoComma_herhis_relation_titledfirstname
	}

	text = {
		trigger = {
			NOT = { exists = primary_title }
			exists = primary_spouse
			primary_spouse = { exists = primary_title }
		}
		localization_key = CustomLoc_FR_au_HerHisCharacterIntroductionNoComma_the_relation_of_HerHisCharacterIntroductionNoComma_primaryspouse
	}

	text = {
		trigger = {
			NOT = { exists = primary_title }
			exists = father
			dynasty = father.dynasty
			father = { exists = primary_title }
		}
		localization_key = CustomLoc_FR_au_HerHisCharacterIntroductionNoComma_the_relation_of_HerHisCharacterIntroductionNoComma_father
	}

	text = {
		trigger = {
			NOT = { exists = primary_title }
			exists = mother
			mother = { exists = primary_title }
		}
		localization_key = CustomLoc_FR_au_HerHisCharacterIntroductionNoComma_the_relation_of_HerHisCharacterIntroductionNoComma_mother
	}

	text = {
		trigger = {
			NOT = { exists = primary_title }
			exists = liege
			is_councillor_of = liege
		}
		localization_key = CustomLoc_FR_au_HerHisCharacterIntroductionNoComma_the_relation_of_HerHisCharacterIntroductionNoComma_councillor
	}

	text = {
		trigger = {
			NOT = { exists = primary_title }
			exists = liege
			is_knight_of = liege
		}
		localization_key = CustomLoc_FR_au_HerHisCharacterIntroductionNoComma_the_relation_of_HerHisCharacterIntroductionNoComma_knight
	}

	#Uses "CharacterIntroductionNoComma"
	text = {
		localization_key = CustomLoc_FR_au_CharacterIntroductionSupportNoComma_fallback
	}
}

FR_au_MyCharacterIntroduction = {
	type = character

	text = {
		trigger = {
			OR = {
				has_RelationToMe_relation = { CHARACTER = scope:second }
				exists = primary_title
			}
		}
		localization_key = CustomLoc_FR_au_MyCharacterIntroductionNoComma #Should have no comma
	}

	#MyCharacterIntroductionNoComma + comma
	text = {
		localization_key = CustomLoc_FR_au_MyCharacterIntroductionNoCommaPlusComma
	}
}

FR_au_YourCharacterIntroduction = {
	type = character

	text = {
		trigger = {
			OR = {
				has_RelationToMe_relation = { CHARACTER = scope:second }
				exists = primary_title
			}
		}
		localization_key = CustomLoc_FR_au_YourCharacterIntroductionNoComma #Should have no comma
	}

	#MyCharacterIntroductionNoComma + comma
	text = {
		localization_key = CustomLoc_FR_au_YourCharacterIntroductionNoCommaPlusComma
	}
}

FR_au_HerHisCharacterIntroduction = {
	type = character

	text = {
		trigger = {
			OR = {
				has_RelationToMe_relation = { CHARACTER = scope:second }
				exists = primary_title
			}
		}
		localization_key = CustomLoc_FR_au_HerHisCharacterIntroductionNoComma #Should have no comma
	}

	#MyCharacterIntroductionNoComma + comma
	text = {
		localization_key = CustomLoc_FR_au_HerHisCharacterIntroductionNoCommaPlusComma
	}
}
