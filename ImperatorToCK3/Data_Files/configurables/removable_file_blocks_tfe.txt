# This file contains blocks from The Fallen Eagle files that can be removed.
# The structure is as follows:

# <file name> = {
# 	{
#          # comments are supported inside
#          some = code
#   }
# 	{
#          some code
# 	                some code with other indent
#   }
# }

# INDENTATION IS IMPORTANT!
# ASIDE FROM THE CURLY BRACKETS SURROUNDING THE BLOCK, IT MUST MATCH THE ORIGINAL FILE.
# OTHERWISE THE BLOCK WON'T BE REMOVED!

"common/on_action/TFE_game_start.txt" = {
	# Struggle starts
	{
		if = {
			limit = {
				AND = {
					game_start_date >= 476.9.4
					game_start_date <= 768.1.1
				}
			}
			start_struggle = { struggle_type = britannia_struggle start_phase = struggle_britannia_phase_migration }
		}
	}
	{
		if = {
			limit = {
				game_start_date >= 476.9.4
			}
			start_struggle = { struggle_type = italian_struggle start_phase = struggle_TFE_italian_phase_turmoil }
		}
	}
	{
		if = {
			limit = {
				AND = {
					game_start_date <= 651.1.1 # Death of Yazdegerd III
				}
			}
			start_struggle = { struggle_type = roman_persian_struggle start_phase = struggle_TFE_roman_persian_phase_contention }
		}
		start_struggle = { struggle_type = eastern_iranian_struggle start_phase = struggle_TFE_eastern_iranian_phase_expansion }
		start_struggle = { struggle_type = north_indian_struggle start_phase = struggle_TFE_north_indian_phase_invasion }
	}
	
	# Other
	{
		#### Starting events stuff
		if = {
			limit = {
				game_start_date = 361.11.17
			}
			character:145237 = {
				add_character_flag = {
					flag = immune_to_disease
					years = 5
				}
			}
			character:145232 = {
				add_character_flag = {
					flag = immune_to_disease
					years = 5
				}
			}
			character:145231 = {
				add_character_flag = {
					flag = immune_to_disease
					years = 5
				}
			}
		}
		if = {
			limit = {
				game_start_date = 361.11.17
				title:e_roman_empire.holder = character:145237
			}
			character:145237 = {
				trigger_event = {
					id = western_roman.0081
					days = 2
				}
			}
		}
		if = {
			limit = {
				game_start_date = 395.1.17
			}
			title:k_visigoths.holder ?= {
				trigger_event = gothic_wars.0001
			}
			# Start Huns with de jure drift progress for Eastern European kingdoms
			# Has to be an event that is triggered some time after game start because PDX is a dum dum
			title:e_hunnic_empire.holder ?= {
				trigger_event = {
					id = tfe_title_event.0009
					days = 90
				}
			}
			if = {
				limit = {
					character:rufinus_02 = {
						is_alive = yes
						OR = {
							is_vassal_of = character:70519
							is_courtier_of = character:70519
						}
						NOT = { is_diarch = yes }
					}
				}
				if = {
					limit = {
						character:70519 = {
							has_active_diarchy = no
						}
					}
					character:70519 = {
						designate_diarch = character:rufinus_02
						start_diarchy = regency
						set_diarchy_swing = 40
					}
				}
				else = {
					character:70519 = {
						designate_diarch = character:rufinus_02
						set_diarchy_type = regency
						change_diarchy_swing = 40
					}
				}
			}
			if = {
				limit = {
					character:900062 = {
						is_alive = yes
						OR = {
							is_vassal_of = character:145227
							is_courtier_of = character:145227
						}
						NOT = { is_diarch = yes }
					}
				}
				if = {
					limit = {
						character:145227 = {
							has_active_diarchy = no
						}
					}
					character:145227 = {
						designate_diarch = character:900062
						start_diarchy = regency
						set_diarchy_swing = 40
					}
				}
				else = {
					character:145227 = {
						designate_diarch = character:900062
						set_diarchy_type = regency
						change_diarchy_swing = 40
					}
				}
			}
		}
		if = {
			limit = {
				game_start_date = 476.9.4
				AND = {
					exists = title:k_croatia.holder
					title:k_croatia.holder = {
						culture = {
							OR = {
								THIS = culture:roman
								any_parent_culture_or_above = {
									this = culture:roman
								}
							}
						}
					}
				}
			}
			title:k_croatia.holder = {
				add_character_flag = nepos_ambition_triggered
				trigger_event = {
					id = western_roman.0027
					days = 5
				}
			}
		}
		if = {
			limit = {
				game_start_date = 532.2.1
				character:992023 = {
					is_alive = yes
				}
				title:k_ostrogoths.holder = character:992023
				character:992024 = {
					is_alive = yes
					is_betrothed = no
					is_married = no
				}
				OR = {
					character:rugian_17 = {
						is_alive = yes
						is_landed = yes
						is_betrothed = no
						is_married = no
						is_vassal_of = character:992023
					}
					character:992030 = {
						is_alive = yes
						is_landed = yes
						is_betrothed = no
						is_married = no
						is_vassal_of = character:992023
					}
					character:992100 = {
						is_alive = yes
						is_landed = yes
						is_betrothed = no
						is_married = no
						is_vassal_of = character:992023
					}
				}
			}
			title:k_ostrogoths.holder = {
				trigger_event = {
					id = germanic_events.0014
					days = 1
				}
			}
		}
		if = {
			limit = {
				game_start_date = 532.2.1
				AND = {
					exists = title:e_byzantium.holder
					title:e_byzantium.holder = {
						culture = {
							OR = {
								THIS = culture:roman
								any_parent_culture_or_above = {
									this = culture:roman
								}
							}
						}
					}
				}
			}
			set_global_variable = {
				name = justinian
				value = title:e_byzantium.holder
			}
			set_global_variable = {
				name = justinian_commander
				value = character:belisarius_001
			}
			set_global_variable = {
				name = justinian_gothic_commander
				value = character:belisarius_001
			}
			title:e_byzantium.holder = {
				trigger_event = {
					id = western_roman.0038
					days = 2
				}
				add_character_flag = {
					flag = immune_to_disease
					years = 10
				}
			}
			character:belisarius_001 = {
				set_global_variable = {
					name = belisarius
					value = character:belisarius_001
				}
			}
			character:belisarius_001 = {
				add_character_flag = {
					flag = immune_to_disease
					years = 10
				}
			}
		}
		else = {
			random_ruler = {
				limit = {
					is_ai = yes
					any_courtier = {
						is_lowborn = yes
					}
				}
				random_courtier = {
					limit = {
						is_lowborn = yes
					}
					save_scope_as = bugfix
					set_global_variable = {
						name = justinian
						value = scope:bugfix
					}
					set_global_variable = {
						name = hildirix
						value = scope:bugfix
					}
					death = { 
						death_reason = death_vanished 
					} 
				}
			}
		}
	}
	{
				if = {
					limit = {
						character:992020 = {
							is_alive = yes
							OR = {
								is_vassal_of = character:992023
								is_courtier_of = character:992023
							}
							NOT = { is_diarch = yes }
						}
					}
					if = {
						limit = {
							character:992023 = {
								has_active_diarchy = no
							}
						}
						character:992023 = {
							designate_diarch = character:992020
							start_diarchy = regency
							set_diarchy_swing = 40
						}
					}
					else = {
						character:992023 = {
							designate_diarch = character:992020
							set_diarchy_type = regency
							change_diarchy_swing = 40
						}
					}
				}
	}
	{
		if = {
			limit = {
				current_date >= 530.1.1
				current_date <= 550.1.1
			}
			culture:ostrogothic = {
				change_cultural_acceptance = {
					target = culture:roman
					value = 40
					desc = cultural_acceptance_historical_relations
				}
				change_cultural_acceptance = {
					target = culture:illyro_roman
					value = 40
					desc = cultural_acceptance_historical_relations
				}
			}
			if = {
				limit = {
					exists = title:k_ostrogoths.holder
				}
				if = {
					limit = {
						title:k_ostrogoths.holder.culture = culture:ostrogothic
						title:k_ostrogoths.holder.dynasty = dynasty:99920000
					}
					title:k_ostrogoths.holder.dynasty = {
						add_dynasty_modifier = {
							modifier = tfe_segregated_barbarians_and_romans
							years = 11
						}
					}
				}
				title:k_ostrogoths.holder = {
					learn_language = language_latin
					every_close_family_member = {
						learn_language = language_latin
					}
					every_dynasty_member = {
						learn_language = language_latin
					}
					if = {
						limit = { has_trait = drunkard }
						add_character_modifier = {
							modifier = tragic_drunk_modifier
							years = 3
						}
					}
					else = { add_trait = drunkard }
					if = {
						limit = {
							THIS = character:992023
						}
						add_character_modifier = {
							modifier = the_rightful_king
							years = 5
						}
					}
				}
				
			}
		}
	}
	{
		character:2000003 ?= {
			make_trait_inactive = intellect_good_3
		}
	}

	# In megacampaigns the abandonment of Britannia is not a given.
	{
		if = {
			limit = {
				game_start_date >= 410.1.1
			}
			add_to_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:flag_abandoned_britannia
			}
		}
	}
	{
			add_to_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:flag_abandoned_britannia
			}
	}

	# In converted games the Graeaco-Roman presence in Egypt is not a given.
	{
		# Greek/Egyptian rulers in Egypt now know both Coptic and Greek
		if = {
			limit = {
				game_start_date >= 500.1.1 # Rough timeframe for transition
			}		
			every_county_in_region = {
				region = custom_roman_aegyptus
				if = {
					limit = {
						holder = {
							NOT = {
								knows_language = language_kemetic
							}
						}
					}
					holder = {
						learn_language = language_kemetic
					}
				}
				if = {
					limit = {
						holder = {
							NOT = {
								knows_language = language_greek
							}
						}
					}
					holder = {
						learn_language = language_greek
					}
				}
			}
		}
	}

	{
		if = {
			limit = {
				game_start_date >= 551.7.9
			}
			title:b_beirut.title_province = {
				limit = { has_building = beirut_university }
				remove_building = beirut_university
			}
		}
		if = {
			limit = {
				game_start_date >= 800.1.1
			}
			title:b_urmiya.title_province = {
				limit = { has_building = adur_gushnasp }
				remove_building = adur_gushnasp
			}
		}
		if = {
			limit = {
				game_start_date >= 529.1.1
			}
			title:b_athens.title_province = {
				limit = { has_building = generic_university }
				remove_building = generic_university
			}
		}
	}

	# Anachronistic
	{
		if = {
			limit = {
				game_start_date >= 390.1.1
			}
			culture:vandal = {
				add_culture_tradition = tradition_practiced_pirates
				remove_variable = tradition_cooldown
			}
		}
		if = {
			limit = {
				game_start_date > 476.1.1
			}
			culture:ostrogothic = {
				add_culture_tradition = tradition_ostrogothic_overlordship
				remove_variable = tradition_cooldown
			}
		}
	}

	# Something related to Jewish Exilarchs, seems not needed for converted games
	{
		title:c_iskaf.holder = {
			vassal_contract_set_obligation_level = { type = religious_rights level = 1 }
		}
	}

	# Anachronistic
	{
		if = {
			limit = {
				game_start_date = 532.2.1
			}
			title:e_mongolia.holder.dynasty = {
				add_dynasty_modifier = rouran_khagans
			}
			title:k_franks = {
				set_title_name = k_franks_united
				set_definitive_form = yes
				set_de_jure_liege_title = title:e_france
			}
			title:k_yemen.holder = {
				every_vassal = {
					if = {
						limit = {
							NOT = { faith = title:k_yemen.holder.faith }
						}
						vassal_contract_set_obligation_level = { type = religious_rights level = 1 }
					}
				}
				reverse_add_opinion = {
					modifier = angry_opinion
					target = title:e_abyssinia.holder
					opinion = -50
				}
			}
		}
	}

	# Anachronistic
	{
		if = {
			limit = {
				game_start_date >= 420.1.1
			}
			add_to_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:flag_created_yazd
			}
		}
	}

	# Anachronistic
	{
			add_to_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:TFE_establish_the_rouran_khaganate
			}
	}

	# Anachronistic
	{
		if = {
			limit = {
				AND = {
					game_start_date >= 532.1.1
					game_start_date <= 540.1.1
				}
			}
			set_global_variable = {
				name = has_eternal_peace
				value = yes
			}
		}
	}

	# Anachronistic
	{
		if = {
			limit = {
				game_start_date <= 476.1.1
				has_dlc_feature = hybridize_culture
			}
			culture:ostrogothic = {
				add_culture_tradition = tradition_malleable_invaders
				remove_variable = tradition_cooldown
			}
		}
	}

	# In converted games we don't know if yazd is a holy site.
	{
			faith:mazdayasna = {
				deactivate_holy_site = yazd  # Yazd hasn't been consacrated yet
			}
			faith:zurvanism = {
				deactivate_holy_site = yazd  # Yazd hasn't been consacrated yet
			}
			faith:gayomarthianism = {
				deactivate_holy_site = yazd  # Yazd hasn't been consacrated yet
			}
			faith:khurmazta = {
				deactivate_holy_site = yazd  # Yazd hasn't been consacrated yet
			}
			faith:mazdakism = {
				deactivate_holy_site = yazd  # Yazd hasn't been consacrated yet
			}
			faith:khurramism = {
				deactivate_holy_site = yazd  # Yazd hasn't been consacrated yet
			}
			faith:urartuism = {
				deactivate_holy_site = yazd  # Yazd hasn't been consacrated yet
			}
			faith:armaz = {
				deactivate_holy_site = yazd  # Yazd hasn't been consacrated yet
			}
			faith:magousaian = {
				deactivate_holy_site = yazd  # Yazd hasn't been consacrated yet
			}
	}

	{
		if = {
			limit = {
				NOT = {
					game_start_date = 476.9.4
				}
			}
			title:k_france = {
				set_color_from_title = title:k_france_2
				set_coa = title:k_france_2
			}
		}
	}

	# Seems not needed for converted games
	{
		title:e_western_roman_empire = {
			every_in_de_jure_hierarchy = {
				update_dynamic_coa = yes
			}
		}
		title:e_byzantium = {
			every_in_de_jure_hierarchy = {
				update_dynamic_coa = yes
			}
		}
		title:e_roman_empire = {
			every_in_de_jure_hierarchy = {
				update_dynamic_coa = yes
			}
		}
	}

	# Anachronistic
	{
		if = {
			limit = {
				OR = {
					game_start_date <= 376.1.1 # End of the Former Liang Dynasty
					game_start_date >= 441.1.1 # Northern Wei conquest of Northern Liang, reunifying Liang province
				}
			}		
			set_global_variable = {
				name = TFE_order_restored_to_liang
				value = yes
			}
		}
	}

	# Anachronistic
	{
		if = {
			limit = {
				game_start_date >= 476.9.4
			}
			set_global_variable = {
				name = wre_collapsed
				value = yes
			}
		}
	}

	{
			set_global_variable = {
				name = britannia_dejure_splity
				value = yes
			}
			set_global_variable = {
				name = gallia_dejure_splity
				value = yes
			}
			set_global_variable = {
				name = hispania_dejure_splity
				value = yes
			}
			set_global_variable = {
				name = septem_provinciae_dejure_splity
				value = yes
			}
	}

	# Anachronistic
	{
			title:k_andalusia = {
				set_title_name = BAETICA
			}
			title:k_badajoz = {
				set_title_name = LUSITANIA
			}
	}

	# Anachronistic
	{
TFE_on_game_start_de_jure_capitals = {
	effect = {
		if = {
			limit = {
				current_date <= 395.1.17
			}
			title:k_nubia = {
				set_capital_county = title:c_abwab
			}
		}
		if = {
			limit = {
				current_date <= 476.9.4
			}
			title:e_britannia = {
				set_capital_county = title:c_gowrie
			}
		}
		else = {
			title:e_britannia = {
				set_color_from_title = title:e_britannia_2
			}
		}
		if = {
			limit = {
				current_date < 632.6.8
			}
			title:e_arabia = {
				set_capital_county = title:c_medina
			}
		}
	}
}
	}
	{
		TFE_on_game_start_de_jure_capitals
	}

	{
TFE_on_game_start_larp_history = {
	effect = {
		if = {
			limit = {
				any_ruler = {
					has_game_rule = dead_cultures_enabled 
				}
			}
			title:c_kairwan = {
				set_county_culture = culture:punic
				set_county_faith = faith:carthage_pagan
			}
			title:c_west_qamuda = {
				set_county_culture = culture:punic
				set_county_faith = faith:carthage_pagan
			}
			title:c_tabassa = {
				set_county_culture = culture:punic
				set_county_faith = faith:carthage_pagan
			}
			title:c_qashtiliya = {
				set_county_culture = culture:punic
				set_county_faith = faith:carthage_pagan
			}

			title:c_vermandois = {
				set_county_culture = culture:gaul
			}
			title:c_bayeux = {
				set_county_culture = culture:gaul
			}
			title:c_avranches = {
				set_county_culture = culture:gaul
			}
			title:c_lisieux = {
				set_county_culture = culture:gaul
			}
			if = {
				limit = {
					dummy_male.current_date < 400
				}
				title:c_eu = {
					set_county_culture = culture:gaul
				}
				title:c_rethel = {
					set_county_culture = culture:gaul
				}
				title:c_dijon = {
					set_county_culture = culture:gaul
				}
				title:c_briey = {
					set_county_culture = culture:gaul
				}
				title:c_luxembourg = {
					set_county_culture = culture:gaul
				}
				title:c_bouillon = {
					set_county_culture = culture:gaul
				}
				title:c_namur = {
					set_county_culture = culture:gaul
				}
			}
		}
	}
}
	}
	{
		TFE_on_game_start_larp_history
	}

	# Seems to cause infinite recursion bacause of the on-action having the same name as the effect :/
	# TODO: verify
	{
garamantes_flavour_effect = {
	effect = {
		garamantes_flavour_effect = yes
	}
}
	}
	{
		garamantes_flavour_effect
	}
}

"common/on_action/sea_minority_game_start.txt" = {
	# Anachronistic
	{
set_minorities_game_start = {
	effect = {

		#Africa

		if = {
			limit = {
				game_start_date >= 300.1.1
			}
			add_culture_minority_effect = {
				CULTURE = culture:gaw
				SIZE = large
				COUNTY = title:c_kukiya
			}
			add_culture_minority_effect = {
				CULTURE = culture:bozo
				SIZE = small
				COUNTY = title:c_kukiya
			}
			add_culture_minority_effect = {
				CULTURE = culture:sorko
				SIZE = small
				COUNTY = title:c_gao
			}
			add_culture_minority_effect = {
				CULTURE = culture:bozo
				SIZE = small
				COUNTY = title:c_gao
			}
			add_culture_minority_effect = {
				CULTURE = culture:marka
				SIZE = small
				COUNTY = title:c_gao
			}
			add_culture_minority_effect = {
				CULTURE = culture:bobo
				SIZE = small
				COUNTY = title:c_gao
			}
			add_culture_minority_effect = {
				CULTURE = culture:malinke
				SIZE = small
				COUNTY = title:c_gao
			}
			add_culture_minority_effect = {
				CULTURE = culture:garamantian
				SIZE = small
				COUNTY = title:c_tessalit
			}
			add_culture_minority_effect = {
				CULTURE = culture:garamantian
				SIZE = small
				COUNTY = title:c_djado
			}
			add_culture_minority_effect = {
				CULTURE = culture:garamantian
				SIZE = small
				COUNTY = title:c_djanet
			}
			add_culture_minority_effect = {
				CULTURE = culture:garamantian
				SIZE = small
				COUNTY = title:c_bilma
			}
			add_culture_minority_effect = {
				CULTURE = culture:garamantian
				SIZE = small
				COUNTY = title:c_tibesti
			}
			add_culture_minority_effect = {
				CULTURE = culture:garamantian
				SIZE = small
				COUNTY = title:c_kanem
			}
			add_culture_minority_effect = {
				CULTURE = culture:garamantian
				SIZE = small
				COUNTY = title:c_dirku
			}
			add_culture_minority_effect = {
				CULTURE = culture:laguatan
				SIZE = small
				COUNTY = title:c_barqa
			}
			add_culture_minority_effect = {
				CULTURE = culture:laguatan
				SIZE = small
				COUNTY = title:c_derna
			}
			add_culture_minority_effect = {
				CULTURE = culture:laguatan
				SIZE = small
				COUNTY = title:c_syrte
			}
			add_culture_minority_effect = {
				CULTURE = culture:laguatan
				SIZE = small
				COUNTY = title:c_labda
			}
			add_culture_minority_effect = {
				CULTURE = culture:laguatan
				SIZE = small
				COUNTY = title:c_tripolitana
			}
			add_culture_minority_effect = {
				CULTURE = culture:laguatan
				SIZE = small
				COUNTY = title:c_gabes
			}
			add_culture_minority_effect = {
				CULTURE = culture:laguatan
				SIZE = small
				COUNTY = title:c_djerba
			}
			add_culture_minority_effect = {
				CULTURE = culture:laguatan
				SIZE = small
				COUNTY = title:c_ghat
			}
			add_culture_minority_effect = {
				CULTURE = culture:laguatan
				SIZE = small
				COUNTY = title:c_tobruk
			}
			add_culture_minority_effect = {
				CULTURE = culture:laguatan
				SIZE = small
				COUNTY = title:c_sullum
			}
			add_culture_minority_effect = {
				CULTURE = culture:laguatan
				SIZE = small
				COUNTY = title:c_farafra
			}
			add_culture_minority_effect = {
				CULTURE = culture:laguatan
				SIZE = small
				COUNTY = title:c_dakhla
			}
			add_culture_minority_effect = {
				CULTURE = culture:laguatan
				SIZE = small
				COUNTY = title:c_bahriya
			}
			add_culture_minority_effect = {
				CULTURE = culture:laguatan
				SIZE = small
				COUNTY = title:c_kharga
			}
		}

		# Punic
		if = {
			limit = {
				game_start_date <= 600.1.1
			}
			add_culture_minority_effect = {
				CULTURE = culture:punic
				SIZE = large
				COUNTY = title:c_tunis
			}
			add_faith_minority_effect = {
				FAITH = faith:carthage_pagan
				SIZE = large
				COUNTY = title:c_tunis
			}
			add_culture_minority_effect = {
				CULTURE = culture:punic
				SIZE = large
				COUNTY = title:c_satfura
			}
			add_faith_minority_effect = {
				FAITH = faith:carthage_pagan
				SIZE = large
				COUNTY = title:c_satfura
			}
			add_culture_minority_effect = {
				CULTURE = culture:punic
				SIZE = large
				COUNTY = title:c_medjerda
			}
			add_faith_minority_effect = {
				FAITH = faith:carthage_pagan
				SIZE = large
				COUNTY = title:c_medjerda
			}
			add_culture_minority_effect = {
				CULTURE = culture:punic
				SIZE = large
				COUNTY = title:c_kairwan
			}
			add_faith_minority_effect = {
				FAITH = faith:carthage_pagan
				SIZE = large
				COUNTY = title:c_kairwan
			}
			add_culture_minority_effect = {
				CULTURE = culture:punic
				SIZE = large
				COUNTY = title:c_mahdiya
			}
			add_faith_minority_effect = {
				FAITH = faith:carthage_pagan
				SIZE = large
				COUNTY = title:c_mahdiya
			}
			add_culture_minority_effect = {
				CULTURE = culture:punic
				SIZE = large
				COUNTY = title:c_sfax
			}
			add_faith_minority_effect = {
				FAITH = faith:carthage_pagan
				SIZE = large
				COUNTY = title:c_sfax
			}
			add_culture_minority_effect = {
				CULTURE = culture:punic
				SIZE = large
				COUNTY = title:c_gabes
			}
			add_faith_minority_effect = {
				FAITH = faith:carthage_pagan
				SIZE = large
				COUNTY = title:c_gabes
			}
			add_culture_minority_effect = {
				CULTURE = culture:punic
				SIZE = large
				COUNTY = title:c_djerba
			}
			add_faith_minority_effect = {
				FAITH = faith:carthage_pagan
				SIZE = large
				COUNTY = title:c_djerba
			}
			add_culture_minority_effect = {
				CULTURE = culture:punic
				SIZE = large
				COUNTY = title:c_tripolitana
			}
			add_faith_minority_effect = {
				FAITH = faith:carthage_pagan
				SIZE = large
				COUNTY = title:c_tripolitana
			}
			add_culture_minority_effect = {
				CULTURE = culture:punic
				SIZE = large
				COUNTY = title:c_labda
			}
			add_faith_minority_effect = {
				FAITH = faith:carthage_pagan
				SIZE = large
				COUNTY = title:c_labda
			}
		}

		# Alans
		if = {
			limit = {
				game_start_date >= 400.1.1
			}
			add_culture_minority_effect = {
				CULTURE = culture:alan
				SIZE = large
				COUNTY = title:c_tunis
			}
			add_faith_minority_effect = {
				FAITH = faith:arianism
				SIZE = large
				COUNTY = title:c_tunis
			}
		}

		# Gauls
		if = {
			limit = {
				game_start_date <= 600.1.1
			}
			add_culture_minority_effect = {
				CULTURE = culture:gaul
				SIZE = small
				COUNTY = title:c_brugge
			}
			add_faith_minority_effect = {
				FAITH = faith:gaulish_pagan
				SIZE = small
				COUNTY = title:c_brugge
			}
			add_culture_minority_effect = {
				CULTURE = culture:gaul
				SIZE = small
				COUNTY = title:c_yperen
			}
			add_faith_minority_effect = {
				FAITH = faith:gaulish_pagan
				SIZE = small
				COUNTY = title:c_yperen
			}
			add_culture_minority_effect = {
				CULTURE = culture:gaul
				SIZE = small
				COUNTY = title:c_guines
			}
			add_faith_minority_effect = {
				FAITH = faith:gaulish_pagan
				SIZE = small
				COUNTY = title:c_guines
			}
			add_culture_minority_effect = {
				CULTURE = culture:gaul
				SIZE = small
				COUNTY = title:c_boulogne
			}
			add_faith_minority_effect = {
				FAITH = faith:gaulish_pagan
				SIZE = small
				COUNTY = title:c_boulogne
			}
			add_culture_minority_effect = {
				CULTURE = culture:gaul
				SIZE = small
				COUNTY = title:c_eu
			}
			add_faith_minority_effect = {
				FAITH = faith:gaulish_pagan
				SIZE = small
				COUNTY = title:c_eu
			}
		}

		# Rhaetian
		if = {
			limit = {
				game_start_date <= 450.1.1
			}
			add_culture_minority_effect = {
				CULTURE = culture:rhaetian
				SIZE = small
				COUNTY = title:c_trent
			}
			add_culture_minority_effect = {
				CULTURE = culture:rhaetian
				SIZE = small
				COUNTY = title:c_brescia
			}
		}

		##INDIA

		# Buddhists in holy sites and centres of learning
		add_faith_minority_effect = {
			FAITH = faith:pudgalavada
			SIZE = large
			COUNTY = title:c_mathura
		}
		add_faith_minority_effect = {
			FAITH = faith:sarvastivada
			SIZE = large
			COUNTY = title:c_mathura
		}
		add_faith_minority_effect = {
			FAITH = faith:dharmaguptaka
			SIZE = large
			COUNTY = title:c_mathura
		}
		add_faith_minority_effect = {
			FAITH = faith:mahasanghika
			SIZE = large
			COUNTY = title:c_mathura
		}
		add_faith_minority_effect = {
			FAITH = faith:pudgalavada
			SIZE = large
			COUNTY = title:c_varanasi
		}
		add_faith_minority_effect = {
			FAITH = faith:sarvastivada
			SIZE = large
			COUNTY = title:c_varanasi
		}
		add_faith_minority_effect = {
			FAITH = faith:dharmaguptaka
			SIZE = large
			COUNTY = title:c_varanasi
		}
		add_faith_minority_effect = {
			FAITH = faith:mahasanghika
			SIZE = large
			COUNTY = title:c_varanasi
		}
		add_faith_minority_effect = {
			FAITH = faith:pudgalavada
			SIZE = large
			COUNTY = title:c_vidisa
		}
		add_faith_minority_effect = {
			FAITH = faith:sarvastivada
			SIZE = large
			COUNTY = title:c_vidisa
		}
		add_faith_minority_effect = {
			FAITH = faith:dharmaguptaka
			SIZE = large
			COUNTY = title:c_vidisa
		}
		add_faith_minority_effect = {
			FAITH = faith:mahasanghika
			SIZE = large
			COUNTY = title:c_vidisa
		}
		add_faith_minority_effect = {
			FAITH = faith:pudgalavada
			SIZE = large
			COUNTY = title:c_somnath
		}

		# Pashupatas in Vidisha
		add_faith_minority_effect = {
			FAITH = faith:pashupata
			SIZE = large
			COUNTY = title:c_vidisa
		}

		# Pataliputra has Bhagavatas
		add_faith_minority_effect = {
			FAITH = faith:krishnaism
			SIZE = large
			COUNTY = title:c_magadha
		}

		# Varanasi is diverse
		add_faith_minority_effect = {
			FAITH = faith:krishnaism
			SIZE = large
			COUNTY = title:c_varanasi
		}
		add_faith_minority_effect = {
			FAITH = faith:vaishnavism
			SIZE = large
			COUNTY = title:c_varanasi
		}
		add_faith_minority_effect = {
			FAITH = faith:shaivism
			SIZE = large
			COUNTY = title:c_varanasi
		}
		add_faith_minority_effect = {
			FAITH = faith:mahasanghika
			SIZE = large
			COUNTY = title:c_varanasi
		}
		add_faith_minority_effect = {
			FAITH = faith:sarvastivada
			SIZE = large
			COUNTY = title:c_varanasi
		}

		# Jains in Kajangala, Mithila, and Radha
		add_faith_minority_effect = {
			FAITH = faith:svetambara
			SIZE = large
			COUNTY = title:c_damin_i_koh
		}
		add_faith_minority_effect = {
			FAITH = faith:svetambara
			SIZE = large
			COUNTY = title:c_mithila
		}
		add_faith_minority_effect = {
			FAITH = faith:svetambara
			SIZE = large
			COUNTY = title:c_radha
		}

		# Kherwals in Kajangala
		add_culture_minority_effect = {
			CULTURE = culture:munda
			SIZE = small
			COUNTY = title:c_damin_i_koh
		}

		# Dravida Shaivas in Tamilakam
		add_faith_minority_effect = {
			FAITH = faith:dravida_saiva
			SIZE = large
			COUNTY = title:c_cholamandalam
		}
		add_faith_minority_effect = {
			FAITH = faith:dravida_saiva
			SIZE = large
			COUNTY = title:c_korkai
		}
		add_faith_minority_effect = {
			FAITH = faith:dravida_saiva
			SIZE = large
			COUNTY = title:c_madurai
		}
		add_faith_minority_effect = {
			FAITH = faith:srikula_shaktism
			SIZE = large
			COUNTY = title:c_jaffna
		}
		add_faith_minority_effect = {
			FAITH = faith:dravida_saiva
			SIZE = large
			COUNTY = title:c_kongu
		}
		add_faith_minority_effect = {
			FAITH = faith:dravida_saiva
			SIZE = large
			COUNTY = title:c_korkai
		}

		# Digambaras in Tamilakam
		add_faith_minority_effect = {
			FAITH = faith:digambara
			SIZE = large
			COUNTY = title:c_cholamandalam
		}
		add_faith_minority_effect = {
			FAITH = faith:digambara
			SIZE = large
			COUNTY = title:c_korkai
		}
		add_faith_minority_effect = {
			FAITH = faith:digambara
			SIZE = large
			COUNTY = title:c_madurai
		}
		add_faith_minority_effect = {
			FAITH = faith:dravida_saiva
			SIZE = large
			COUNTY = title:c_korkai
		}

		# Tamils in Tambapanni
		add_culture_minority_effect = {
			CULTURE = culture:tamil
			SIZE = large
			COUNTY = title:c_batticaloa
		}
		add_culture_minority_effect = {
			CULTURE = culture:tamil
			SIZE = large
			COUNTY = title:c_phiti
		}
		add_culture_minority_effect = {
			CULTURE = culture:tamil
			SIZE = large
			COUNTY = title:c_trincomalee
		}
		add_faith_minority_effect = {
			FAITH = faith:dravida_saiva
			SIZE = large
			COUNTY = title:c_batticaloa
		}
		add_faith_minority_effect = {
			FAITH = faith:dravida_saiva
			SIZE = large
			COUNTY = title:c_phiti
		}
		add_faith_minority_effect = {
			FAITH = faith:dravida_saiva
			SIZE = large
			COUNTY = title:c_trincomalee
		}

		# Maharashtrakas in port towns
		add_culture_minority_effect = {
			CULTURE = culture:marathi
			SIZE = large
			COUNTY = title:c_surparaka
		}
		add_culture_minority_effect = {
			CULTURE = culture:marathi
			SIZE = large
			COUNTY = title:c_panaji
		}
		add_culture_minority_effect = {
			CULTURE = culture:marathi
			SIZE = large
			COUNTY = title:c_kondana
		}
		add_culture_minority_effect = {
			CULTURE = culture:marathi
			SIZE = large
			COUNTY = title:c_karahataka
		}
		add_culture_minority_effect = {
			CULTURE = culture:marathi
			SIZE = large
			COUNTY = title:c_kolhapur
		}

		# Avantakas in their homeland
		add_culture_minority_effect = {
			CULTURE = culture:avantika
			SIZE = large
			COUNTY = title:c_sarangpur
		}
		add_faith_minority_effect = {
			FAITH = faith:saura
			SIZE = large
			COUNTY = title:c_sarangpur
		}
		add_culture_minority_effect = {
			CULTURE = culture:avantika
			SIZE = large
			COUNTY = title:c_vidisa
		}
		add_faith_minority_effect = {
			FAITH = faith:saura
			SIZE = large
			COUNTY = title:c_vidisa
		}
		add_culture_minority_effect = {
			CULTURE = culture:avantika
			SIZE = large
			COUNTY = title:c_dasapura
		}
		add_faith_minority_effect = {
			FAITH = faith:saura
			SIZE = large
			COUNTY = title:c_dasapura
		}
		# Malava settlement in the Narmada valley
		add_culture_minority_effect = {
			CULTURE = culture:malvi
			SIZE = large
			COUNTY = title:c_ujjayini
		}
		add_faith_minority_effect = {
			FAITH = faith:pashupata
			SIZE = large
			COUNTY = title:c_ujjayini
		}
		add_culture_minority_effect = {
			CULTURE = culture:malvi
			SIZE = large
			COUNTY = title:c_dhara
		}
		add_faith_minority_effect = {
			FAITH = faith:pashupata
			SIZE = large
			COUNTY = title:c_dhara
		}
		# Vaishnavas and Shaivas in Haridwar
		add_faith_minority_effect = {
			FAITH = faith:pashupata
			SIZE = large
			COUNTY = title:c_ujjayini
		}
		add_faith_minority_effect = {
			FAITH = faith:pashupata
			SIZE = large
			COUNTY = title:c_ujjayini
		}

		# Buddhists in Sanchi
		add_faith_minority_effect = {
			FAITH = faith:mahasanghika
			SIZE = large
			COUNTY = title:c_vidisa
		}

		# Narasimha Cult in Mathura
		add_faith_minority_effect = {
			FAITH = faith:narasimha
			SIZE = small
			COUNTY = title:c_mathura
		}

		# Kanchipuram is diverse
		add_faith_minority_effect = {
			FAITH = faith:dravida_saiva
			SIZE = large
			COUNTY = title:c_kanchipuram
		}
		add_faith_minority_effect = {
			FAITH = faith:theravada
			SIZE = large
			COUNTY = title:c_kanchipuram
		}
		add_faith_minority_effect = {
			FAITH = faith:pudgalavada
			SIZE = small
			COUNTY = title:c_kanchipuram
		}
		add_faith_minority_effect = {
			FAITH = faith:vaishnavism
			SIZE = large
			COUNTY = title:c_kanchipuram
		}
		add_faith_minority_effect = {
			FAITH = faith:digambara
			SIZE = small
			COUNTY = title:c_kanchipuram
		}
		add_faith_minority_effect = {
			FAITH = faith:mahasanghika
			SIZE = small
			COUNTY = title:c_kanchipuram
		}
		add_culture_minority_effect = {
			CULTURE = culture:telugu
			SIZE = large
			COUNTY = title:c_kanchipuram
		}
		add_faith_minority_effect = {
			FAITH = faith:manichean
			SIZE = small
			COUNTY = title:c_kanchipuram
		}

		# Jews and Christians in Kerala
		add_faith_minority_effect = {
			FAITH = faith:malabarism
			SIZE = small
			COUNTY = title:c_kerala
		}
		if = {
			limit = {
				game_start_date < 400.1.1
			}
			add_faith_minority_effect = {
				FAITH = faith:nicene
				SIZE = small
				COUNTY = title:c_kerala
			}
		}
		if = {
			limit = {
				game_start_date > 400.1.1
			}
			add_faith_minority_effect = {
				FAITH = faith:nestorian
				SIZE = small
				COUNTY = title:c_kerala
			}
		}

		# Christians in Tambapanni
		if = {
			limit = {
				game_start_date < 400.1.1
			}
			add_faith_minority_effect = {
				FAITH = faith:nicene
				SIZE = small
				COUNTY = title:c_kotte
			}
		}
		if = {
			limit = {
				game_start_date > 400.1.1
			}
			add_faith_minority_effect = {
				FAITH = faith:nestorian
				SIZE = small
				COUNTY = title:c_kotte
			}
		}
		
		# Zoroastrians and manicheans in Sindh and Gujarat
		add_faith_minority_effect = {
			FAITH = faith:mazdayasna
			SIZE = small
			COUNTY = title:c_debul
		}
		add_faith_minority_effect = {
			FAITH = faith:mazdayasna
			SIZE = small
			COUNTY = title:c_daman
		}
		add_faith_minority_effect = {
			FAITH = faith:mazdayasna
			SIZE = small
			COUNTY = title:c_surparaka
		}
		add_culture_minority_effect = {
			CULTURE = culture:persian
			SIZE = small
			COUNTY = title:c_debul
		}
		add_culture_minority_effect = {
			CULTURE = culture:persian
			SIZE = small
			COUNTY = title:c_daman
		}
		add_culture_minority_effect = {
			CULTURE = culture:persian
			SIZE = small
			COUNTY = title:c_surparaka
		}
		add_faith_minority_effect = {
			FAITH = faith:manichean
			SIZE = small
			COUNTY = title:c_debul
		}
		add_faith_minority_effect = {
			FAITH = faith:manichean
			SIZE = small
			COUNTY = title:c_daman
		}
		add_faith_minority_effect = {
			FAITH = faith:manichean
			SIZE = small
			COUNTY = title:c_surparaka
		}

		# Maldives
		add_faith_minority_effect = {
			FAITH = faith:mahayana
			SIZE = large
			COUNTY = title:c_maldives
		}
		add_faith_minority_effect = {
			FAITH = faith:theravada
			SIZE = large
			COUNTY = title:c_maldives
		}
		add_culture_minority_effect = {
			CULTURE = culture:malaiya
			SIZE = small
			COUNTY = title:c_maldives
		}
		add_culture_minority_effect = {
			CULTURE = culture:tamil
			SIZE = small
			COUNTY = title:c_maldives
		}

		# Shaivas in Kashmir
		add_faith_minority_effect = {
			FAITH = faith:shaivism
			SIZE = large
			COUNTY = title:c_kasmira
		}
		add_faith_minority_effect = {
			FAITH = faith:shaivism
			SIZE = large
			COUNTY = title:c_astore
		}
		add_faith_minority_effect = {
			FAITH = faith:shaivism
			SIZE = large
			COUNTY = title:c_allai
		}

		# Shakas in Saurashtra
		add_culture_minority_effect = {
			CULTURE = culture:shaka
			SIZE = large
			COUNTY = title:c_navasarika
		}
		add_faith_minority_effect = {
			FAITH = faith:mahayana
			SIZE = large
			COUNTY = title:c_navasarika
		}
		add_culture_minority_effect = {
			CULTURE = culture:shaka
			SIZE = large
			COUNTY = title:c_vadodara
		}
		add_faith_minority_effect = {
			FAITH = faith:mahayana
			SIZE = large
			COUNTY = title:c_vadodara
		}
		add_culture_minority_effect = {
			CULTURE = culture:shaka
			SIZE = large
			COUNTY = title:c_ujjayini
		}
		add_faith_minority_effect = {
			FAITH = faith:mahayana
			SIZE = large
			COUNTY = title:c_ujjayini
		}
		add_culture_minority_effect = {
			CULTURE = culture:shaka
			SIZE = large
			COUNTY = title:c_dvaraka
		}

		# Yuezhi in Gandhara

		add_faith_minority_effect = {
			FAITH = faith:sarvastivada
			SIZE = large
			COUNTY = title:c_purushapura
		}
		add_culture_minority_effect = {
			CULTURE = culture:yuezhi
			SIZE = large
			COUNTY = title:c_purushapura
		}

		# Burusho people

		add_culture_minority_effect = {
			CULTURE = culture:burusho
			SIZE = large
			COUNTY = title:c_yasin
		}

		# Abhiras

		add_culture_minority_effect = {
			CULTURE = culture:abhira
			SIZE = large
			COUNTY = title:c_vardhamana
		}

		add_culture_minority_effect = {
			CULTURE = culture:abhira
			SIZE = large
			COUNTY = title:c_valabhi
		}

		add_culture_minority_effect = {
			CULTURE = culture:abhira
			SIZE = large
			COUNTY = title:c_surparaka
		}

		# Veddas

		add_culture_minority_effect = {
			CULTURE = culture:vedda
			SIZE = large
			COUNTY = title:c_dakhina_desa
		}

		add_culture_minority_effect = {
			CULTURE = culture:vedda
			SIZE = large
			COUNTY = title:c_kandy
		}

		add_culture_minority_effect = {
			CULTURE = culture:vedda
			SIZE = large
			COUNTY = title:c_rohana
		}

		add_culture_minority_effect = {
			CULTURE = culture:vedda
			SIZE = large
			COUNTY = title:c_batticaloa
		}

		add_culture_minority_effect = {
			CULTURE = culture:vedda
			SIZE = large
			COUNTY = title:c_phiti
		}

		add_culture_minority_effect = {
			CULTURE = culture:vedda
			SIZE = large
			COUNTY = title:c_trincomalee
		}

		add_culture_minority_effect = {
			CULTURE = culture:vedda
			SIZE = large
			COUNTY = title:c_jaffna
		}

		add_culture_minority_effect = {
			CULTURE = culture:vedda
			SIZE = large
			COUNTY = title:c_kotte
		}

		add_faith_minority_effect = {
			FAITH = faith:vedda_pagan
			SIZE = large
			COUNTY = title:c_dakhina_desa
		}

		add_faith_minority_effect = {
			FAITH = faith:vedda_pagan
			SIZE = large
			COUNTY = title:c_kandy
		}

		add_faith_minority_effect = {
			FAITH = faith:vedda_pagan
			SIZE = large
			COUNTY = title:c_rohana
		}

		add_faith_minority_effect = {
			FAITH = faith:vedda_pagan
			SIZE = large
			COUNTY = title:c_batticaloa
		}

		add_faith_minority_effect = {
			FAITH = faith:vedda_pagan
			SIZE = large
			COUNTY = title:c_phiti
		}

		add_faith_minority_effect = {
			FAITH = faith:vedda_pagan
			SIZE = large
			COUNTY = title:c_trincomalee
		}

		add_faith_minority_effect = {
			FAITH = faith:vedda_pagan
			SIZE = large
			COUNTY = title:c_jaffna
		}

		add_faith_minority_effect = {
			FAITH = faith:vedda_pagan
			SIZE = large
			COUNTY = title:c_kotte
		}

		# Burma Minorities

		add_culture_minority_effect = {
			CULTURE = culture:burmese
			SIZE = large
			COUNTY = title:c_takon
		}
		
		add_culture_minority_effect = {
			CULTURE = culture:mon
			SIZE = large
			COUNTY = title:c_kusumi
		}

		add_culture_minority_effect = {
			CULTURE = culture:zo
			SIZE = large
			COUNTY = title:c_manipur
		}

		add_faith_minority_effect = {
			FAITH = faith:theravada
			SIZE = large
			COUNTY = title:c_kusumi
		}

		add_faith_minority_effect = {
			FAITH = faith:shaivism
			SIZE = large
			COUNTY = title:c_yamethin
		}

		add_faith_minority_effect = {
			FAITH = faith:shaivism
			SIZE = small
			COUNTY = title:c_magwe
		}

		##JEWISH PEOPLE
		
		#Jewish and Samaritan minorities in Jerusalem
		add_culture_minority_effect = {
			CULTURE = culture:hebrew
			SIZE = large
			COUNTY = title:c_jerusalem
		}
		add_faith_minority_effect = {
			FAITH = faith:samaritan
			SIZE = large
			COUNTY = title:c_jerusalem
		}
		add_faith_minority_effect = {
			FAITH = faith:rabbinism
			SIZE = large
			COUNTY = title:c_jerusalem
		}

		#Jews in Himyar
		add_faith_minority_effect = {
			FAITH = faith:rabbinism
			SIZE = small
			COUNTY = title:c_taizz
		}

		add_faith_minority_effect = {
			FAITH = faith:rabbinism
			SIZE = small
			COUNTY = title:c_mandab
		}

		add_faith_minority_effect = {
			FAITH = faith:rabbinism
			SIZE = small
			COUNTY = title:c_dathina
		}

		add_faith_minority_effect = {
			FAITH = faith:rabbinism
			SIZE = large
			COUNTY = title:c_sanaa
		}

		add_faith_minority_effect = {
			FAITH = faith:rabbinism
			SIZE = large
			COUNTY = title:c_mahra
		}

		#Jews and Christians in Cyrenaica
		add_faith_minority_effect = {
			FAITH = faith:rabbinism
			SIZE = large
			COUNTY = title:c_barqa
		}
		if = {
			limit = {
				game_start_date > 476.1.1
				game_start_date < 600.1.1
			}
			add_faith_minority_effect = {
				FAITH = faith:chalcedonian
				SIZE = large
				COUNTY = title:c_barqa
			}
			add_culture_minority_effect = {
				CULTURE = culture:aegyptian
				SIZE = large
				COUNTY = title:c_barqa
			}
			add_faith_minority_effect = {
				FAITH = faith:coptic
				SIZE = large
				COUNTY = title:c_barqa
			}
			add_culture_minority_effect = {
				CULTURE = culture:kemetic
				SIZE = large
				COUNTY = title:c_barqa
			}
		}
		if = {
			limit = {
				game_start_date < 600.1.1
			}
			add_faith_minority_effect = {
				FAITH = faith:ammon_pagan
				SIZE = large
				COUNTY = title:c_barqa
			}
			#add_culture_minority_effect = {
			#	CULTURE = culture:garamantian
			#	SIZE = large
			#	COUNTY = title:c_barqa
			#}
			add_faith_minority_effect = {
				FAITH = faith:ammon_pagan
				SIZE = large
				COUNTY = title:c_derna
			}
			#add_culture_minority_effect = {
			#	CULTURE = culture:garamantian
			#	SIZE = large
			#	COUNTY = title:c_derna
			#}
		}
		add_faith_minority_effect = {
			FAITH = faith:rabbinism
			SIZE = small
			COUNTY = title:c_napoli
		}
		add_faith_minority_effect = {
			FAITH = faith:rabbinism
			SIZE = small
			COUNTY = title:c_lombardia
		}
		add_faith_minority_effect = {
			FAITH = faith:rabbinism
			SIZE = small
			COUNTY = title:c_genoa
		}	

		add_faith_minority_effect = {
			FAITH = faith:rabbinism
			SIZE = small
			COUNTY = title:c_derna
		}

		add_faith_minority_effect = {
			FAITH = faith:rabbinism
			SIZE = small
			COUNTY = title:c_tobruk
		}

		#Jews in Rome
		add_faith_minority_effect = {
			FAITH = faith:rabbinism
			SIZE = small
			COUNTY = title:c_roma
		}

		#Jews in Mesopotamia ##Add more later
		add_faith_minority_effect = {
			FAITH = faith:malabarism
			SIZE = large
			COUNTY = title:c_ctesiphon
		}

		add_faith_minority_effect = {
			FAITH = faith:malabarism
			SIZE = large
			COUNTY = title:c_baghdad
		}

		add_faith_minority_effect = {
			FAITH = faith:malabarism
			SIZE = large
			COUNTY = title:c_iskaf
		}

		add_faith_minority_effect = {
			FAITH = faith:malabarism
			SIZE = large
			COUNTY = title:c_anbar
		}

		add_faith_minority_effect = {
			FAITH = faith:malabarism
			SIZE = large
			COUNTY = title:c_ahvaz
		}

		add_faith_minority_effect = {
			FAITH = faith:malabarism
			SIZE = large
			COUNTY = title:c_tustar
		}

		add_faith_minority_effect = {
			FAITH = faith:malabarism
			SIZE = small
			COUNTY = title:c_basra
		}

		#Jews in Egypt ##Add more later
		add_faith_minority_effect = {
			FAITH = faith:rabbinism
			SIZE = large
			COUNTY = title:c_alexandria
		}

		#Jews in Syria ##Add more later
		add_faith_minority_effect = {
			FAITH = faith:rabbinism
			SIZE = large
			COUNTY = title:c_antiocheia
		}

		add_faith_minority_effect = {
			FAITH = faith:rabbinism
			SIZE = large
			COUNTY = title:c_edessa
		}

		add_faith_minority_effect = {
			FAITH = faith:rabbinism
			SIZE = large
			COUNTY = title:c_beirut
		}

		add_faith_minority_effect = {
			FAITH = faith:rabbinism
			SIZE = large
			COUNTY = title:c_tripoli
		}

		add_faith_minority_effect = {
			FAITH = faith:rabbinism
			SIZE = large
			COUNTY = title:c_damascus
		}

		add_faith_minority_effect = {
			FAITH = faith:rabbinism
			SIZE = large
			COUNTY = title:c_homs
		}

		#Jews in Anatolia ##Add more later
		add_faith_minority_effect = {
			FAITH = faith:rabbinism
			SIZE = large
			COUNTY = title:c_cilicia
		}

		add_faith_minority_effect = {
			FAITH = faith:rabbinism
			SIZE = small
			COUNTY = title:c_lycandus
		}

		add_faith_minority_effect = {
			FAITH = faith:rabbinism
			SIZE = small
			COUNTY = title:c_tall_hamid
		}

		add_faith_minority_effect = {
			FAITH = faith:rabbinism
			SIZE = large
			COUNTY = title:c_seleucia
		}

		#Jews in Greece ##Add more later
		add_faith_minority_effect = {
			FAITH = faith:rabbinism
			SIZE = small
			COUNTY = title:c_attica
		}
		add_faith_minority_effect = {
			FAITH = faith:samaritan  #Samaritan synagogue in Thessaloniki
			SIZE = small
			COUNTY = title:c_thessalonika
		}
		add_faith_minority_effect = {
			FAITH = faith:rabbinism
			SIZE = small
			COUNTY = title:c_thessalonika
		}

		#Jews in Cyprus
		add_faith_minority_effect = {
			FAITH = faith:rabbinism
			SIZE = large
			COUNTY = title:c_nicosia
		}
		add_faith_minority_effect = {
			FAITH = faith:rabbinism
			SIZE = large
			COUNTY = title:c_famagusta
		}

		#Jews in Aksum
		add_faith_minority_effect = {
			FAITH = faith:rabbinism
			SIZE = small
			COUNTY = title:c_tigre
		}

		#Jews in Georgia
		add_faith_minority_effect = {
			FAITH = faith:malabarism
			SIZE = small
			COUNTY = title:c_guria
		}

		add_faith_minority_effect = {
			FAITH = faith:malabarism
			SIZE = small
			COUNTY = title:c_odishi
		}

		#Jews in Iran

		add_faith_minority_effect = {
			FAITH = faith:malabarism
			SIZE = large
			COUNTY = title:c_isfahan
		}

		add_faith_minority_effect = {
			FAITH = faith:malabarism
			SIZE = small
			COUNTY = title:c_hamadan
		}

		##ERAN
		
		#Ctesiphon's diversity

		add_faith_minority_effect = {
			FAITH = faith:manichean
			SIZE = large
			COUNTY = title:c_ctesiphon
		}
		add_culture_minority_effect = {
			CULTURE = culture:assyrian
			SIZE = large
			COUNTY = title:c_ctesiphon
		}
		add_culture_minority_effect = {
			CULTURE = culture:parthian
			SIZE = small
			COUNTY = title:c_ctesiphon
		}
		add_culture_minority_effect = {
			CULTURE = culture:aramean
			SIZE = small
			COUNTY = title:c_ctesiphon
		}
		add_culture_minority_effect = {
			CULTURE = culture:greek
			SIZE = small
			COUNTY = title:c_ctesiphon
		}
		if = {
			limit = {
				game_start_date < 400.1.1
			}
			add_faith_minority_effect = {
				FAITH = faith:nicene
				SIZE = large
				COUNTY = title:c_ctesiphon
			}
		}
		if = {
			limit = {
				game_start_date > 400.1.1
			}
			add_faith_minority_effect = {
				FAITH = faith:nestorian
				SIZE = large
				COUNTY = title:c_ctesiphon
			}
		}

		#Meshan's diversity
		add_culture_minority_effect = {
			CULTURE = culture:persian
			SIZE = large
			COUNTY = title:c_basra
		}
		add_culture_minority_effect = {
			CULTURE = culture:greek
			SIZE = small
			COUNTY = title:c_basra
		}
		add_culture_minority_effect = {
			CULTURE = culture:persian
			SIZE = large
			COUNTY = title:c_ubulla
		}
		add_culture_minority_effect = {
			CULTURE = culture:greek
			SIZE = small
			COUNTY = title:c_ubulla
		}
		add_culture_minority_effect = {
			CULTURE = culture:persian
			SIZE = large
			COUNTY = title:c_rusafa
		}
		add_culture_minority_effect = {
			CULTURE = culture:greek
			SIZE = small
			COUNTY = title:c_rusafa
		}
		add_faith_minority_effect = {
			FAITH = faith:mazdayasna
			SIZE = large
			COUNTY = title:c_basra
		}
		add_faith_minority_effect = {
			FAITH = faith:mazdayasna
			SIZE = large
			COUNTY = title:c_ubulla
		}
		add_faith_minority_effect = {
			FAITH = faith:mazdayasna
			SIZE = large
			COUNTY = title:c_rusafa
		}
		if = {
			limit = {
				game_start_date >= 400.1.1
			}
			add_culture_minority_effect = {
				CULTURE = culture:jat
				SIZE = small
				COUNTY = title:c_basra
			}
			add_culture_minority_effect = {
				CULTURE = culture:jat
				SIZE = large
				COUNTY = title:c_ubulla
			}
			add_culture_minority_effect = {
				CULTURE = culture:jat
				SIZE = large
				COUNTY = title:c_rusafa
			}
		}

		# Persians in Oman
		add_culture_minority_effect = {
			CULTURE = culture:persian
			SIZE = large
			COUNTY = title:c_batina
		}
		add_faith_minority_effect = {
			FAITH = faith:mazdayasna
			SIZE = large
			COUNTY = title:c_batina
		}
		add_culture_minority_effect = {
			CULTURE = culture:persian
			SIZE = large
			COUNTY = title:c_muscat
		}
		add_faith_minority_effect = {
			FAITH = faith:mazdayasna
			SIZE = large
			COUNTY = title:c_muscat
		}
		add_culture_minority_effect = {
			CULTURE = culture:persian
			SIZE = small
			COUNTY = title:c_julfar
		}
		add_faith_minority_effect = {
			FAITH = faith:mazdayasna
			SIZE = small
			COUNTY = title:c_julfar
		}

		# Sogdians in Tarim Basin/Dunhuang
		add_culture_minority_effect = {
			CULTURE = culture:sogdian
			SIZE = small
			COUNTY = title:c_shazhou
		}
		add_faith_minority_effect = {
			FAITH = faith:khurmazta
			SIZE = small
			COUNTY = title:c_shazhou
		}
		add_culture_minority_effect = {
			CULTURE = culture:sogdian
			SIZE = small
			COUNTY = title:c_khotan
		}
		add_faith_minority_effect = {
			FAITH = faith:khurmazta
			SIZE = small
			COUNTY = title:c_khotan
		}
		add_culture_minority_effect = {
			CULTURE = culture:sogdian
			SIZE = small
			COUNTY = title:c_yarkand
		}
		add_faith_minority_effect = {
			FAITH = faith:khurmazta
			SIZE = small
			COUNTY = title:c_yarkand
		}
		add_culture_minority_effect = {
			CULTURE = culture:sogdian
			SIZE = small
			COUNTY = title:c_kashgar
		}
		add_faith_minority_effect = {
			FAITH = faith:khurmazta
			SIZE = small
			COUNTY = title:c_kashgar
		}
		add_culture_minority_effect = {
			CULTURE = culture:sogdian
			SIZE = small
			COUNTY = title:c_kashgar
		}
		add_faith_minority_effect = {
			FAITH = faith:khurmazta
			SIZE = small
			COUNTY = title:c_kashgar
		}
		add_culture_minority_effect = {
			CULTURE = culture:sogdian
			SIZE = small
			COUNTY = title:c_karashar
		}
		add_faith_minority_effect = {
			FAITH = faith:khurmazta
			SIZE = small
			COUNTY = title:c_karashar
		}
		add_culture_minority_effect = {
			CULTURE = culture:sogdian
			SIZE = small
			COUNTY = title:c_kara_khoja
		}
		add_faith_minority_effect = {
			FAITH = faith:khurmazta
			SIZE = small
			COUNTY = title:c_kara_khoja
		}
		add_culture_minority_effect = {
			CULTURE = culture:sogdian
			SIZE = small
			COUNTY = title:c_kucha
		}
		add_faith_minority_effect = {
			FAITH = faith:khurmazta
			SIZE = small
			COUNTY = title:c_kucha
		}

		# Taoist presence in Dunhuang lands
		add_faith_minority_effect = {
			FAITH = faith:zhengyi
			SIZE = small
			COUNTY = title:c_kara_khoja
		}
		add_faith_minority_effect = {
			FAITH = faith:zhengyi
			SIZE = large
			COUNTY = title:c_shazhou
		}
		add_faith_minority_effect = {
			FAITH = faith:zhengyi
			SIZE = small
			COUNTY = title:c_xingqing
		}
		add_faith_minority_effect = {
			FAITH = faith:zhengyi
			SIZE = small
			COUNTY = title:c_shunzhou
		}
		add_faith_minority_effect = {
			FAITH = faith:zhengyi
			SIZE = large
			COUNTY = title:c_liangzhou
		}
		add_faith_minority_effect = {
			FAITH = faith:zhengyi
			SIZE = large
			COUNTY = title:c_fanhe
		}
		add_faith_minority_effect = {
			FAITH = faith:zhengyi
			SIZE = large
			COUNTY = title:c_dajing
		}
		add_faith_minority_effect = {
			FAITH = faith:zhengyi
			SIZE = large
			COUNTY = title:c_baiyin
		}
		add_faith_minority_effect = {
			FAITH = faith:zhengyi
			SIZE = large
			COUNTY = title:c_yongdeng
		}
		add_faith_minority_effect = {
			FAITH = faith:zhengyi
			SIZE = large
			COUNTY = title:c_ganzhou
		}
		add_faith_minority_effect = {
			FAITH = faith:zhengyi
			SIZE = small
			COUNTY = title:c_linze
		}
		add_faith_minority_effect = {
			FAITH = faith:zhengyi
			SIZE = small
			COUNTY = title:c_gaotai
		}
		add_faith_minority_effect = {
			FAITH = faith:zhengyi
			SIZE = small
			COUNTY = title:c_jinta
		}
		add_faith_minority_effect = {
			FAITH = faith:zhengyi
			SIZE = small
			COUNTY = title:c_suzhou
		}
		add_faith_minority_effect = {
			FAITH = faith:zhengyi
			SIZE = small
			COUNTY = title:c_yumen
		}
		add_faith_minority_effect = {
			FAITH = faith:zhengyi
			SIZE = small
			COUNTY = title:c_changma
		}
		add_faith_minority_effect = {
			FAITH = faith:zhengyi
			SIZE = small
			COUNTY = title:c_hongliuyuan
		}
		add_faith_minority_effect = {
			FAITH = faith:zhengyi
			SIZE = small
			COUNTY = title:c_shazhou
		}
		add_faith_minority_effect = {
			FAITH = faith:zhengyi
			SIZE = small
			COUNTY = title:c_yumenguan
		}
		add_faith_minority_effect = {
			FAITH = faith:zhengyi
			SIZE = small
			COUNTY = title:c_subei
		}

		# Bedouin presence in the Eastern Delta of Egypt
		add_culture_minority_effect = {
			CULTURE = culture:bedouin
			SIZE = small
			COUNTY = title:c_cairo
		}
		add_culture_minority_effect = {
			CULTURE = culture:bedouin
			SIZE = large
			COUNTY = title:c_sharkiya
		}
		add_culture_minority_effect = {
			CULTURE = culture:bedouin
			SIZE = large
			COUNTY = title:c_damietta
		}

		# Aegyptians in the Delta
		add_culture_minority_effect = {
			CULTURE = culture:aegyptian
			SIZE = large
			COUNTY = title:c_sharkiya
		}
		add_culture_minority_effect = {
			CULTURE = culture:aegyptian
			SIZE = large
			COUNTY = title:c_giza
		}
		add_culture_minority_effect = {
			CULTURE = culture:aegyptian
			SIZE = large
			COUNTY = title:c_al-gharbiya
		}
		add_culture_minority_effect = {
			CULTURE = culture:aegyptian
			SIZE = small
			COUNTY = title:c_fayyum
		}
		add_culture_minority_effect = {
			CULTURE = culture:aegyptian
			SIZE = small
			COUNTY = title:c_asyut
		}
		add_culture_minority_effect = {
			CULTURE = culture:aegyptian
			SIZE = small
			COUNTY = title:c_qus
		}
		add_culture_minority_effect = {
			CULTURE = culture:aegyptian
			SIZE = small
			COUNTY = title:c_aswan
		}
		add_culture_minority_effect = {
			CULTURE = culture:aegyptian
			SIZE = small
			COUNTY = title:c_cairo
		}

		# Egyptians in the Delta
		add_culture_minority_effect = {
			CULTURE = culture:kemetic
			SIZE = large
			COUNTY = title:c_damietta
		}
		add_culture_minority_effect = {
			CULTURE = culture:kemetic
			SIZE = large
			COUNTY = title:c_al-buhaira
		}
		add_culture_minority_effect = {
			CULTURE = culture:kemetic
			SIZE = large
			COUNTY = title:c_alexandria
		}

		# Nubians and Beja in Aswan
		add_culture_minority_effect = {
			CULTURE = culture:beja
			SIZE = small
			COUNTY = title:c_aswan
		}
		add_faith_minority_effect = {
			FAITH = faith:beja_pagan
			SIZE = small
			COUNTY = title:c_aswan
		}
		add_culture_minority_effect = {
			CULTURE = culture:nubian
			SIZE = small
			COUNTY = title:c_aswan
		}
		add_faith_minority_effect = {
			FAITH = faith:kushitism_pagan
			SIZE = small
			COUNTY = title:c_aswan
		}

		if = {
			limit = {
				game_start_date > 476.1.1
				game_start_date < 580.1.1
			}
			add_faith_minority_effect = {
				FAITH = faith:coptic
				SIZE = large
				COUNTY = title:c_faras
			}
			add_faith_minority_effect = {
				FAITH = faith:coptic
				SIZE = large
				COUNTY = title:c_kalabsha
			}
			add_faith_minority_effect = {
				FAITH = faith:coptic
				SIZE = small
				COUNTY = title:c_dongola
			}
			add_faith_minority_effect = {
				FAITH = faith:coptic
				SIZE = small
				COUNTY = title:c_abwab
			}
			add_faith_minority_effect = {
				FAITH = faith:coptic
				SIZE = small
				COUNTY = title:c_alodia
			}
		}

		# Ancient Egypt Pagan remnants and Egyptian religious minorities distribution
		if = {
			limit = {
				game_start_date > 476.1.1
				game_start_date < 580.1.1
			}
			add_faith_minority_effect = {
				FAITH = faith:egyptian_pagan
				SIZE = small
				COUNTY = title:c_aswan
			}
		}
		if = {
			limit = {
				game_start_date < 532.1.1
			}
			add_faith_minority_effect = {
				FAITH = faith:greco_egyptian_pagan
				SIZE = large
				COUNTY = title:c_alexandria
			}
		}
		else_if = {
			limit = {
				game_start_date >= 476.1.1
			}
			# If there are Aegyptians/Hellenized Egyptians here, put in Copts
			add_faith_minority_effect = {
				FAITH = faith:coptic
				SIZE = large
				COUNTY = title:c_derna
			}
			add_faith_minority_effect = {
				FAITH = faith:coptic
				SIZE = large
				COUNTY = title:c_tobruk
			}
			add_faith_minority_effect = {
				FAITH = faith:coptic
				SIZE = large
				COUNTY = title:c_sullum
			}
			add_faith_minority_effect = {
				FAITH = faith:coptic
				SIZE = large
				COUNTY = title:c_al-buhaira
			}
			add_faith_minority_effect = {
				FAITH = faith:coptic
				SIZE = large
				COUNTY = title:c_alexandria
			}
			add_faith_minority_effect = {
				FAITH = faith:coptic
				SIZE = large
				COUNTY = title:c_damietta
			}
			add_faith_minority_effect = {
				FAITH = faith:chalcedonian
				SIZE = large
				COUNTY = title:c_al-gharbiya
			}
			add_faith_minority_effect = {
				FAITH = faith:chalcedonian
				SIZE = large
				COUNTY = title:c_cairo
			}
			add_faith_minority_effect = {
				FAITH = faith:chalcedonian
				SIZE = large
				COUNTY = title:c_giza
			}
			add_faith_minority_effect = {
				FAITH = faith:chalcedonian
				SIZE = large
				COUNTY = title:c_fayyum
			}
			add_faith_minority_effect = {
				FAITH = faith:chalcedonian
				SIZE = large
				COUNTY = title:c_qus
			}
			add_faith_minority_effect = {
				FAITH = faith:chalcedonian
				SIZE = large
				COUNTY = title:c_bahnasa
			}
			add_faith_minority_effect = {
				FAITH = faith:chalcedonian
				SIZE = large
				COUNTY = title:c_ushmun
			}
			add_faith_minority_effect = {
				FAITH = faith:chalcedonian
				SIZE = large
				COUNTY = title:c_asyut
			}
			add_faith_minority_effect = {
				FAITH = faith:chalcedonian
				SIZE = large
				COUNTY = title:c_aswan
			}
			add_faith_minority_effect = {
				FAITH = faith:chalcedonian
				SIZE = large
				COUNTY = title:c_qusayr
			}
			add_faith_minority_effect = {
				FAITH = faith:chalcedonian
				SIZE = large
				COUNTY = title:c_farama
			}
			add_faith_minority_effect = {
				FAITH = faith:chalcedonian
				SIZE = large
				COUNTY = title:c_sinai
			}
			add_faith_minority_effect = {
				FAITH = faith:chalcedonian
				SIZE = large
				COUNTY = title:c_firaun
			}
			add_faith_minority_effect = {
				FAITH = faith:coptic
				SIZE = large
				COUNTY = title:c_firaun
			}

		}

		if = {
			limit = {
				game_start_date < 400.1.1
			}
			add_faith_minority_effect = {
				FAITH = faith:marcionite
				SIZE = large
				COUNTY = title:c_asyut
			}
			add_faith_minority_effect = {
				FAITH = faith:nicene
				SIZE = large
				COUNTY = title:c_asyut
			}
			add_faith_minority_effect = {
				FAITH = faith:nicene
				SIZE = large
				COUNTY = title:c_aswan
			}
			add_faith_minority_effect = {
				FAITH = faith:marcionite
				SIZE = small
				COUNTY = title:c_asyut
			}
			add_faith_minority_effect = {
				FAITH = faith:marcionite
				SIZE = small
				COUNTY = title:c_aswan
			}
			add_faith_minority_effect = {
				FAITH = faith:nicene
				SIZE = small
				COUNTY = title:c_qusayr
			}

		}

		# Sardinian pagans
		if = {
			limit = {
				game_start_date <= 600.1.1
			}
			add_faith_minority_effect = {
				FAITH = faith:sardinian_pagan
				SIZE = small
				COUNTY = title:c_cagliari
			}
			add_faith_minority_effect = {
				FAITH = faith:sardinian_pagan
				SIZE = small
				COUNTY = title:c_arborea
			}
			add_faith_minority_effect = {
				FAITH = faith:sardinian_pagan
				SIZE = small
				COUNTY = title:c_gallura
			}
			add_faith_minority_effect = {
				FAITH = faith:roman_pagan
				SIZE = small
				COUNTY = title:c_arborea
			}
			add_faith_minority_effect = {
				FAITH = faith:roman_pagan
				SIZE = small
				COUNTY = title:c_cagliari
			}
			add_faith_minority_effect = {
				FAITH = faith:sardinian_pagan
				SIZE = small
				COUNTY = title:c_logudoro
			}
		}
		if = {
			limit = {
				game_start_date <= 700.1.1
			}
			add_faith_minority_effect = {
				FAITH = faith:sardinian_pagan
				SIZE = small
				COUNTY = title:c_tortoli
			}
		}

		if = {
			limit = {
				game_start_date > 476.1.1
			}
			# Mauri settled in Sardinia by the Vandals	
			add_culture_minority_effect = {
				CULTURE = culture:maurian
				SIZE = large
				COUNTY = title:c_cagliari
			}
			add_culture_minority_effect = {
				CULTURE = culture:maurian
				SIZE = large
				COUNTY = title:c_tortoli
			}
			add_culture_minority_effect = {
				CULTURE = culture:maurian
				SIZE = small
				COUNTY = title:c_gallura
			}
			add_culture_minority_effect = {
				CULTURE = culture:maurian
				SIZE = small
				COUNTY = title:c_arborea
			}
			add_culture_minority_effect = {
				CULTURE = culture:maurian
				SIZE = small
				COUNTY = title:c_logudoro
			}
		}

		# Southern Mesopotamia
		add_faith_minority_effect = {
			FAITH = faith:malabarism
			SIZE = large
			COUNTY = title:c_badaraya
		}
		add_faith_minority_effect = {
			FAITH = faith:bardaisanism
			SIZE = small
			COUNTY = title:c_badaraya
		}
		add_faith_minority_effect = {
			FAITH = faith:south_mesopotamian_pagan
			SIZE = small
			COUNTY = title:c_ahvaz
		}
		add_faith_minority_effect = {
			FAITH = faith:south_mesopotamian_pagan
			SIZE = large
			COUNTY = title:c_ctesiphon
		}
		add_faith_minority_effect = {
			FAITH = faith:south_mesopotamian_pagan
			SIZE = large
			COUNTY = title:c_batiha
		}
		add_faith_minority_effect = {
			FAITH = faith:south_mesopotamian_pagan
			SIZE = large
			COUNTY = title:c_kufa
		}
		add_faith_minority_effect = {
			FAITH = faith:south_mesopotamian_pagan
			SIZE = small
			COUNTY = title:c_anbar
		}
		add_faith_minority_effect = {
			FAITH = faith:south_mesopotamian_pagan
			SIZE = small
			COUNTY = title:c_samarra
		}
		add_faith_minority_effect = {
			FAITH = faith:bardaisanism
			SIZE = large
			COUNTY = title:c_rusafa
		}
		if = {
			limit = {
				game_start_date < 451.1.1
			}
			add_faith_minority_effect = {
				FAITH = faith:nicene
				SIZE = large
				COUNTY = title:c_iskaf
			}
			add_faith_minority_effect = {
				FAITH = faith:nicene
				SIZE = large
				COUNTY = title:c_badaraya
			}
			add_faith_minority_effect = {
				FAITH = faith:nicene
				SIZE = large
				COUNTY = title:c_tib
			}
			add_faith_minority_effect = {
				FAITH = faith:nicene
				SIZE = large
				COUNTY = title:c_rusafa
			}
			add_faith_minority_effect = {
				FAITH = faith:elkesaite
				SIZE = large
				COUNTY = title:c_baghdad
			}
		}
		if = {
			limit = {
				game_start_date >= 451.1.1
				game_start_date <= 532.1.1
			}			
			add_faith_minority_effect = {
				FAITH = faith:south_mesopotamian_pagan
				SIZE = large
				COUNTY = title:c_iskaf
			}
			add_faith_minority_effect = {
				FAITH = faith:south_mesopotamian_pagan
				SIZE = large
				COUNTY = title:c_baghdad
			}
			add_faith_minority_effect = {
				FAITH = faith:nestorian
				SIZE = large
				COUNTY = title:c_iskaf
			}
			add_faith_minority_effect = {
				FAITH = faith:nestorian
				SIZE = small
				COUNTY = title:c_badaraya
			}
			add_faith_minority_effect = {
				FAITH = faith:nestorian
				SIZE = small
				COUNTY = title:c_tib
			}
			add_faith_minority_effect = {
				FAITH = faith:nestorian
				SIZE = large
				COUNTY = title:c_rusafa
			}
		}
		if = {
			limit = {
				game_start_date >= 532.1.1
				#game_start_date <= 600.1.1
			}			
			add_faith_minority_effect = {
				FAITH = faith:south_mesopotamian_pagan
				SIZE = small
				COUNTY = title:c_iskaf
			}
			add_faith_minority_effect = {
				FAITH = faith:south_mesopotamian_pagan
				SIZE = small
				COUNTY = title:c_baghdad
			}
			add_faith_minority_effect = {
				FAITH = faith:nestorian
				SIZE = large
				COUNTY = title:c_iskaf
			}
			add_faith_minority_effect = {
				FAITH = faith:nestorian
				SIZE = large
				COUNTY = title:c_badaraya
			}
			add_faith_minority_effect = {
				FAITH = faith:nestorian
				SIZE = large
				COUNTY = title:c_tib
			}
			add_faith_minority_effect = {
				FAITH = faith:nestorian
				SIZE = large
				COUNTY = title:c_rusafa
			}
		}



		if = {
			limit = {
				game_start_date <= 600.1.1
				#game_start_date >= 532.1.1
			}
			add_faith_minority_effect = {
				FAITH = faith:mandeaism
				SIZE = large
				COUNTY = title:c_karbala
			}
			add_faith_minority_effect = {
				FAITH = faith:bardaisanism
				SIZE = small
				COUNTY = title:c_baghdad
			}
			add_faith_minority_effect = {
				FAITH = faith:bardaisanism
				SIZE = small
				COUNTY = title:c_badaraya
			}
			add_faith_minority_effect = {
				FAITH = faith:bardaisanism
				SIZE = small
				COUNTY = title:c_wasit
			}
			add_faith_minority_effect = {
				FAITH = faith:bardaisanism
				SIZE = small
				COUNTY = title:c_tib
			}
		}

		# Gayomarthian sect in major Sassanid centers

		# Can't add to Ctesiphon or else the UI gets weird
		# add_faith_minority_effect = {
		# 	FAITH = faith:gayomarthianism
		# 	SIZE = small
		# 	COUNTY = title:c_ctesiphon
		# }
		add_faith_minority_effect = {
			FAITH = faith:gayomarthianism
			SIZE = small
			COUNTY = title:c_shiraz
		}
		add_faith_minority_effect = {
			FAITH = faith:gayomarthianism
			SIZE = small
			COUNTY = title:c_isfahan
		}
		add_faith_minority_effect = {
			FAITH = faith:gayomarthianism
			SIZE = small
			COUNTY = title:c_rayy
		}
		add_faith_minority_effect = {
			FAITH = faith:gayomarthianism
			SIZE = small
			COUNTY = title:c_herat
		}

		# Zoroastrian presence in Christian Iranian lands in the south
		add_faith_minority_effect = {
			FAITH = faith:mazdayasna
			SIZE = large
			COUNTY = title:c_shiraz
		}
		add_faith_minority_effect = {
			FAITH = faith:mazdayasna
			SIZE = large
			COUNTY = title:c_mandestan
		}
		add_faith_minority_effect = {
			FAITH = faith:mazdayasna
			SIZE = large
			COUNTY = title:c_irahistan
		}
		add_faith_minority_effect = {
			FAITH = faith:mazdayasna
			SIZE = large
			COUNTY = title:c_sif-i-umara
		}

		# Latins/Greeks in Sicily
		add_culture_minority_effect = {
			CULTURE = culture:greek
			SIZE = large
			COUNTY = title:c_trapani
		}
		add_culture_minority_effect = {
			CULTURE = culture:greek
			SIZE = large
			COUNTY = title:c_palermo
		}
		add_culture_minority_effect = {
			CULTURE = culture:roman
			SIZE = small
			COUNTY = title:c_agrigento
		}
		add_culture_minority_effect = {
			CULTURE = culture:roman
			SIZE = small
			COUNTY = title:c_messina
		}
		add_culture_minority_effect = {
			CULTURE = culture:roman
			SIZE = small
			COUNTY = title:c_siracusa
		}
		add_culture_minority_effect = {
			CULTURE = culture:roman
			SIZE = small
			COUNTY = title:c_reggio_calabria
		}
		add_culture_minority_effect = {
			CULTURE = culture:roman
			SIZE = small
			COUNTY = title:c_bari
		}

		if = {
			limit = {
				game_start_date <= 600.1.1
				game_start_date >= 476.1.1
			}
			add_culture_minority_effect = {
				CULTURE = culture:herulian
				SIZE = small
				COUNTY = title:c_pavia			
			}
			add_culture_minority_effect = {
				CULTURE = culture:rugian
				SIZE = small
				COUNTY = title:c_pavia			
			}
			add_culture_minority_effect = {
				CULTURE = culture:scirian
				SIZE = small
				COUNTY = title:c_pavia			
			}
			add_culture_minority_effect = {
				CULTURE = culture:ostrogothic
				SIZE = large
				COUNTY = title:c_pavia			
			}
			add_faith_minority_effect = {
				FAITH = faith:arianism
				SIZE = large
				COUNTY = title:c_pavia
			}
		# 	add_culture_minority_effect = {
		# 		CULTURE = culture:rugian
		# 		SIZE = large
		# 		COUNTY = title:c_cremona			
		# 	}
		# 	add_culture_minority_effect = {
		# 		CULTURE = culture:ostrogothic
		# 		SIZE = large
		# 		COUNTY = title:c_cremona			
		# 	}
		# 	add_faith_minority_effect = {
		# 		FAITH = faith:arianism
		# 		SIZE = large
		# 		COUNTY = title:c_cremona
		# 	}
		# 	add_culture_minority_effect = {
		# 		CULTURE = culture:ostrogothic
		# 		SIZE = large
		# 		COUNTY = title:c_aquileia			
		# 	}
		# 	add_faith_minority_effect = {
		# 		FAITH = faith:arianism
		# 		SIZE = large
		# 		COUNTY = title:c_aquileia
		# }
		# 	add_culture_minority_effect = {
		# 		CULTURE = culture:ostrogothic
		# 		SIZE = large
		# 		COUNTY = title:c_friuli			
		# 	}
		# 	add_faith_minority_effect = {
		# 		FAITH = faith:arianism
		# 		SIZE = large
		# 		COUNTY = title:c_friuli
		# 	}
		# 	add_culture_minority_effect = {
		# 		CULTURE = culture:ostrogothic
		# 		SIZE = large
		# 		COUNTY = title:c_gorz			
		# 	}
		# 	add_faith_minority_effect = {
		# 		FAITH = faith:arianism
		# 		SIZE = large
		# 		COUNTY = title:c_gorz
		# 	}
		# 	add_culture_minority_effect = {
		# 		CULTURE = culture:ostrogothic
		# 		SIZE = large
		# 		COUNTY = title:c_verona			
		# 	}
		# 	add_faith_minority_effect = {
		# 		FAITH = faith:arianism
		# 		SIZE = large
		# 		COUNTY = title:c_verona
		# 	}
		# 	add_culture_minority_effect = {
		# 		CULTURE = culture:ostrogothic
		# 		SIZE = large
		# 		COUNTY = title:c_treviso			
		# 	}
		# 	add_faith_minority_effect = {
		# 		FAITH = faith:arianism
		# 		SIZE = large
		# 		COUNTY = title:c_treviso
		# 	}
		# 	add_culture_minority_effect = {
		# 		CULTURE = culture:ostrogothic
		# 		SIZE = large
		# 		COUNTY = title:c_padua			
		# 	}
		# 	add_faith_minority_effect = {
		# 		FAITH = faith:arianism
		# 		SIZE = large
		# 		COUNTY = title:c_padua
		# 	}
		# 	add_culture_minority_effect = {
		# 		CULTURE = culture:ostrogothic
		# 		SIZE = large
		# 		COUNTY = title:c_polesine		
		# 		}
		# 	add_faith_minority_effect = {
		# 		FAITH = faith:arianism
		# 		SIZE = large
		# 		COUNTY = title:c_polesine
		# 	}
		# 	add_culture_minority_effect = {
		# 		CULTURE = culture:ostrogothic
		# 		SIZE = large
		# 		COUNTY = title:c_monferrato			
		# 	}
		# 	add_faith_minority_effect = {
		# 		FAITH = faith:arianism
		# 		SIZE = large
		# 		COUNTY = title:c_monferrato
		# 	}
		# 	add_culture_minority_effect = {
		# 		CULTURE = culture:ostrogothic
		# 		SIZE = large
		# 		COUNTY = title:c_turin		
		# 	}
		# 	add_faith_minority_effect = {
		# 		FAITH = faith:arianism
		# 		SIZE = large
		# 		COUNTY = title:c_turin
		# 	}
			# add_culture_minority_effect = {
			# 	CULTURE = culture:ostrogothic
			# 	SIZE = large
			# 	COUNTY = title:c_novara			
			# }
			# add_faith_minority_effect = {
			# 	FAITH = faith:arianism
			# 	SIZE = large
			# 	COUNTY = title:c_novara
			# }
			# add_culture_minority_effect = {
			# 	CULTURE = culture:ostrogothic
			# 	SIZE = large
			# 	COUNTY = title:c_cuneo			
			# }
			# add_faith_minority_effect = {
			# 	FAITH = faith:arianism
			# 	SIZE = large
			# 	COUNTY = title:c_cuneo
			# }
			# add_culture_minority_effect = {
			# 	CULTURE = culture:rugian
			# 	SIZE = large
			# 	COUNTY = title:c_lombardia			
			# }
			# add_culture_minority_effect = {
			# 	CULTURE = culture:ostrogothic
			# 	SIZE = large
			# 	COUNTY = title:c_lombardia			
			# }
			# add_faith_minority_effect = {
			# 	FAITH = faith:arianism
			# 	SIZE = large
			# 	COUNTY = title:c_lombardia
			# }
			# add_culture_minority_effect = {
			# 	CULTURE = culture:rugian
			# 	SIZE = large
			# 	COUNTY = title:c_brescia			
			# }
			# add_faith_minority_effect = {
			# 	FAITH = faith:arianism
			# 	SIZE = large
			# 	COUNTY = title:c_brescia
			# }
			# add_culture_minority_effect = {
			# 	CULTURE = culture:ostrogothic
			# 	SIZE = large
			# 	COUNTY = title:c_como			
			# }
			# add_faith_minority_effect = {
			# 	FAITH = faith:arianism
			# 	SIZE = large
			# 	COUNTY = title:c_como
			# }
			# add_culture_minority_effect = {
			# 	CULTURE = culture:rugian
			# 	SIZE = large
			# 	COUNTY = title:c_trent			
			# }
			# add_culture_minority_effect = {
			# 	CULTURE = culture:ostrogothic
			# 	SIZE = large
			# 	COUNTY = title:c_trent			
			# }
			# add_faith_minority_effect = {
			# 	FAITH = faith:arianism
			# 	SIZE = large
			# 	COUNTY = title:c_trent
			# }
			# add_culture_minority_effect = {
			# 	CULTURE = culture:ostrogothic
			# 	SIZE = large
			# 	COUNTY = title:c_parma			
			# 	}
			# add_faith_minority_effect = {
			# 	FAITH = faith:arianism
			# 	SIZE = large
			# 	COUNTY = title:c_parma
			# }
			# add_culture_minority_effect = {
			# 	CULTURE = culture:ostrogothic
			# 	SIZE = large
			# 	COUNTY = title:c_tortona			
			# 	}
			# add_faith_minority_effect = {
			# 	FAITH = faith:arianism
			# 	SIZE = large
			# 	COUNTY = title:c_tortona
			# }
			# add_culture_minority_effect = {
			# 	CULTURE = culture:ostrogothic
			# 	SIZE = large
			# 	COUNTY = title:c_genoa			
			# }
			# add_faith_minority_effect = {
			# 	FAITH = faith:arianism
			# 	SIZE = large
			# 	COUNTY = title:c_genoa
			# }
			# add_culture_minority_effect = {
			# 	CULTURE = culture:ostrogothic
			# 	SIZE = large
			# 	COUNTY = title:c_luni			
			# }
			# add_faith_minority_effect = {
			# 	FAITH = faith:arianism
			# 	SIZE = large
			# 	COUNTY = title:c_luni
			# }
			# add_culture_minority_effect = {
			# 	CULTURE = culture:ostrogothic
			# 	SIZE = large
			# 	COUNTY = title:c_modena			
			# 	}
			# add_faith_minority_effect = {
			# 	FAITH = faith:arianism
			# 	SIZE = large
			# 	COUNTY = title:c_modena
			# }
			# add_culture_minority_effect = {
			# 	CULTURE = culture:rugian
			# 	SIZE = large
			# 	COUNTY = title:c_mantua			
			# }
			# add_culture_minority_effect = {
			# 	CULTURE = culture:ostrogothic
			# 	SIZE = large
			# 	COUNTY = title:c_mantua			
			# }
			# add_faith_minority_effect = {
			# 	FAITH = faith:arianism
			# 	SIZE = large
			# 	COUNTY = title:c_mantua
			# }
			# add_culture_minority_effect = {
			# 	CULTURE = culture:ostrogothic
			# 	SIZE = large
			# 	COUNTY = title:c_pisa			
			# }
			# add_faith_minority_effect = {
			# 	FAITH = faith:arianism
			# 	SIZE = large
			# 	COUNTY = title:c_pisa
			# }
			# add_culture_minority_effect = {
			# 	CULTURE = culture:ostrogothic
			# 	SIZE = large
			# 	COUNTY = title:c_firenze		
			# }
			# add_faith_minority_effect = {
			# 	FAITH = faith:arianism
			# 	SIZE = large
			# 	COUNTY = title:c_firenze
			# }
			# add_culture_minority_effect = {
			# 	CULTURE = culture:ostrogothic
			# 	SIZE = large
			# 	COUNTY = title:c_lucca			
			# }
			# add_faith_minority_effect = {
			# 	FAITH = faith:arianism
			# 	SIZE = large
			# 	COUNTY = title:c_lucca
			# }
			# add_culture_minority_effect = {
			# 	CULTURE = culture:ostrogothic
			# 	SIZE = large
			# 	COUNTY = title:c_arezzo			
			# }
			# add_faith_minority_effect = {
			# 	FAITH = faith:arianism
			# 	SIZE = large
			# 	COUNTY = title:c_arezzo
			# }
			# add_culture_minority_effect = {
			# 	CULTURE = culture:ostrogothic
			# 	SIZE = large
			# 	COUNTY = title:c_siena		
			# }
			# add_faith_minority_effect = {
			# 	FAITH = faith:arianism
			# 	SIZE = large
			# 	COUNTY = title:c_siena
			# }
			# add_culture_minority_effect = {
			# 	CULTURE = culture:ostrogothic
			# 	SIZE = large
			# 	COUNTY = title:c_orbetello			
			# }
			# add_faith_minority_effect = {
			# 	FAITH = faith:arianism
			# 	SIZE = large
			# 	COUNTY = title:c_orbetello
			# }
			add_culture_minority_effect = {
				CULTURE = culture:herulian
				SIZE = small
				COUNTY = title:c_ravenna			
			}
			add_culture_minority_effect = {
				CULTURE = culture:rugian
				SIZE = small
				COUNTY = title:c_ravenna			
			}
			add_culture_minority_effect = {
				CULTURE = culture:scirian
				SIZE = small
				COUNTY = title:c_ravenna			
			}
			add_culture_minority_effect = {
				CULTURE = culture:ostrogothic
				SIZE = large
				COUNTY = title:c_ravenna			
			}
			add_faith_minority_effect = {
				FAITH = faith:arianism
				SIZE = large
				COUNTY = title:c_ravenna
			}
			# add_culture_minority_effect = {
			# 	CULTURE = culture:ostrogothic
			# 	SIZE = large
			# 	COUNTY = title:c_bologna			
			# }
			# add_faith_minority_effect = {
			# 	FAITH = faith:arianism
			# 	SIZE = large
			# 	COUNTY = title:c_bologna
			# }
			# add_culture_minority_effect = {
			# 	CULTURE = culture:ostrogothic
			# 	SIZE = large
			# 	COUNTY = title:c_ferrara			
			# }
			# add_faith_minority_effect = {
			# 	FAITH = faith:arianism
			# 	SIZE = large
			# 	COUNTY = title:c_ferrara
			# }
			# add_culture_minority_effect = {
			# 	CULTURE = culture:ostrogothic
			# 	SIZE = large
			# 	COUNTY = title:c_casentino			
			# }
			# add_faith_minority_effect = {
			# 	FAITH = faith:arianism
			# 	SIZE = large
			# 	COUNTY = title:c_ancona
			# }
			# add_culture_minority_effect = {
			# 	CULTURE = culture:ostrogothic
			# 	SIZE = large
			# 	COUNTY = title:c_ancona			
			# }
			# add_faith_minority_effect = {
			# 	FAITH = faith:arianism
			# 	SIZE = large
			# 	COUNTY = title:c_ancona
			# }
			# add_culture_minority_effect = {
			# 	CULTURE = culture:ostrogothic
			# 	SIZE = large
			# 	COUNTY = title:c_urbino			
			# }
			# add_faith_minority_effect = {
			# 	FAITH = faith:arianism
			# 	SIZE = large
			# 	COUNTY = title:c_urbino
			# }
			# add_culture_minority_effect = {
			# 	CULTURE = culture:ostrogothic
			# 	SIZE = large
			# 	COUNTY = title:c_spoleto			
			# }
			# add_faith_minority_effect = {
			# 	FAITH = faith:arianism
			# 	SIZE = large
			# 	COUNTY = title:c_spoleto
			# }
			# add_culture_minority_effect = {
			# 	CULTURE = culture:ostrogothic
			# 	SIZE = large
			# 	COUNTY = title:c_orvieto			
			# }
			# add_faith_minority_effect = {
			# 	FAITH = faith:arianism
			# 	SIZE = large
			# 	COUNTY = title:c_orvieto
			# }
			# add_culture_minority_effect = {
			# 	CULTURE = culture:ostrogothic
			# 	SIZE = large
			# 	COUNTY = title:c_teramo			
			# }
			# add_faith_minority_effect = {
			# 	FAITH = faith:arianism
			# 	SIZE = large
			# 	COUNTY = title:c_teramo
			# }
			# add_culture_minority_effect = {
			# 	CULTURE = culture:ostrogothic
			# 	SIZE = large
			# 	COUNTY = title:c_lanciano			
			# }
			# add_faith_minority_effect = {
			# 	FAITH = faith:arianism
			# 	SIZE = large
			# 	COUNTY = title:c_lanciano
			# }
			# add_culture_minority_effect = {
			# 	CULTURE = culture:ostrogothic
			# 	SIZE = large
			# 	COUNTY = title:c_abruzzi			
			# }
			# add_faith_minority_effect = {
			# 	FAITH = faith:arianism
			# 	SIZE = large
			# 	COUNTY = title:c_abruzzi
			# }
			add_culture_minority_effect = {
				CULTURE = culture:herulian
				SIZE = small
				COUNTY = title:c_roma			
			}
			add_culture_minority_effect = {
				CULTURE = culture:rugian
				SIZE = small
				COUNTY = title:c_roma			
			}
			add_culture_minority_effect = {
				CULTURE = culture:scirian
				SIZE = small
				COUNTY = title:c_roma			
			}
			add_culture_minority_effect = {
				CULTURE = culture:ostrogothic
				SIZE = large
				COUNTY = title:c_roma			
			}
			add_faith_minority_effect = {
				FAITH = faith:arianism
				SIZE = large
				COUNTY = title:c_roma
			}
			# add_culture_minority_effect = {
			# 	CULTURE = culture:ostrogothic
			# 	SIZE = large
			# 	COUNTY = title:c_viterbo			
			# }
			# add_faith_minority_effect = {
			# 	FAITH = faith:arianism
			# 	SIZE = large
			# 	COUNTY = title:c_viterbo
			# }
			# add_culture_minority_effect = {
			# 	CULTURE = culture:ostrogothic
			# 	SIZE = large
			# 	COUNTY = title:c_tivoli			
			# }
			# add_faith_minority_effect = {
			# 	FAITH = faith:arianism
			# 	SIZE = large
			# 	COUNTY = title:c_tivoli
			# }
			# add_culture_minority_effect = {
			# 	CULTURE = culture:ostrogothic
			# 	SIZE = large
			# 	COUNTY = title:c_napoli			
			# }
			# add_faith_minority_effect = {
			# 	FAITH = faith:arianism
			# 	SIZE = large
			# 	COUNTY = title:c_napoli
			# }
			# add_culture_minority_effect = {
			# 	CULTURE = culture:ostrogothic
			# 	SIZE = large
			# 	COUNTY = title:c_capua			
			# }
			# add_faith_minority_effect = {
			# 	FAITH = faith:arianism
			# 	SIZE = large
			# 	COUNTY = title:c_capua
			# }
			# add_culture_minority_effect = {
			# 	CULTURE = culture:ostrogothic
			# 	SIZE = large
			# 	COUNTY = title:c_salerno			
			# }
			# add_faith_minority_effect = {
			# 	FAITH = faith:arianism
			# 	SIZE = large
			# 	COUNTY = title:c_salerno
			# }
			# add_culture_minority_effect = {
			# 	CULTURE = culture:ostrogothic
			# 	SIZE = large
			# 	COUNTY = title:c_benevento			
			# }
			# add_faith_minority_effect = {
			# 	FAITH = faith:arianism
			# 	SIZE = large
			# 	COUNTY = title:c_benevento
			# }
			# add_culture_minority_effect = {
			# 	CULTURE = culture:ostrogothic
			# 	SIZE = large
			# 	COUNTY = title:c_foggia			
			# }
			# add_faith_minority_effect = {
			# 	FAITH = faith:arianism
			# 	SIZE = large
			# 	COUNTY = title:c_foggia
			# }
		}

		# Small Buddhist presence attested in Red Sea/Southeast Egypt, per recommendations by Luthien and Soraya
		if = {
			limit = {
				game_start_date < 500.1.1
			}
			add_culture_minority_effect = {
				CULTURE = culture:saurashtri
				SIZE = small
				COUNTY = title:c_qusayr
			}
			add_faith_minority_effect = {
				FAITH = faith:mahasanghika
				SIZE = small
				COUNTY = title:c_qusayr
			}
		}


		# Socotra, most diverse place on the planet :cool glasses emoji:
		if = {
			limit = {
				game_start_date < 500.1.1
			}
			add_culture_minority_effect = {
				CULTURE = culture:greek
				SIZE = small
				COUNTY = title:c_socotra
			}
			add_culture_minority_effect = {
				CULTURE = culture:nabatean
				SIZE = small
				COUNTY = title:c_socotra
			}
		}
		add_culture_minority_effect = {
			CULTURE = culture:saurashtri
			SIZE = small
			COUNTY = title:c_socotra
		}
		add_faith_minority_effect = {
			FAITH = faith:shaivism
			SIZE = small
			COUNTY = title:c_socotra
		}
		add_culture_minority_effect = {
			CULTURE = culture:himyarite
			SIZE = small
			COUNTY = title:c_socotra
		}
		add_culture_minority_effect = {
			CULTURE = culture:persian
			SIZE = small
			COUNTY = title:c_socotra
		}
		add_faith_minority_effect = {
			FAITH = faith:mazdayasna
			SIZE = small
			COUNTY = title:c_socotra
		}
		add_culture_minority_effect = {
			CULTURE = culture:ethiopian
			SIZE = small
			COUNTY = title:c_socotra
		}

		# Manichaeans in Dakhla
		add_faith_minority_effect = {
			FAITH = faith:manichean
			SIZE = small
			COUNTY = title:c_dakhla
		}

		# Remnants of Emesa Pagan/worship of Elagabal in Emesa
		if = {
			limit = {
				game_start_date > 476.1.1
				game_start_date < 500.1.1
			}
			add_faith_minority_effect = {
				FAITH = faith:emesa_pagan
				SIZE = small
				COUNTY = title:c_homs
			}
		}
	}
}
	}

	{
		set_minorities_game_start
	}
}

"common/on_action/government_change_on_actions.txt" = {
	{
						NOT = {
							THIS = character:taifal_01
						}
	}
	{
						NOT = {
							THIS = character:alan_13
						}
	}
	{
						NOT = {
							THIS = character:persian_armenia_01
						}
						NOT = {
							THIS = character:159564
						}
						NOT = {
							THIS = character:159858
						}
						NOT = {
							THIS = character:159853
						}
						NOT = {
							THIS = character:159995
						}
						NOT = {
							THIS = character:159892
						}
	}
	{
		title:e_mongolia = {
			every_in_de_jure_hierarchy = {
				limit = {
					is_title_created = yes
				}
				holder = {
					if = {
						limit = {
							has_government = tribal_government
						}
						change_government = nomadic_government
					}
				}
			}
		}
		title:e_siberia = {
			every_in_de_jure_hierarchy = {
				limit = {
					is_title_created = yes
				}
				holder = {
					if = {
						limit = {
							has_government = tribal_government
						}
						change_government = nomadic_government
					}
				}
			}
		}
		title:e_volga-ural = {
			every_in_de_jure_hierarchy = {
				limit = {
					is_title_created = yes
				}
				holder = {
					if = {
						limit = {
							has_government = tribal_government
						}
						change_government = nomadic_government
					}
				}
			}
		}
		title:e_tartaria = {
			every_in_de_jure_hierarchy = {
				limit = {
					is_title_created = yes
				}
				holder = {
					if = {
						limit = {
							has_government = tribal_government
						}
						change_government = nomadic_government
					}
				}
			}
		}
		title:k_oghuz_il = {
			every_in_de_jure_hierarchy = {
				limit = {
					is_title_created = yes
				}
				holder = {
					if = {
						limit = {
							has_government = tribal_government
						}
						change_government = nomadic_government
					}
				}
			}
		}
		title:e_rajastan = {
			every_in_de_jure_hierarchy = {
				limit = {
					is_title_created = yes
				}
				holder = {
					if = {
						limit = {
							culture ?= {
								has_cultural_tradition = tradition_gana_sangha
							}
							government_has_flag = government_is_tribal
						}
						change_government = gana_sangha_government
						primary_title = {
							add_title_law = gana_sangha_elective_succession_law
						}
					}
				}
			}
		}
	}

	# Anachronistic
	{
		if = {
			limit = {
				AND = {
				title:k_croatia = {
					is_title_created = yes
				}
					title:k_croatia.holder ?= {
						game_start_date = 476.9.4
					}
				}
			}
			title:k_croatia.holder ?= {
				if = {
					limit = {
						highest_held_title_tier >= tier_kingdom
						has_dlc_feature = roads_to_power
					}
					change_government = autocratic_government_ep3
				}
				else_if = {
					change_government = autocratic_government
				}
				every_vassal_or_below = {
					limit = {
						OR = {
						has_government = feudal_government
						has_government = republic_government
						}
					}
					if = {
						limit = {
							highest_held_title_tier >= tier_barony
							has_dlc_feature = roads_to_power
						}
						change_government = autocratic_government_ep3
					}
					else_if = {
						limit = {
							highest_held_title_tier >= tier_barony
						}
						change_government = autocratic_government
					}
				}
			}
		}
	}

	# Anachronistic
	{
		if = {
			limit = {
				AND = {
				title:k_france = {
					is_title_created = yes
				}
					title:k_croatia.holder ?= {
						game_start_date = 476.9.4
					}
				}
			}
			title:k_france.holder ?= {
				if = {
					limit = {
						highest_held_title_tier >= tier_kingdom
						has_dlc_feature = roads_to_power
					}
					change_government = autocratic_government_ep3
				}
				else_if = {
					change_government = autocratic_government
				}
				every_vassal_or_below = {
					limit = {
						OR = {
						has_government = feudal_government
						has_government = republic_government
						}
						
					}
					if = {
						limit = {
							highest_held_title_tier >= tier_barony
							has_dlc_feature = roads_to_power
						}
						change_government = autocratic_government_ep3
					}
					else_if = {
						limit = {
							highest_held_title_tier >= tier_barony
						}
						change_government = autocratic_government
					}
				}
			}
		}
	}

	# Anachronistic
	{
		if = {
			limit = {
				current_date = 476.9.4
			}
			title:k_visigoths.holder ?= {
				change_government = roman_government
				every_held_title = {
					limit = {
						AND = {
							tier = tier_county
							NOT = {
								title_province = {
									has_holding_type = estate_holding
								}
							}
						}
					}
					title_province = {
						set_holding_type = estate_holding
					}
				}
				every_vassal_or_below = {
					limit = {
						has_government = feudal_government
					}
					change_government = roman_government
					every_held_title = {
						limit = {
							AND = {
								tier = tier_county
								NOT = {
									title_province = {
										has_holding_type = estate_holding
									}
								}
							}
						}
						title_province = {
							set_holding_type = estate_holding
						}
					}
				}
			}
			title:e_spain = {
				every_in_de_jure_hierarchy = {
					limit = {
						AND = {
							tier = tier_county
							holder = {
								OR = {
								government_has_flag = government_is_autocratic
								government_has_flag = government_is_autocratic_ep3
								}
							}
							holder = {
								highest_held_title_tier = tier_county
							}
						}
					}
					holder = {
						change_government = roman_government
						every_held_title = {
							limit = {
								AND = {
									tier = tier_county
									NOT = {
										title_province = {
											has_holding_type = estate_holding
										}
									}
								}
							}
							title_province = {
								set_holding_type = estate_holding
							}
						}
					}
				}
			}
			title:k_italy.holder ?= {
				change_government = roman_government
				every_held_title = {
					limit = {
						AND = {
							tier = tier_county
							NOT = {
								title_province = {
									has_holding_type = estate_holding
								}
							}
						}
					}
					title_province = {
						set_holding_type = estate_holding
					}
				}
				every_vassal_or_below = {
					limit = {
						has_government = feudal_government
					}
					change_government = roman_government
					every_held_title = {
						limit = {
							AND = {
								tier = tier_county
								NOT = {
									title_province = {
										has_holding_type = estate_holding
									}
								}
							}
						}
						title_province = {
							set_holding_type = estate_holding
						}
					}
				}
			}
		}
		if = {
			limit = {
				current_date = 532.2.1
			}
			title:k_visigoths.holder ?= {
				change_government = roman_government
				every_held_title = {
					limit = {
						AND = {
							tier = tier_county
							NOT = {
								title_province = {
									has_holding_type = estate_holding
								}
							}
						}
					}
					title_province = {
						set_holding_type = estate_holding
					}
				}
				every_vassal_or_below = {
					limit = {
						OR = {
							has_government = feudal_government
							has_government = autocratic_government
							has_government = autocratic_government_ep3
						}
					}
					change_government = roman_government
					every_held_title = {
						limit = {
							AND = {
								tier = tier_county
								NOT = {
									title_province = {
										has_holding_type = estate_holding
									}
								}
							}
						}
						title_province = {
							set_holding_type = estate_holding
						}
					}
				}
			}
			title:e_spain = {
				every_in_de_jure_hierarchy = {
					limit = {
						AND = {
							tier = tier_county
							holder = {
								OR = {
								government_has_flag = government_is_autocratic
								government_has_flag = government_is_autocratic_ep3
								}
							}
							holder = {
								highest_held_title_tier = tier_county
							}
						}
					}
					holder = {
						change_government = roman_government
						every_held_title = {
							limit = {
								AND = {
									tier = tier_county
									NOT = {
										title_province = {
											has_holding_type = estate_holding
										}
									}
								}
							}
							title_province = {
								set_holding_type = estate_holding
							}
						}
					}
				}
			}
			title:k_ostrogoths.holder ?= {
				change_government = roman_government
				every_held_title = {
					limit = {
						AND = {
							tier = tier_county
							NOT = {
								title_province = {
									has_holding_type = estate_holding
								}
							}
						}
					}
					title_province = {
						set_holding_type = estate_holding
					}
				}
				every_vassal_or_below = {
					limit = {
						has_government = feudal_government
					}
					change_government = roman_government
					every_held_title = {
						limit = {
							AND = {
								tier = tier_county
								NOT = {
									title_province = {
										has_holding_type = estate_holding
									}
								}
							}
						}
						title_province = {
							set_holding_type = estate_holding
						}
					}
				}
			}
		}
	}
}

"common/on_action/tribs_on_action.txt" = {
	{
		if = {
			limit = {
				AND = {
					game_start_date > 361.1.1
					game_start_date < 362.1.1
				}
			}
			###GUPTAS
			# Kushans
			if = {
				limit = {
					AND = {
						exists = character:kushan_014
						exists = character:900963
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:kushan_014
					SUZERAIN = character:900963 
				}
			}
			# Madrakas
			if = {
				limit = {
					AND = {
						exists = character:matraka_01
						exists = character:900963
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:matraka_01
					SUZERAIN = character:900963 
				}
			}
			# Yaudheyas
			if = {
				limit = {
					AND = {
						exists = character:yaudheya_01
						exists = character:900963
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:yaudheya_01
					SUZERAIN = character:900963 
				}
			}
			# Malavas
			#if = {
			#	limit = {
			#		AND = {
			#			exists = character:malava_01
			#			exists = character:900963
			#		}
			#	}
			#	make_tributary = {
			#		TYPE = tributary_permanent
			#		TRIBUTARY = character:malava_01
			#		SUZERAIN = character:900963 
			#	}
			#}
			# Arjunayanas
			#if = {
			#	limit = {
			#		AND = {
			#			exists = character:guptasad_32
			#			exists = character:900963
			#		}
			#	}
			#	make_tributary = {
			#		TYPE = tributary_permanent
			#		TRIBUTARY = character:guptasad_32
			#		SUZERAIN = character:900963 
			#	}
			#}
			# Karttripuras
			if = {
				limit = {
					AND = {
						exists = character:karttripura_01
						exists = character:900963
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:karttripura_01
					SUZERAIN = character:900963 
				}
			}
			# Nepal/Licchavis
			if = {
				limit = {
					AND = {
						exists = character:licchavi_02
						exists = character:900963
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:licchavi_02
					SUZERAIN = character:900963
				}
			}
			# Kamarupa
			if = {
				limit = {
					AND = {
						exists = character:190054
						exists = character:900963
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:190054
					SUZERAIN = character:900963 
				}
			}
			# Davakas
			if = {
				limit = {
					AND = {
						exists = character:davaka_01
						exists = character:900963
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:davaka_01
					SUZERAIN = character:900963 
				}
			}
			# Samatatas
			#if = {
			#	limit = {
			#		AND = {
			#			exists = character:samatata_01
			#			exists = character:900963
			#		}
			#	}
			#	make_tributary = {
			#		TYPE = tributary_permanent
			#		TRIBUTARY = character:samatata_01
			#		SUZERAIN = character:900963 
			#	}
			#}
			# Kosalas
			if = {
				limit = {
					AND = {
						exists = character:orissa_01
						exists = character:900963
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:orissa_01
					SUZERAIN = character:900963 
				}
			}
			#Mahakantara
			if = {
				limit = {
					AND = {
						exists = character:orissa_02
						exists = character:900963
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:orissa_02
					SUZERAIN = character:900963 
				}
			}
			# Salankayanas
			if = {
				limit = {
					AND = {
						exists = character:salankayana_01
						exists = character:900963
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:salankayana_01
					SUZERAIN = character:900963 
				}
			}
			#Avamuktas
			if = {
				limit = {
					AND = {
						exists = character:orissa_06
						exists = character:900963
					}

				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:orissa_06
					SUZERAIN = character:900963 
				}
			}
			#Dhananjayids
			if = {
				limit = {
					AND = {
						exists = character:orissa_08
						exists = character:900963
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:orissa_08
					SUZERAIN = character:900963 
				}
			}
			
			# Abyssinia Tributaries in Kush/Nubia
			if = {
				limit = {
					AND = {
						exists = character:meroitic_misc_01
						exists = character:aksum_12
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:meroitic_misc_01
					SUZERAIN = character:aksum_12 
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:dinka_01
						exists = character:aksum_12
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:dinka_01
					SUZERAIN = character:aksum_12 
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:dinka_05
						exists = character:aksum_12
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:dinka_05
					SUZERAIN = character:aksum_12 
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:dinka_09
						exists = character:aksum_12
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:dinka_09
					SUZERAIN = character:aksum_12 
				}
			}
			character:990016 = {
				add_prestige = 1500
				add_gold = 250
				spawn_army = {
					name = "Hunnic Migrators"
					levies = 1000
					men_at_arms = {
						type = horse_archers
						stacks = 5
					}
					men_at_arms = {
						type = light_footmen
						stacks = 5
					}
					men_at_arms = {
						type = siege_towers
						stacks = 5
					}
					location = title:b_itil.title_province
					inheritable = no
				}
				spawn_army = {
					name = "Hunnic Migrators"
					levies = 1000
					men_at_arms = {
						type = light_horsemen
						stacks = 5
					}
					men_at_arms = {
						type = horse_archers
						stacks = 5
					}
					men_at_arms = {
						type = siege_towers
						stacks = 5
					}
					location = title:b_engels.title_province
					inheritable = no
				}
			}
		}
		if = {
			limit = {
				AND = {
					game_start_date > 394.1.1
					game_start_date < 396.1.1
				}
			}
			###EASTERN ROMAN
			if = {
				limit = {
					AND = {
						exists = character:judham_11
						exists = character:70519
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:judham_11
					SUZERAIN = character:70519 
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:amilah_01
						exists = character:70519
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:amilah_01
					SUZERAIN = character:70519 
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:lazika_03
						exists = character:70519
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:lazika_03
					SUZERAIN = character:70519 
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:tanukhid_011
						exists = character:70519
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:tanukhid_011
					SUZERAIN = character:70519 
				}
			}

			###GUPTAS
			# Madrakas
			#if = {
			#	limit = {
			#		AND = {
			#			exists = character:matraka_01
			#			exists = character:2020123
			#		}
			#	}
			#	make_tributary = {
			#		TYPE = tributary_permanent
			#		TRIBUTARY = character:matraka_01
			#		SUZERAIN = character:2020123 
			#	}
			#}
			# Yaudheyas
			if = {
				limit = {
					AND = {
						exists = character:yaudheya_01
						exists = character:2020123
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:yaudheya_01
					SUZERAIN = character:2020123 
				}
			}
			# Karttripuras
			if = {
				limit = {
					AND = {
						exists = character:karttripura_02
						exists = character:2020123
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:karttripura_02
					SUZERAIN = character:2020123 
				}
			}
			# Nepal/Licchavis
			if = {
				limit = {
					AND = {
						exists = character:licchavi_02
						exists = character:2020123
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:licchavi_02
					SUZERAIN = character:2020123 
				}
			}
			# Kamarupa
			if = {
				limit = {
					AND = {
						exists = character:190055
						exists = character:2020123
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:190055
					SUZERAIN = character:2020123 
				}
			}
			# Davakas
			if = {
				limit = {
					AND = {
						exists = character:davaka_01
						exists = character:2020123
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:davaka_01
					SUZERAIN = character:2020123 
				}
			}
			# Samatatas
			#if = {
			#	limit = {
			#		AND = {
			#			exists = character:samatata_01
			#			exists = character:2020123
			#		}
			#	}
			#	make_tributary = {
			#		TYPE = tributary_permanent
			#		TRIBUTARY = character:samatata_01
			#		SUZERAIN = character:2020123 
			#	}
			#}
		}
		if = {
			limit = {
				game_start_date = 476.9.4
			}
			if = {
				limit = {
					AND = {
						exists = character:996002
						exists = character:70515
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:996002
					SUZERAIN = character:70515
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:tanukhid_03
						exists = character:70515
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:tanukhid_03
					SUZERAIN = character:70515 
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:lazika_05
						exists = character:70515
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:lazika_05
					SUZERAIN = character:70515 
				}
			}
			character:strabo_02 ?= {
				spawn_army = {
					name = "Zeno's Auxiliaries"
					levies = 1000
					men_at_arms = {
						type = palatinae
						#type = armored_footmen
						stacks = 2
					}
					men_at_arms = {
						type = comitatenses
						#type = armored_footmen
						stacks = 2
					}
					location = title:c_turnovo.title_province
					inheritable = no
				}
			}
			character:992016 ?= {
				spawn_army = {
					name = "Ostrogoth Invaders"
					levies = 3000
					men_at_arms = {
						type = bowmen
						stacks = 5
					}
					men_at_arms = {
						type = light_horsemen
						stacks = 5
					}
					men_at_arms = {
						type = light_footmen
						stacks = 10
					}
					men_at_arms = {
						type = siege_towers
						stacks = 3
					}
					location = capital_province
					inheritable = no
				}
			}
			character:yujiulu_10 ?= {
				dynasty = {
					add_dynasty_modifier = rouran_khagans
				}
			}
		}
		
		###WESTERN ROMAN AND AFRICAN
		if = {
			limit = {
				AND = {
					game_start_date > 394.1.1
					game_start_date < 396.1.1
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:159009
						exists = character:145227
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:159009
					SUZERAIN = character:145227
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:mauri_18
						exists = character:145227
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:mauri_18
					SUZERAIN = character:145227
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:afroroman_01
						exists = character:145227
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:afroroman_01
					SUZERAIN = character:145227
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:mauri_28
						exists = character:mauri_18
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:mauri_28
					SUZERAIN = character:mauri_18
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:mauri_23
						exists = character:145227
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:mauri_23
					SUZERAIN = character:145227
				}
			}
		}

		if = {
			limit = {
				AND = {
					game_start_date > 360.1.1
					game_start_date < 362.1.1
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:afroroman_01
						exists = character:145237
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:afroroman_01
					SUZERAIN = character:145237
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:mauri_17
						exists = character:145237
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:mauri_17
					SUZERAIN = character:145237
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:arsacid_46
						exists = character:145237
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:arsacid_46
					SUZERAIN = character:145237
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:mauri_27
						exists = character:mauri_17
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:mauri_27
					SUZERAIN = character:mauri_17
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:mauri_22
						exists = character:145237
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:mauri_22
					SUZERAIN = character:145237
				}
			}
			###PERSIANS
			if = {
				limit = {
					AND = {
						exists = character:159582
						exists = character:180617
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:159582
					SUZERAIN = character:180617 
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:159758
						exists = character:180617
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:159758
					SUZERAIN = character:180617 
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:lakhmid_03
						exists = character:180617
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:lakhmid_03
					SUZERAIN = character:180617 
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:khinda_05
						exists = character:himyar_11
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:khinda_05
					SUZERAIN = character:himyar_11
				}
			}
			#character:990016 ?= {
			#	add_gold = 250
			#	spawn_army = {
			#		name = "Hunnic Invaders"
			#		levies = 2000
			#		men_at_arms = {
			#			type = light_horsemen
			#			stacks = 15
			#		}
			#		men_at_arms = {
			#			type = horse_archers
			#			stacks = 15
			#		}
			#		men_at_arms = {
			#			type = siege_towers
			#			stacks = 5
			#		}
			#		location = capital_province
			#		inheritable = no
			#	}
			#	spawn_army = {
			#		name = "Hunnic Invaders"
			#		levies = 1000
			#		men_at_arms = {
			#			type = light_horsemen
			#			stacks = 10
			#		}
			#		men_at_arms = {
			#			type = horse_archers
			#			stacks = 10
			#		}
			#		men_at_arms = {
			#			type = siege_towers
			#			stacks = 5
			#		}
			#		location = capital_province
			#		inheritable = yes
			#	}
			#}
		}
		
		###PERSIAN
		if = {
			limit = {
				AND = {
					game_start_date > 394.1.1
					game_start_date < 396.1.1
				}
			}
			make_tributary = {
				TYPE = tributary_permanent
				TRIBUTARY = character:lakhmid_06
				SUZERAIN = character:180618 
			}
			make_tributary = {
				TYPE = tributary_permanent
				TRIBUTARY = character:159583
				SUZERAIN = character:180618 
			}
			make_tributary = {
				TYPE = tributary_permanent
				TRIBUTARY = character:159761
				SUZERAIN = character:180618 
			}
			make_tributary = {
				TYPE = tributary_permanent
				TRIBUTARY = character:arsacid_58
				SUZERAIN = character:180618 
			}
		}
		if = {
			limit = {
				AND = {
					game_start_date > 475.1.1
					game_start_date < 477.1.1
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:lakhmid_08
						exists = character:180624
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:lakhmid_08
					SUZERAIN = character:180624 
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:159766
						exists = character:180624
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:159766
					SUZERAIN = character:180624 
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:159859
						exists = character:180624
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:159859
					SUZERAIN = character:180624 
				}
			}
		}
		
		###GUPTA
		if = {
			limit = {
				AND = {
					game_start_date > 394.1.1
					game_start_date < 396.1.1
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:salankayana_02
						exists = character:2020123
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:salankayana_02
					SUZERAIN = character:2020123
				}
			}
		}

		###532 BM Caucasus
		if = {
			limit = {
				AND = {
					game_start_date > 530.1.1
					game_start_date < 540.1.1
				}
			}
			if = {
				limit = {
					AND = {
						exists = title:d_abkhazia.holder
						exists = title:e_byzantium.holder
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = title:d_abkhazia.holder
					SUZERAIN = title:e_byzantium.holder
				}
			}
			if = {
				limit = {
					AND = {
						exists = title:d_georgia.holder
						exists = title:e_persia.holder
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = title:d_georgia.holder
					SUZERAIN = title:e_persia.holder
				}
			}
			if = {
				limit = {
					AND = {
						exists = title:d_albania.holder
						exists = title:e_persia.holder
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = title:d_albania.holder
					SUZERAIN = title:e_persia.holder
				}
			}
			if = {
				limit = {
					AND = {
						exists = title:k_lakhmid.holder
						exists = title:e_persia.holder
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = title:k_lakhmid.holder
					SUZERAIN = title:e_persia.holder
				}
			}
			if = {
				limit = {
					AND = {
						exists = title:k_ghassanid.holder
						exists = title:e_byzantium.holder
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = title:k_ghassanid.holder
					SUZERAIN = title:e_byzantium.holder
				}
			}
		}

		#I'm too lazy to make another file :p
		if = {
			limit = {
				game_start_date = 476.9.4
			}
			title:k_italy.holder ?= {
				add_gold = 200
				spawn_army = {
					name = "Scirian Invaders"
					levies = 1500
					men_at_arms = {
						type = bowmen
						stacks = 3
					}
					men_at_arms = {
						type = light_horsemen
						stacks = 2
					}
					men_at_arms = {
						type = light_footmen
						stacks = 4
					}
					location = capital_province
					inheritable = no
				}
				spawn_army = {
					name = "Scirian Invaders"
					levies = 1500
					men_at_arms = {
						type = bowmen
						stacks = 3
					}
					men_at_arms = {
						type = light_horsemen
						stacks = 2
					}
					men_at_arms = {
						type = light_footmen
						stacks = 4
					}
					location = capital_province
					inheritable = yes
				}
			}
			title:k_visigoths.holder ?= {
				add_gold = 300
				spawn_army = {
					name = gothic_event_troops
					levies = 2000
					men_at_arms = {
						type = bowmen
						stacks = 2
					}
					men_at_arms = {
						type = light_horsemen
						stacks = 2
					}
					men_at_arms = {
						type = light_footmen
						stacks = 4
					}
					location = capital_province
					inheritable = no
				}
				spawn_army = {
					name = gothic_event_troops
					levies = 2000
					men_at_arms = {
						type = bowmen
						stacks = 2
					}
					men_at_arms = {
						type = light_horsemen
						stacks = 2
					}
					men_at_arms = {
						type = light_footmen
						stacks = 4
					}
					location = capital_province
					inheritable = yes
				}
			}
		}
		else_if = {
			limit = {
				AND = {
					game_start_date > 394.1.1
					game_start_date < 396.1.1
				}
			}
			title:e_western_roman_empire.holder ?= {
				add_gold = 1000
			}
			title:e_byzantium.holder ?= {
				add_gold = 1000
			}
			character:200290 = {
				remove_claim = title:d_muntenia
			}
			character:balamer_01 ?= {
				add_prestige = 3000
				spawn_army = {
					name = "Hunnic Invaders"
					levies = 2000
					men_at_arms = {
						type = horse_archers
						stacks = 10
					}
					men_at_arms = {
						type = light_footmen
						stacks = 20
					}
					men_at_arms = {
						type = siege_towers
						stacks = 5
					}
					location = title:b_peremyshl.title_province
					inheritable = no
				}
				spawn_army = {
					name = "Hunnic Invaders"
					levies = 2000
					men_at_arms = {
						type = light_horsemen
						stacks = 10
					}
					men_at_arms = {
						type = horse_archers
						stacks = 10
					}
					men_at_arms = {
						type = light_footmen
						stacks = 10
					}
					men_at_arms = {
						type = siege_towers
						stacks = 5
					}
					location = title:b_stoenesti.title_province
					inheritable = no
				}
			}
			character:990000 ?= {
				spawn_army = {
					name = "Hunnic Invaders"
					levies = 2000
					men_at_arms = {
						type = light_horsemen
						stacks = 10
					}
					men_at_arms = {
						type = horse_archers
						stacks = 10
					}
					men_at_arms = {
						type = siege_towers
						stacks = 5
					}
					location = capital_province
					inheritable = no
				}
			}
			character:yujiulu_072 ?= {
				add_prestige = 500
				spawn_army = {
					name = "Rouran Invaders"
					levies = 1000
					men_at_arms = {
						type = light_horsemen
						stacks = 3
					}
					men_at_arms = {
						type = horse_archers
						stacks = 3
					}
					men_at_arms = {
						type = siege_towers
						stacks = 2
					}
					location = capital_province
					inheritable = yes
				}
			}
		}
	}
}

"common/on_action/TFE_title_on_actions.txt" = {
	{
		if = {
			limit = {
				scope:title = title:k_ostrogoths
				root = { is_greek_or_roman = no }
				NOT = { exists = global_var:gothic_war_won }
				character:992020 = {
					is_alive = yes
					NOT = {
						THIS = root.mother
					}
				}
				OR = {
					debug_log_details = "Check Conditions"
					#root = { has_active_diarchy = yes }
					#scope:title.holder = { has_active_diarchy = yes }
					root = { diarch = character:992020 }
					scope:title.holder = { diarch = character:992020 }
					#character:992020 = { is_diarch = yes }
					#character:992020 = { is_designated_diarch = yes }
					character:992020 = { is_diarch_of_target = root }
					character:992020 = { is_diarch_of_target = scope:title.holder }
				}
			}
			scope:title.holder = {
				trigger_event = {
					id = germanic_events.0019
					days = 1
				}
			}
		}
	}
}

"common/on_action/TFE_yearly_on_actions.txt" = {
	{
		if = {
			limit = {
				current_date > 400.1.1
				current_date < 450.1.1
				NOT = { has_global_variable = attila_spawn }
				title:e_hunnic_empire.holder = {
					is_adult = yes
				}
			}
			random = {
				chance = 30
				modifier = {
					add = 20
					current_date >= 405.1.1
				}
				modifier = {
					add = 20
					current_date >= 410.1.1
				}
				modifier = {
					add = 10
					current_date >= 415.1.1
				}
				set_global_variable = {
					name = attila_spawn
					value = yes
				}
				trigger_event = {
					id = steppe.6666
					days = { 1 2 }
				}
			}
		}
		if = {
			limit = {
				current_date > 533.1.1
				NOT = { has_global_variable = gothic_war_cycle_active }
				exists = title:e_byzantium.holder
				exists = title:k_ostrogoths.holder
				exists = title:k_italy.holder
				title:k_ostrogoths.holder = title:k_italy.holder
				title:k_ostrogoths.holder = {
					is_independent_ruler = yes
				}
				character:992020 = {
					is_alive = yes
					liege = title:k_ostrogoths.holder
				}
				title:k_ostrogoths.holder = {
					has_active_diarchy = yes
					diarch = character:992020
				}
			}
			random = {
				chance = 10
				modifier = {
					add = 10
					current_date >= 534.1.1
				}
				modifier = {
					add = 10
					current_date >= 535.1.1
				}
				modifier = {
					add = 15
					current_date >= 536.1.1
				}
				modifier = {
					add = 15
					current_date >= 537.1.1
				}
				modifier = {
					add = 15
					current_date >= 538.1.1
				}
				title:e_byzantium.holder = {
					trigger_event = {
						id = germanic_events.0032
						days = 1
					}
				}
				set_global_variable = {
					name = gothic_war_cycle_active
					value = yes
				}
				set_global_variable = {
					name = amalasuntha_coup_unlock
					value = yes
				}
			}
		}
		if = {
			limit = {
				current_date > 533.1.1
				NOT = { exists = title:k_ostrogoths.holder }
				exists = title:e_byzantium.holder
				has_global_variable = gothic_war_won
				#NOT = { has_global_variable = has_eternal_peace }
				NOT = { has_global_variable = gothic_war_stalemate }
				title:e_byzantium.holder = {
					any_vassal_or_below = {
						culture = { has_cultural_pillar = heritage_east_germanic }
						any_held_title = {
							OR = {
								tier = tier_county
								tier = tier_duchy
							}
							OR = {
								kingdom = title:k_italy
								kingdom = title:k_italia_annonariae
								kingdom = title:k_italia_suburbicariae
							}
						}
					}
				}
			}
			random = {
				chance = 20
				modifier = {
					add = 10
					current_date >= 540.1.1
				}
				modifier = {
					add = 10
					current_date >= 545.1.1
				}
				modifier = {
					add = 10
					current_date >= 550.1.1
				}
				modifier = {
					add = 30
					character:992029 = {
						is_alive = yes
						age > 15
						OR = {
							is_landed = yes
							title:e_byzantium.holder = {
								any_vassal_or_below = {
									exists = primary_heir
									primary_heir = character:992029
								}
							}
						}
						top_liege = title:e_byzantium.holder
					}
				}
				trigger_event = {
					id = germanic_events.0028
					days = 1
				}
			}
		}
	}
	
	{
		if = {
			limit = {
				AND = {
					game_start_date <= 406.1.1
					current_date >= 406.1.1
					NOT = { exists = global_var:marcus_usurper }
					title:e_western_roman_empire = {
						is_title_created = yes
					}
					title:e_western_roman_empire = {
						OR = {
							any_in_de_facto_hierarchy = {
								THIS = title:k_britannia
							}
							holder = {
								has_title = title:k_britannia
							}
						}
					}
					character:BUsuprer_01 = {
						is_alive = yes
						NOT = {
							has_title = title:k_britannia
						}
					}
				}
			}
			
			character:BUsuprer_01 = {
				trigger_event = briton.0008
				set_global_variable = {
					name = marcus_usurper
					value = yes
				}
			}
		}
	}
	
	{
		if = {
			limit = {
				current_date >= 400.1.1
				NOT = { has_global_variable = radagaisus_has_invaded }
				current_date <= 410.1.1
				NOT = { exists = title:k_goths.holder }
				character:radagaisian_02 = {
					is_alive = yes
				}
			}
			random = {
				chance = 5
				modifier = {
					add = 15
					current_date >= 401.1.1
				}
				modifier = {
					add = 30
					current_date >= 403.1.1
				}
				modifier = {
					add = 40
					current_date >= 405.1.1
				}
				modifier = {
					add = 10
					current_date >= 406.1.1
				}
				set_global_variable = {
					name = radagaisus_has_invaded
					value = yes
				}
				trigger_event = {
					id = gothic_wars.0011
					days = { 30 50 }
				}
			}
		}

		if = {
			limit = {
				current_date >= 400.1.1
				has_global_variable = radagaisus_has_invaded
				NOT = { has_global_variable = goth_migrations }
				current_date <= 420.1.1
			}
			random = {
				chance = 20
				modifier = {
					add = 10
					current_date >= 405.1.1
				}
				modifier = {
					add = 20
					current_date >= 407.1.1
				}
				modifier = {
					add = 40
					current_date >= 409.1.1
				}
				modifier = {
					add = 10
					current_date >= 411.1.1
				}
				set_global_variable = {
					name = goth_migrations
					value = yes
				}
				trigger_event = gothic_wars.0022
				trigger_event = gothic_wars.0023
				trigger_event = gothic_wars.0024
				trigger_event = gothic_wars.0025
			}
		}

		if = {
			limit = {
				game_start_date = 476.9.4
				NOT = { has_global_variable = clovis_invasion }
				OR = {
					AND = {
						character:997004 = {
							is_alive = yes
							is_landed = yes
							is_independent_ruler = yes
							NOT = {
								has_title = title:k_france
							}
							trigger_if = {
								limit = {
									title:k_france = {
										is_title_created = yes
									}
								}
								NOT = {
									OR = {
										is_allied_to = title:k_france.holder
										AND = {
											exists = var:my_suzerain
											var:my_suzerain = title:k_france.holder
											var:my_suzerain = {
												OR = {
													is_target_in_variable_list = { name = non_permanent_tributaries target = prev }
													is_target_in_variable_list = { name = permanent_tributaries target = prev }
												}
											}
										}
									}
								}
							}
						}
						character:997005 = {
							NOT = {
								has_title = title:k_france
							}
						}
					}
					AND = {
						character:997005 = {
							is_alive = yes
							is_landed = yes
							is_independent_ruler = yes
							NOT = {
								has_title = title:k_france
							}
						}
						character:997004 = {
							NOT = {
								has_title = title:k_france
							}
						}
					}
				}
				AND = {
					title:k_france = {
						is_title_created = yes
					}
					title:k_france.holder = {
						culture = culture:gallo_roman
					}
				}
				current_date <= 500.1.1
			}
			random = {
				chance = 0
				modifier = {
					add = 5
					current_date >= 478.1.1
				}
				modifier = {
					add = 10
					current_date >= 479.1.1
				}
				modifier = {
					add = 35
					current_date >= 480.1.1
				}
				modifier = {
					add = 50
					current_date >= 481.1.1
				}
				set_global_variable = {
					name = clovis_invasion
					value = yes
				}
				if = {
					limit = {
						character:997004 = {
							is_alive = yes
							is_landed = yes
							is_independent_ruler = yes
						}
					}
					character:997004 = {
						trigger_event = germanic_events.0003
					}
				}
				else_if = {
					limit = {
						character:997005 = {
							is_alive = yes
							is_landed = yes
							is_independent_ruler = yes
						}
					}
					character:997005 = {
						trigger_event = germanic_events.0003
					}
				}
			}
		}
	}

	{
		if = {
			limit = {
				current_date >= 533.1.1
				current_date <= 545.1.1
				is_target_in_global_variable_list = {
					name = unavailable_unique_decisions
					target = flag:recall_belisarius
				}
				is_target_in_global_variable_list = {
					name = unavailable_unique_decisions
					target = flag:vandalic_aftermath_vassals
				}
				NOT = { has_global_variable = berber_revolt }
				exists = title:e_byzantium.holder
				title:e_byzantium.holder = {
					any_vassal_or_below = {
						highest_held_title_tier > tier_barony
						capital_province = { geographical_region = custom_roman_africae }
						OR = {
							culture = { has_cultural_pillar = heritage_berber }
							culture = culture:mauro_roman
						}
					}
				}
			}
			set_global_variable = {
				name = berber_revolt
				value = yes
			}
			trigger_event = {
				id = western_roman.0072
				days = 90
			}
		}
	}
}

"common/on_action/death.txt" = {
	{
		# Fix gods-damned Bavaria splitting from East Francia in an ugly fashion in 867.
		if = {
			limit = {
				# Make sure we're looking at the right guy & that the circumstances haven't changed too much.
				this = character:90107
				highest_held_title_tier = tier_kingdom
				has_realm_law = confederate_partition_succession_law
				# Bavaria should be in a fit state for interfering with the handout order.
				title:k_bavaria = {
					OR = {
						is_title_created = no
						holder = root
					}
					any_in_de_jure_hierarchy = {
						tier = tier_county
						# More than 50%.
						count >= 22
						holder = {
							any_liege_or_above = { this = root }
						}
					}
				}
				NOT = { has_primary_title = title:k_bavaria }
				# Players can sort this themselves: you just need to have Bavaria as your primary title and it's all fine.
				is_ai = yes
			}
			# If we've got no Bavaria, create it.
			if = {
				limit = {
					title:k_bavaria = { is_title_created = no }
				}
				create_title_and_vassal_change = {
					type = created
					save_scope_as = change
				}
				title:k_bavaria = {
					change_title_holder = {
						holder = root
						change = scope:change
					}
				}
				resolve_title_and_vassal_change = scope:change
			}
			# Then switch around.
			set_primary_title_to = title:k_bavaria
		}
	}
}

"common/on_action/diarchy_on_action.txt" = {
	{
		if = {
			limit = {
				scope:old_diarch = character:992020
				exists = title:e_byzantium.holder
				NOT = { has_global_variable = gothic_war_cycle_active }
				NOT = { has_global_variable = gothic_war_cycle_prep }
			}
			if = {
				limit = {
					character:992020 = {
						is_alive = no
					}
				}
				title:e_byzantium.holder = {
					trigger_event = {
						id = germanic_events.0023
						days = 1
					}
				}
			}
			else_if = {
				limit = {
					root = {
						mother = character:992020
					}
				}
				root = {
					trigger_event = {
						id = germanic_events.0021
						days = 1
					}
				}
				title:e_byzantium.holder = {
					trigger_event = {
						id = germanic_events.0022
						days = 1
					}
				}
			}
			else_if = {
				limit = {
					NOT = {
						root = {
							mother = character:992020
						}
					}
				}
				root = {
					trigger_event = {
						id = germanic_events.0020
						days = 1
					}
				}
				title:e_byzantium.holder = {
					trigger_event = {
						id = germanic_events.0022
						days = 1
					}
				}
			}
		}
	}
}

"common/on_action/title_on_actions.txt" = {
	{
		# Am I The Chad?
		if = {
			limit = { root = character:easteregg_chad_uhl }
			set_house = house:house_chad_uhl
		}
	}

	{
					AND = {
						scope:title = {
							tier = tier_county
							title_province = {
								geographical_region = TFE_eastern_iranian_struggle_region
							}
						}
						root = {
							any_character_struggle = {
								involvement = involved
								is_struggle_type = eastern_iranian_struggle
								activate_struggle_catalyst_secondary_character_involvement_involved_trigger = {
									CATALYST = catalyst_usurp_title
									CHAR = root
								}
							}
						}
					}
	}

	{
					AND = {
						scope:title = {
							tier = tier_county
							title_province = {
								geographical_region = TFE_eastern_iranian_struggle_region
							}
						}
						root = {
							any_character_struggle = {
								involvement = involved
								is_struggle_type = eastern_iranian_struggle
								activate_struggle_catalyst_secondary_character_involvement_involved_trigger = {
									CATALYST = catalyst_gain_claim_on_title
									CHAR = root
								}
							}
						}
					}
	}
}

"common/on_action/east_asia_flavor_on_actions.txt" = {
	{
on_game_start = {
	on_actions = {
		on_TFE_east_asia_start
	}
}

on_TFE_east_asia_start = {
	effect = {
		character:western_liang_043 ?= {
			if = {
				limit = {
					is_alive = yes
					is_landed = yes
				}
				trigger_event = {
					id = liang.0012
					days = { 365 2190 }
				}
			}
		}
	}
}
	}

	{
# A title is transferred to a new character
# root = the new holder
# scope:title = the title that changes hands
# scope:previous_holder = previous holder. Might be dead
on_title_gain = {	
	events = {
		delay = { days = 1 }
		liang.0010		# Meng Min passes away and Li Gao becomes governor of Dunhuang
	}
}

# A title is inherited by a character
# root = the new holder
# scope:title = the title that changes hands
# scope:previous_holder = previous holder. Should be dead
on_title_gain_inheritance = {
	events = {
		delay = { days = 1 }
		liang.0010		# Meng Min passes away and Li Gao becomes governor of Dunhuang
	}
}
	}
}

"common/scripted_effects/TFE_effects.txt" = {
	{
		copy_inheritable_appearance_from = character:990000
	}

	{
start_vandalic_war_effect = {

	global_var:justinian_commander = {
		add_character_flag = STOP_ADMIN
	}

	title:c_mahdiya = {
		save_temporary_scope_as = current_county
	}
	create_title_and_vassal_change = {
		type = usurped
		save_scope_as = change
		add_claim_on_loss = no
	}
	scope:current_county = {
		change_title_holder = {
			holder = global_var:justinian_commander
			change = scope:change
			take_baronies = yes
		}
	}
	resolve_title_and_vassal_change = scope:change

	if = {
		limit = {
			exists = title:e_byzantium.holder
			NOT = { global_var:justinian_commander.top_liege = title:e_byzantium.holder }
		}
		create_title_and_vassal_change = {
			type = conquest_claim
			save_scope_as = change_two
			add_claim_on_loss = no
		}
		global_var:justinian_commander = {
			change_liege = {
				liege = title:e_byzantium.holder
				change = scope:change_two
			}
		}
		resolve_title_and_vassal_change = scope:change_two
	}

	global_var:justinian_commander = {
		every_sub_realm_county = {
			limit = {
				tier = tier_county
				empire = { this = title:e_byzantium }
			}
			# Grab the county for ease of reference.
			save_temporary_scope_as = current_county
			# Create an elevated peasant to claim the county.
			create_character = {
				location = scope:current_county.title_province
				template = old_country_local_warlord_template
				save_temporary_scope_as = local_warlord
			}
			# Assign the seceding title to the new upstart.
			create_title_and_vassal_change = {
				type = usurped
				save_scope_as = change
				add_claim_on_loss = no
				}
			hidden_effect = {
				scope:current_county = {
					change_title_holder = {
						holder = scope:local_warlord
						change = scope:change
						take_baronies = yes
					}
				}
			}
			resolve_title_and_vassal_change = scope:change
			if = {
				limit = {
					exists = title:e_byzantium.holder
				}
				# And give them their independence.
				create_title_and_vassal_change = {
					type = conquest
					save_scope_as = change
					add_claim_on_loss = no
				}
				hidden_effect = {
					scope:local_warlord = {
						#becomes_independent = { change = scope:change }
						change_liege = {
							liege = title:e_byzantium.holder
							change = scope:change
						}
					}
				}
				resolve_title_and_vassal_change = scope:change
			}
		}
		if = {
			limit = {
				exists = title:e_byzantium.holder
			}
			every_vassal = {
				limit = {
					capital_county.empire = title:e_byzantium
				}
				create_title_and_vassal_change = {
					type = conquest
					save_scope_as = change
					add_claim_on_loss = no
				}
				hidden_effect = {
					change_liege = {
						liege = title:e_byzantium.holder
						change = scope:change
					}
				}
				resolve_title_and_vassal_change = scope:change
			}
		}
		every_held_title = {
			limit = {
				tier >= tier_duchy
				is_titular = no
			}
			add_to_list = list_to_return
		}
		every_in_list = {
			list = list_to_return
			save_scope_as = title_to_return
			global_var:justinian_commander = { destroy_title = scope:title_to_return }
		}
	}

	#Need to put this here after duchy title transfer for admin
	title:c_mahdiya = {
		save_temporary_scope_as = current_county
	}
	create_title_and_vassal_change = {
		type = usurped
		save_scope_as = change
		add_claim_on_loss = no
	}
	scope:current_county = {
		change_title_holder = {
			holder = global_var:justinian_commander
			change = scope:change
			take_baronies = yes
		}
	}
	resolve_title_and_vassal_change = scope:change

	global_var:justinian_commander = {
		trigger_event = {
			id = western_roman.0042
			days = 1
		}
		start_war = {
			cb = vandalic_war_cb
			target = title:k_vandals.holder
			target_title = title:k_vandals
			claimant = global_var:justinian_commander
		}
	}
}
	}

	{
start_gothic_war_effect = {
	if = {
		limit = {
			NOT = { title:c_trapani.holder = global_var:justinian_gothic_commander }
			NOT = { title:c_trapani.holder = character:belisarius_001 }
			trigger_if = {
				limit = {
					exists = title:k_vandals.holder
				}
				NOT = { title:c_trapani.holder.top_liege = title:k_vandals.holder }
			}
		}
		title:c_trapani = {
			save_temporary_scope_as = current_county
		}
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:current_county = {
			change_title_holder = {
				holder = global_var:justinian_gothic_commander
				change = scope:change
				take_baronies = yes
			}
		}
		resolve_title_and_vassal_change = scope:change
	}
	if = {
		limit = {
			global_var:justinian_gothic_commander = {
				is_landed = no
			}
		}
		title:c_malta = {
			save_temporary_scope_as = current_county
		}
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:current_county = {
			change_title_holder = {
				holder = global_var:justinian_gothic_commander
				change = scope:change
				take_baronies = yes
			}
		}
		resolve_title_and_vassal_change = scope:change
	}
	#title:k_ostrogoths.holder = {
	#	every_sub_realm_county = {
	#		limit = {
	#			NOT = { this = title:c_malta }
	#			NOT = { this = title:c_palermo }
	#			duchy = title:d_sicily
	#		}
	#		save_temporary_scope_as = current_county
	#		create_title_and_vassal_change = {
	#			type = usurped
	#			save_scope_as = change
	#			add_claim_on_loss = no
	#		}
	#		scope:current_county = {
	#			change_title_holder = {
	#				holder = global_var:justinian_gothic_commander
	#				change = scope:change
	#				take_baronies = yes
	#			}
	#		}
	#		resolve_title_and_vassal_change = scope:change
	#	}
	#}

	global_var:justinian_gothic_commander = {
		every_sub_realm_county = {
			limit = {
				tier = tier_county
				empire = { this = title:e_byzantium }
				NOT = {
					duchy = title:d_sicily
				}
			}
			# Grab the county for ease of reference.
			save_temporary_scope_as = current_county
			# Create an elevated peasant to claim the county.
			create_character = {
				location = scope:current_county.title_province
				template = old_country_local_warlord_template
				save_temporary_scope_as = local_warlord
			}
			# Assign the seceding title to the new upstart.
			create_title_and_vassal_change = {
				type = usurped
				save_scope_as = change
				add_claim_on_loss = no
				}
			hidden_effect = {
				scope:current_county = {
					change_title_holder = {
						holder = scope:local_warlord
						change = scope:change
						take_baronies = yes
					}
				}
			}
			resolve_title_and_vassal_change = scope:change
			if = {
				limit = {
					exists = title:e_byzantium.holder
				}
				# And give them their independence.
				create_title_and_vassal_change = {
					type = conquest
					save_scope_as = change
					add_claim_on_loss = no
				}
				hidden_effect = {
					scope:local_warlord = {
						#becomes_independent = { change = scope:change }
						change_liege = {
							liege = title:e_byzantium.holder
							change = scope:change
						}
					}
				}
				resolve_title_and_vassal_change = scope:change
			}
		}
		if = {
			limit = {
				exists = title:e_byzantium.holder
			}
			every_vassal = {
				limit = {
					capital_county.empire = title:e_byzantium
				}
				create_title_and_vassal_change = {
					type = conquest
					save_scope_as = change
					add_claim_on_loss = no
				}
				hidden_effect = {
					change_liege = {
						liege = title:e_byzantium.holder
						change = scope:change
					}
				}
				resolve_title_and_vassal_change = scope:change
			}
		}
		every_held_title = {
			limit = {
				tier >= tier_duchy
			}
			add_to_list = list_to_return
		}
		every_in_list = {
			list = list_to_return
			save_scope_as = title_to_return
			global_var:justinian_gothic_commander = { destroy_title = scope:title_to_return }
		}
	}
	global_var:justinian_gothic_commander = {
		trigger_event = {
			id = germanic_events.0026
			days = 1
		}
		if = {
			limit = {
				exists = title:e_byzantium.holder
				global_var:justinian_gothic_commander = {
					NOT = { top_liege = title:e_byzantium.holder }
				}
			}
			create_title_and_vassal_change = {
				type = swear_fealty
				save_scope_as = changev
				add_claim_on_loss = no
			}
			global_var:justinian_gothic_commander = {
				change_liege = {
					liege = title:e_byzantium.holder
					change = scope:changev
				}
			}
			resolve_title_and_vassal_change = scope:changev
		}
	}
	if = {
		limit = {
			title:k_ostrogoths.holder = {
				any_sub_realm_county = {
					duchy = title:d_sicily
				}
			}
		}
		global_var:justinian_gothic_commander = { 
			start_war = {
				casus_belli = gothic_duchy_conquest_cb
				target = title:k_ostrogoths.holder
				target_title = title:d_sicily
				claimant = global_var:justinian_gothic_commander
			}
		}
	}
	else = {
		set_global_variable = {
			name = gothic_attacker_1
			value = global_var:justinian_gothic_commander
		}
		if = {
			limit = {
				exists = title:k_daciae.holder
				title:k_daciae.holder.top_liege = title:e_byzantium.holder
			}
			set_global_variable = {
				name = gothic_attacker_2
				value = title:k_daciae.holder
			}
		}
		title:e_byzantium.holder = {
			start_war = {
				cb = gothic_war_regular_cb
				target = title:k_ostrogoths.holder
				target_title = title:k_ostrogoths
				claimant = title:e_byzantium.holder
			}
		}
	}
}
	}

	{
end_gothic_war_early_effect = {
	if = {
		limit = {
			scope:truce_breakee = {
				any_vassal_or_below = {
					any_character_war = {
						using_cb = gothic_duchy_conquest_cb
					}
				}
			}
		}
		scope:truce_breakee = {
			every_vassal_or_below = {
				every_character_war = {
					limit = {
						using_cb = gothic_duchy_conquest_cb
					}
					end_war = white_peace
				}
			}
		}
	}
	if = {
		limit = {
			AND = {
				exists = title:k_ostrogoths.holder
				title:k_ostrogoths.holder = {
					any_character_war = {
						using_cb = cb_gothic_wars_amalasuntha
					}
				}
			}
		}
		title:k_ostrogoths.holder = {
			every_character_war = {
				limit = {
					using_cb = cb_gothic_wars_amalasuntha
				}
				end_war = white_peace
			}
		}
	}
	if = {
		limit = {
			scope:truce_breakee = {
				any_character_war = {
					using_cb = gothic_war_regular_cb
				}
			}
		}
		scope:truce_breakee = {
			every_character_war = {
				limit = {
					using_cb = gothic_war_regular_cb
				}
				end_war = white_peace
			}
		}
	}
}
	}
}

"common/scripted_triggers/tfe_culture_triggers.txt" = {
	{
		dynasty = dynasty:nuvelan
	}
}

"gfx/portraits/portrait_modifiers/50_hairstyles_scripted_characters.txt" = {
	{
            	modifier = {
               	add = 999
                exists = this
		        exists = character:aksum_17 #eon
		        this = character:aksum_17 #eon
	        }
	}
	{
            	modifier = {
               	add = 999
                exists = this
		        exists = character:himyarite_30 #Abraha
		        this = character:himyarite_30 #Abraha
	        }
	}
	{
            modifier = {
                add = 999
		        exists = this
                exists = character:142 #robert_curthose
                this = character:142 #robert_curthose
            }
	}
	{
            modifier = {
                add = 999
                exists = this
                exists = character:70515  #Zeno
                this = character:70515  #Zeno
            }
	}
	{
            modifier = {
                add = 999
                exists = this
                exists = character:vigg_04 #Hengest
                this = character:vigg_04 #Hengest
            }
	}
	{
            modifier = {
                add = 999
                exists = this
                exists = character:syagri_06 #Syagrus
                this = character:syagri_06 #Syagrus
            }
	}
	{
	    modifier = {
                add = 999
                exists = this
                exists = character:rugian_03 #Feletheus
                this = character:rugian_03 #Feletheus
            }
	}
	{
            modifier = {
                add = 999
				exists = this
				exists = character:6878 #jarl_haesteinn
				this = character:6878 #jarl_haesteinn
            }
	}
	{
            modifier = {
                add = 999
                exists = this
                exists = character:aelling_01 #Aelle
                this = character:aelling_01 #Aelle
            }
	}

	{
            modifier = {
                add = 999
                exists = this
                exists = character:easteregg_elisabeth_gangenes
                this = character:easteregg_elisabeth_gangenes
            }
	}
	{
            modifier = {
                add = 999
				exists = this
				exists = character:7757 #duchess_matilda
				this = character:7757 #duchess_matilda
            }
            modifier = {
                add = 999
				exists = this
                exists = character:102505 #queen_ingebjorg
                this = character:102505 #queen_ingebjorg
            }
            modifier = {
                add = 999
				exists = this
                exists = character:765 #princess_swietoslawa
                this = character:765 #princess_swietoslawa
            }
            modifier = {
               	add = 999
                exists = this
                exists = character:930551279 #eudoxia
                this = character:930551279 #eudoxia
            }
            modifier = {
               	add = 999
                exists = this
                exists = character:placidia_01 #placidia
                this = character:placidia_01 #placidia
            }
            modifier = {
               	add = 999
                exists = this
                exists = character:900065 #serena
                this = character:900065 #serena
            }
		modifier = {
			add = 999
                	exists = this
                	exists = character:992020 #Amalasuntha
                	this = character:992020 #Amalasuntha
		}
 		modifier = {
			add = 999
                	exists = this
                	exists = character:992024 #Matasuntha
                	this = character:992024 #Matasuntha
		}
	}
	{
            modifier = {
                add = 999
				exists = this
				exists = character:108501 #infanta_urraca
				this = character:108501 #infanta_urraca
            }
            modifier = {
                add = 999
				exists = this
                exists = character:131 #eadgifu_the_fair
                this = character:131 #eadgifu_the_fair
            }
	}
	{
            modifier = {
                add = 999
				exists = this
                exists = character:633 #queen_yelizaveta
                this = character:633 #queen_yelizaveta
            }
	}
	{
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_bianca_savazzi
                this = character:easteregg_bianca_savazzi
            }
            modifier = {
            	add = 999
            	exists = this
				exists = character:easteregg_claudia_baldassi
				this = character:easteregg_claudia_baldassi
            }
	}
	{
            modifier = {
                add = 999
				exists = this
                exists = character:6863 #ingrid_bjornsdottir
                this = character:6863 #ingrid_bjornsdottir
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_linnea_thimren
                this = character:easteregg_linnea_thimren
            }
	}
	{
            modifier = {
                add = 999
				exists = this
                exists = character:6839 #iliana_of_uppland
                this = character:6839 #iliana_of_uppland
            }
            modifier = {
                add = 999
                exists = this
                exists = character:161257 #queen_wyszeslawa
                this = character:161257 #queen_wyszeslawa
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_steacy_mcilwham
                this = character:easteregg_steacy_mcilwham
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_katya_boestad
                this = character:easteregg_katya_boestad
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_tegan_harris
                this = character:easteregg_tegan_harris
            }
			modifier = {
                add = 999
				exists = this
                exists = character:easteregg_bahar_shefket
                this = character:easteregg_bahar_shefket
            }
            modifier = {
                add = 999
                exists = this
                exists = character:easteregg_alexia_belfort
                this = character:easteregg_alexia_belfort
            }
	}
	{
            modifier = {
                add = 999
                exists = this
                exists = character:997005 #Chlodovech
                this = character:997005 #Chlodovech
            }
		modifier = {
		add = 999
		exists = character:997013 #Chlothar
		this = character:997013 #Chlothar
	    }
            modifier = {
                add = 999
                exists = this
                exists = character:997015 #Theodobert
                this = character:997015 #Theodobert
            }
	}
	{
            modifier = {
                add = 999
				exists = this
                exists = character:123 #queen_ealdgyth
                this = character:123 #queen_ealdgyth
            }
            modifier = {
                add = 999
				exists = this
                exists = character:367 #duchess_mathilde
                this = character:367 #duchess_mathilde
        }
	}
	{
            modifier = {
                add = 999
                exists = this
                exists = character:145072 #Focas
                this = character:145072 #Focas
            }
            modifier = {
                add = 999
                exists = this
                exists = character:145071 #Heraclius
                this = character:145071 #Heraclius
            }
            modifier = {
                add = 999
                exists = this
                exists = character:armenian_01 #Narses
                this = character:armenian_01 #Narses
            }
            modifier = {
                add = 999
                exists = this
                exists = character:greek_17 #Plutarch
                this = character:greek_17 #Plutarch
            }
	}
	{
            modifier = {
                add = 999
				exists = this
				exists = character:6448 #count_eudes
				this = character:6448 #count_eudes
            }
            modifier = {
                add = 999
				exists = this
                exists = character:107500 #king_sancho
                this = character:107500 #king_sancho
            }
            modifier = {
                add = 999
				exists = this
                exists = character:214 #king_philippe
                this = character:214 #king_philippe
            }
            modifier = {
                add = 999
				exists = this
                exists = character:146 #william_the_red
                this = character:146 #william_the_red
            }
	}
	{
            modifier = {
                add = 999
				exists = this
				exists = character:163112 #halfdan_whiteshirt
				this = character:163112 #halfdan_whiteshirt
            }
            modifier = {
                add = 999
				exists = this
                exists = character:30228 #king_louis
                this = character:30228 #king_louis
            }
            modifier = {
                add = 999
				exists = this
                exists = character:984 #king_malcom
                this = character:984 #king_malcom
            }
            modifier = {
                add = 999
				exists = this
                exists = character:212892 #ota_the_handsome
                this = character:212892 #ota_the_handsome
            }
            modifier = {
                add = 999
                exists = this
                exists = character:762 #king_boleslaw
                this = character:762 #king_boleslaw
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_joel_hansson
                this = character:easteregg_joel_hansson
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_peter_johannesson
                this = character:easteregg_peter_johannesson
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_petter_vilberg
                this = character:easteregg_petter_vilberg
            }

             modifier = {
                add = 999
                exists = this
                exists = character:168137
                this = character:168137
            }
            modifier = {
                add = 999
                exists = this
                exists = character:200290 #Atawulf
                this = character:200290 #Arawulf
            }
            modifier = {
                add = 999
                exists = this
                exists = character:180618 #Bahram
                this = character:180618 #Bahram
            }
            modifier = {
                add = 999
                exists = this
                exists = character:997004 #Childeric
                this = character:997004 #Childeric
            }
            modifier = {
                add = 999
                exists = this
                exists = character:997009 #Theodoric Meroving
                this = character:997009 #Theodoric Meroving
            }
            modifier = {
                add = 999
                exists = this
                exists = character:997011 #Chlodomir
                this = character:997011 #Chlodomir
            }
	}
	{
            modifier = {
                add = 999
				exists = this
				exists = character:3924 #emir_yahya
				this = character:3924 #emir_yahya
            }
            modifier = {
                add = 999
				exists = this
                exists = character:106000 #king_antso
                this = character:106000 #king_antso
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_alexander_oltner
                this = character:easteregg_alexander_oltner
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_ismael_serrano
                this = character:easteregg_ismael_serrano
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_christian_daflos
                this = character:easteregg_christian_daflos
            }
            modifier = {
                add = 999
		exists = this
                exists = character:70517  #Leo
                this = character:70517  #Leo
            }
           modifier = {
                add = 999
                exists = this
                exists = character:mauro_roman_kings_02  #Massonas
                this = character:mauro_roman_kings_02  #Massonas
            }
	}
	{
            modifier = {
                add = 999
                exists = this
                exists = character:205141 #Ceredig
                this = character:205141 #Ceredig
            }
            modifier = {
                add = 999
                exists = this
                exists = character:70512 #Justinian
                this = character:70512 #Justinian
            }
            modifier = {
                add = 999
                exists = this
                exists = character:cappadocia_07 #Ioannes
                this = character:cappadocia_07 #Ioannes
            }
	}
	{
            modifier = {
                add = 999
				exists = this
                exists = character:quadi_04 # Hermerich of the Quadi
                this = character:quadi_04 # Hermerich of the Quadi
            }
	}
	{
            modifier = {
                add = 400
                exists = this
				exists = character:83355 #petty_king_murchad
				this = character:83355 #petty_king_murchad
            }
            modifier = {
                add = 999
				exists = this
                exists = character:109500 #king_garcia
                this = character:109500 #king_garcia
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_henrik_fahraeus
                this = character:easteregg_henrik_fahraeus
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_jakub_potapczyk
                this = character:easteregg_jakub_potapczyk
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_petter_lundh
                this = character:easteregg_petter_lundh
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_max_weltz
                this = character:easteregg_max_weltz
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_max_collin
                this = character:easteregg_max_collin
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_martin_anward
                this = character:easteregg_martin_anward
            }
            modifier = {
                add = 999
                exists = this
		        exists = character:6392 #charlemagne
		        this = character:6392 #charlemagne
            }
	}
	{
            modifier = {
                add = 999
				exists = this
				exists = character:522 #duke_vratislav
				this = character:522 #duke_vratislav
            }
            modifier = {
                add = 999
				exists = this
                exists = character:108500 #king_alfonso
                this = character:108500 #king_alfonso
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_sean_hughes
                this = character:easteregg_sean_hughes
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_paul_depre
                this = character:easteregg_paul_depre
            }
            modifier = {
                add = 999
                exists = this
                exists = character:easteregg_zack_holmgren
                this = character:easteregg_zack_holmgren
            }
            modifier = {
                add = 999
                exists = this
                exists = character:159431 #Conan Meriadoc
                this = character:159431 #tiberius
            } 
            modifier = {
               	add = 999
                exists = this
		        exists = character:999103 #king_alaric
		        this = character:999103 #king_alaric
            }
            modifier = {
                add = 999
                exists = this
                exists = character:159038 #Coel
                this = character:159038 #ACoel
            }
            modifier = {
                add = 999
                exists = this
                exists = character:constantinus_05 #Ambrosius
                this = character:constantinus_05 #Ambrosius
            }
            modifier = {
                add = 999
                exists = this
                exists = character:mauri_42 #Iabdas
                this = character:mauri_42 #Iabdas
            }
            modifier = {
                add = 999
                exists = this
                exists = character:997002 #Chlodio
                this = character:997002 #Chlodio
            }
	}
	{
            modifier = {
                add = 999
				exists = this
				exists = character:easteregg_james_beaumont
				this = character:easteregg_james_beaumont
            }
            modifier = {
                add = 999
                exists = this
                exists = character:maldras_06 #Hermenerich
                this = character:maldras_06 #Hermenerich
            }
	    modifier = {
                add = 999
                exists = this
                exists = character:982001 #Abu Karib
                this = character:982001 #Abu Karib
            }
	    modifier = {
                add = 999
                exists = this
                exists = character:xionite_001 #Kidara
                this = character:xionite_001 #Kidara
            }
	    modifier = {
                add = 999
                exists = this
                exists = character:samo_01  #Samo
                this = character:samo_01  #Samo
            }
	}
	{
            modifier = {
                add = 999
				exists = this
				exists = character:90104 #charles_the_bald
				this = character:90104 #charles_the_bald
            }
            modifier = {
                add = 999
				exists = this
                exists = character:1316 #emperor_heinrich
                this = character:1316 #emperor_heinrich
            }
            modifier = {
                add = 999
                exists = this
                exists = character:992016 #theodoric_the_great
                this = character:992016 #theodoric_the_great
            }
            modifier = {
                add = 999
		        exists = this
                exists = character:83432 #Eochaid
                this = character:83432 #Eochaid
            }
	}
	{
            modifier = {
             modifier = {
                add = 999
				exists = this
                exists = character:easteregg_nils_wadensten
                this = character:easteregg_nils_wadensten
            }
              	add = 999
                exists = this
		        exists = character:900062 #stilicho
		        this = character:900062 #stilicho
            }
            modifier = {
                add = 999
                exists = this
                exists = character:70519  #Imperator Arcadius I
                this = character:70519  #Imperator Arcadius I
	        }
            modifier = {
                add = 999
                exists = this
                exists = character:145227 #Imperator Honorius I
                this = character:145227 #Imperator Honorius I
	        }
            modifier = {
                add = 999
                exists = this
                exists = character:nepos_02  #Nepos
                this = character:nepos_02  #Nepos
	        }
            modifier = {
               	add = 999
                exists = this
		exists = character:145237 #julian_the_apostate
		this = character:145237 #julian_the_apostate
            }
            modifier = {
                add = 999
                exists = this
                exists = character:londinium_01 #Riothamus
                this = character:londinium_01 #Riothamus
            }
	    modifier = {
               	add = 999
                exists = this
		exists = character:arsacid_58 #vramshapuh
		this = character:arsacid_58 #vramshapuh
	    }
            modifier = {
                add = 999
                exists = this
                exists = character:vandals_005 #Hilderic
                this = character:vandals_005 #Hilderic
            }
            modifier = {
                add = 999
                exists = this
                exists = character:992022 #Theodahad
                this = character:992022 #Theodahad
            }
            modifier = {
                add = 999
                exists = this
                exists = character:991004 #Mundus
                this = character:991004 #Mundus
            }
             modifier = {
                add = 999
                exists = this
                exists = character:greek_20 #Proklos
                this = character:greek_20 #Proklos
            }
	}
	{
		modifier = {
			add = 999
                	exists = this
                	exists = character:nuvelan_11 #Gildo
                	this = character:nuvelan_11 #Gildo
		}
		modifier = {
			add = 999
                	exists = this
                	exists = character:aksum_16 #Ouazeba
                	this = character:aksum_16 #Ouazeba
		}
	}
	{
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_magne_skjaeran
                this = character:easteregg_magne_skjaeran
            }
	}
	{
           modifier = {
            modifier = {
                add = 999
				exists = this
				exists = character:163111 #ivar_the_boneless
				this = character:163111 #ivar_the_boneless
            }
            modifier = {
                add = 999
				exists = this
                exists = character:102531 #harald_hardrade
                this = character:102531 #harald_hardrade
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_joacim_carlberg
                this = character:easteregg_joacim_carlberg
            }
            modifier = {
				add = 999
				exists = this
				exists = character:easteregg_struan_mccallum
				this = character:easteregg_struan_mccallum
			}
                add = 999
                exists = this
		        exists = character:999105 #athaulf
		        this = character:999105 #athaulf
            }
            modifier = {
                add = 999
                exists = this
                exists = character:997003 #Merovech
                this = character:997003 #Merovech
            }
            modifier = {
                add = 999
                exists = this
                exists = character:992003 #Hermanaric
                this = character:992003 #Hermanaric
            }
	}
	{
            modifier = {
                add = 999
				exists = this
				exists = character:163110 #sigurdr_snake_in_the_eye
				this = character:163110 #sigurdr_snake_in_the_eye
            }
            modifier = {
                add = 999
                exists = this
                exists = character:144000 #haraldr_fairhair
                this = character:144000 #haraldr_fairhair
            }
            modifier = {
                add = 999
				exists = this
                exists = character:40605 #rurik_rurikid
                this = character:40605 #rurik_rurikid
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_jonas_wickerstrom
                this = character:easteregg_jonas_wickerstrom
            }
            modifier = {
                add = 999
                exists = this
		        exists = character:900016 #faramund
		        this = character:900016 #faramund
            }
	}
	{
            modifier = {
                add = 999
				exists = this
				exists = character:163108 #bjorn_ironside
				this = character:163108 #bjorn_ironside
            }
            modifier = {
                add = 999
				exists = this
                exists = character:140 #william_the_bastard
                this = character:140 #william_the_bastard
            }
            modifier = {
                add = 999
				exists = this
                exists = character:101515 #king_svend
                this = character:101515 #king_svend
            }
            modifier = {
                add = 999
				exists = this
                exists = character:42018 #karlmann
                this = character:42018 #karlmann
            }
	}
	{
            modifier = {
                add = 999
				exists = this
				exists = character:159137 #almos_arpad
				this = character:159137 #almos_arpad
            }
	}
	{
	        modifier = {
                add = 999
                exists = this
                exists = character:alchonid_005 #Khingila
                this = character:alchonid_005 #Khingila
            }
	        modifier = {
                add = 999
                exists = this
                exists = character:hephthalite_misc_017 #Katulf
                this = character:hephthalite_misc_017 #Katulf
            }
	}
	{
            modifier = {
                add = 999
                exists = this
                exists = character:belisarius_001 #Belisarius
                this = character:belisarius_001 #Belisarius
            }
	}
	{
            modifier = {
                add = 999
                exists = this
                exists = character:200284 #euric
                this = character:200284 #euric
            }
            modifier = {
                add = 999
                exists = this
                exists = character:180628 #Khosrau
                this = character:180628 #Khosrau
            }
            modifier = {
                add = 999
                exists = this
                exists = character:mauri_36 #Masties
                this = character:mauri_36 #Masties
            }
	}
	{
            modifier = {
                add = 999
                exists = this
                exists = character:danis0005
                this = character:danis0005
            }

            modifier = {
                add = 999
                exists = this
                exists = character:surunbaqi0001
                this = character:surunbaqi0001
            }
            modifier = {
                add = 999
                exists = this
                exists = character:107590 #el_cid
                this = character:107590 #el_cid
            }
            modifier = {
                add = 999
                exists = this
                exists = character:159012 #Cadwallon
                this = character:159012 #Cadwallon
            }
            modifier = {
                add = 999
                exists = this
                exists = character:ashina_03 #Tuwu
                this = character:ashina_03 #Tuwu
            }
            modifier = {
                add = 999
                exists = this
                exists = character:ashina_05 #Istemi
                this = character:ashina_05 #Istemi
            }
	}
	{
            modifier = {
                add = 999
                exists = this
                exists = character:200280 #Theodis
                this = character:200280 #Theodis
            }
            modifier = {
                add = 999
                exists = this
                exists = character:ashina_04 #Bumin
                this = character:ashina_04 #Bumin
            }
            modifier = {
                add = 999
                exists = this
                exists = character:waegmunding_2 #Beowulf
                this = character:waegmunding_2 #Beowulf
            }
	}
	{
            modifier = {
                add = 999
                exists = this
                exists = character:996002 #odoacer
                this = character:996002 #odoacer
            }
            modifier = {
                add = 999
                exists = this
                exists = character:992023 #Athalaric
                this = character:992023 #Athalaric
            }
            modifier = {
                add = 999
                exists = this
                exists = character:992063 #Fritigern
                this = character:992063 #Fritigern
            }
	}
	{
            modifier = {
                add = 999
                exists = this
                exists = character:900016 #Faramund
                this = character:900016 #Faramund
            }
		modifier = {
		add = 999
		exists = character:990006 #Attila
		this = character:990006 #Attila
	    }
            modifier = {
                add = 999
                exists = this
                exists = character:997012 #Childebert
                this = character:997012 #Childebert
            }
	}
	{
            modifier = {
                add = 999
                exists = this
                exists = character:vandals_012 #Gelimer
                this = character:vandals_012 #Gelimer
            }
            modifier = {
                add = 999
                exists = this
                exists = character:marshalnsc 
                this = character:marshalnsc 
            }
	}
	{
            modifier = {
                add = 999
				exists = this
				exists = character:168314 #waldrada
				this = character:168314 #waldrada
            }
            modifier = {
                add = 999
				exists = this
                exists = character:1183 #empress_bertha
                this = character:1183 #empress_bertha
            }
	}
	{
            modifier = {
                add = 999
				exists = this
			    exists = character:251187 #daurama_daura
			    this = character:251187 #daurama_daura
            }
	}
	{
             modifier = {
                add = 999
                exists = this
                exists = character:73683
                this = character:73683
            }
             modifier = {
                add = 999
                exists = this
                exists = character:vandals_003
                this = character:vandals_003
            }
	}
	{
             modifier = {
                add = 999
                exists = this
                exists = character:73759
                this = character:73759
            }
	}
	{
             modifier = {
                add = 999
				exists = this
				exists = character:73857
				this = character:73857
            }

            modifier = {
                add = 999
                exists = this
                exists = character:70292
                this = character:70292
            }
	}
	{
             modifier = {
                add = 999
                exists = this
                exists = character:73783
                this = character:73783
            }
	}
}

"common/casus_belli_types/TFE_event_wars.txt" = {
	{
independence_war_vandal = {
	icon = independence_faction_war
	group = event
	ai = no # AI targeting is handled through game_rule events.

	allow_hostages = no
	allowed_against_character = {
		OR = {
			scope:attacker = {
				liege = scope:defender
			}
			scope:attacker = {
				top_liege = scope:defender
			}
		}
	}

	cost = {
		piety = {
			value = 0
		}
		prestige = {
			value = 0
		}
	}

	on_declaration = {
		on_declared_war = yes
		# Remove offending HumSac modifiers.
		scope:attacker = {
			hidden_effect = { fp1_remove_humsac_offended_counties_effect = yes }
		}
		war = {
			every_war_attacker = {
				if = {
					limit = { 
						OR = {
							liege = title:k_africae.holder
							AND = {
								liege = {
									liege = scope:defender
								}
								NOT = {
									faith = liege.faith
								}
							}
						}
					}
					add_character_flag = should_become_independent
				}
			}
		}
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { # Desc for only one player attacker
					scope:attacker = {
						is_local_player = yes
					}
				}
				desc = independence_war_victory_desc_local_player_attacker_alone
			}
			triggered_desc = { # Desc for only one attacker, player defender
				trigger = {
					scope:defender = {
						is_local_player = yes
					}
				}
				desc = player_independence_war_victory_desc_local_player_defender_attacker_alone
			}
			desc = independence_war_victory_desc_local_player_attacker_alone # Desc for a third party involved
		}

	}

	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }

		#EP2 Accolade glory gain from winning against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_med_effect = yes }

		create_title_and_vassal_change = {
			type = independency
			save_scope_as = change
		}
		if = {
			# Free character with the flag
			limit = { exists = war }
			war = {
				every_war_attacker = {
					if = {
						limit = { has_character_flag = should_become_independent }

						create_title_and_vassal_change = {
							type = independency
							save_scope_as = going_independent
							add_claim_on_loss = no
						}
						becomes_independent = {
							change = scope:going_independent
						}

						resolve_title_and_vassal_change = scope:going_independent

						add_truce_both_ways = {
							character = scope:defender
							days = 1825
							war = root.war
							result = victory
						}

						remove_character_flag = should_become_independent

						change_liege_or_become_independent = {
							CHANGE = scope:change
							VASSAL = this
						}

						hidden_effect = {
							set_variable = {
								name = independence_war_former_liege
								value = scope:defender
							}

							save_scope_as = current_member

							# Struggle Catalyst
							if = {
								limit = {
									catalyst_gave_independence_to_powerful_diff_faith_culture_vassal_preliminary_trigger = {
										CHAR1 = scope:defender
										CHAR2 = scope:current_member
									}
									any_character_struggle = {
										involvement = involved
										activate_struggle_catalyst_secondary_character_involvement_involved_trigger = {
											CATALYST = catalyst_gave_independence_to_powerful_diff_faith_culture_vassal
											CHAR = scope:current_member
										}
									}
								}
								every_character_struggle = {
									involvement = involved
									limit = {
										activate_struggle_catalyst_secondary_character_involvement_either_trigger = {
											CATALYST = catalyst_gave_independence_to_powerful_diff_faith_culture_vassal
											CHAR = scope:current_member
										}
									}
									activate_struggle_catalyst = {
										catalyst = catalyst_gave_independence_to_powerful_diff_faith_culture_vassal
										character = scope:defender
									}
								}
							}
						}
					}
				}
			}
		}

		scope:defender = {
			# Struggle Catalyst
			hidden_effect = {
				if = {
					limit = {
						catalyst_gave_independence_to_powerful_diff_faith_culture_vassal_preliminary_trigger = {
							CHAR1 = scope:defender
							CHAR2 = scope:attacker
						}
						any_character_struggle = {
							involvement = involved
							activate_struggle_catalyst_secondary_character_involvement_involved_trigger = {
								CATALYST = catalyst_gave_independence_to_powerful_diff_faith_culture_vassal
								CHAR = scope:attacker
							}
						}
					}
					every_character_struggle = {
						involvement = involved
						limit = {
							activate_struggle_catalyst_secondary_character_involvement_either_trigger = {
								CATALYST = catalyst_gave_independence_to_powerful_diff_faith_culture_vassal
								CHAR = scope:attacker
							}
						}
						activate_struggle_catalyst = {
								catalyst = catalyst_gave_independence_to_powerful_diff_faith_culture_vassal
								character = scope:defender
							}
					}
				}
			}
		}

		resolve_title_and_vassal_change = scope:change

	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = player_independence_war_white_peace_defender_desc
			}
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
					}
				}
				desc = player_independence_war_white_peace_attacker_desc
			}
			desc = player_independence_war_white_peace_desc
		}

	}

	on_white_peace = {
		scope:attacker = {
			show_pow_release_message_effect = yes
			stress_impact = {
 				ambitious = medium_stress_impact_gain
 				arrogant = medium_stress_impact_gain
 			}
		}
		hidden_effect = {
			scope:attacker = {
				add_truce_both_ways = {
					character = scope:defender
					days = 1825
					war = root.war
					result = white_peace
				}
			}
		}

		scope:defender = {
			add_prestige = minor_prestige_value
			stress_impact = {
 				arrogant = medium_stress_impact_gain
 			}
		}
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = player_independence_defeat_defender_desc
			}
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
					}
				}
				desc = player_independence_defeat_attacker_desc
			}
			desc = player_independence_war_defeat_desc
		}

	}

	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }
		scope:defender = {
			add_dread = medium_dread_gain
			# Prestige for Defender
			add_prestige_war_defender_effect = {
				PRESTIGE_VALUE = medium_prestige_value
			}
		}

		if = {
			# Free character with the flag
			limit = { exists = war }
			war = {
				every_war_attacker = {
					save_scope_as = expelled_vandal
					if = {
						limit = { 
							has_character_flag = should_become_independent 
							NOT = { THIS = character:vandals_012 }
						}
						hard_imprison_character_effect = {
							TARGET = this
							IMPRISONER = scope:defender
						}
						scope:defender = {
							add_opinion = {
								target = prev
								modifier = vassal_lost_faction_revolt_war
							}
						}
					}
					if = {
						limit = {
							THIS = character:vandals_012
							title:c_cappadocia.holder = {
								is_ai = yes
							}
						}
						title:c_cappadocia = {
							save_temporary_scope_as = current_county
						}
						create_title_and_vassal_change = {
							type = usurped
							save_scope_as = change
							add_claim_on_loss = no
						}
						scope:current_county = {
							change_title_holder = {
								holder = character:vandals_012
								change = scope:change
								take_baronies = yes
							}
						}
						resolve_title_and_vassal_change = scope:change

						every_vassal = {
							add_to_list = vassals_to_defect
						}

						every_held_title = {
							limit = {
								NOT = { this = title:c_cappadocia }
							}
							add_to_list = titles_to_usurp
						}		

						create_title_and_vassal_change = {
							type = usurped
							save_scope_as = title_change
								add_claim_on_loss = no
						}
						every_in_list = {
							list = titles_to_usurp
							change_title_holder = {
								holder = title:k_africae.holder
								change = scope:title_change
								take_baronies = no
							}
						}
						every_in_list = {
							list = vassals_to_defect
							change_liege = {
								liege = title:k_africae.holder
								change = scope:title_change
							}
						}
						change_liege = {
							liege = title:k_africae.holder.top_liege
							change = scope:title_change
						}
						resolve_title_and_vassal_change = scope:title_change
						character:vandals_012 = {
							add_character_modifier = {
								modifier = peaceful_retirement
							}
							add_trait = content
							change_government = imperial_government
						}
					}
					else_if = {
						limit = {
							THIS = character:vandals_012
						}
						title:c_lower_galatia = {
							save_temporary_scope_as = current_county
						}
						create_title_and_vassal_change = {
							type = usurped
							save_scope_as = change
							add_claim_on_loss = no
						}
						scope:current_county = {
							change_title_holder = {
								holder = character:vandals_012
								change = scope:change
								take_baronies = yes
							}
						}
						resolve_title_and_vassal_change = scope:change

						every_vassal = {
							add_to_list = vassals_to_defect
						}

						every_held_title = {
							limit = {
								NOT = { this = title:c_lower_galatia }
							}
							add_to_list = titles_to_usurp
						}			
	
						create_title_and_vassal_change = {
							type = usurped
							save_scope_as = title_change
								add_claim_on_loss = no
						}
						every_in_list = {
							list = titles_to_usurp
							change_title_holder = {
								holder = title:k_africae.holder
								change = scope:title_change
								take_baronies = no
							}
						}
						every_in_list = {
							list = vassals_to_defect
							change_liege = {
								liege = title:k_africae.holder
								change = scope:title_change
							}
						}
						change_liege = {
							liege = title:k_africae.holder.top_liege
							change = scope:title_change
						}
						resolve_title_and_vassal_change = scope:title_change
						character:vandals_012 = {
							add_character_modifier = {
								modifier = peaceful_retirement
							}
							add_trait = content
							change_government = imperial_government
						}
					}
					if = {
						limit = {
							liege = title:k_africae.holder
							NOT = { THIS = character:vandals_012 }
						}
						save_scope_as = vandal_expel
						scope:defender.top_liege = {
							random_sub_realm_county = {
								limit = {
									kingdom = title:k_orientis
									holder = { 
										is_ai = yes
										realm_size > 1
										NOT = { 
											OR = {
												THIS = primary_title.title_capital_county
												THIS = primary_title.title_capital_county.de_jure_liege
											}
										}
									}
									NOT = {
										is_in_list = vandal_titles_to_usurp
									}
								}
								save_scope_as = county_expel
								add_to_list = vandal_titles_to_usurp

								#create_title_and_vassal_change = {
								#	type = usurped
								#	save_scope_as = change
								#	add_claim_on_loss = no
								#}
								#scope:county_expel = {
								#	change_title_holder = {
								#		holder = scope:expelled_vandal
								#		change = scope:change
								#		take_baronies = yes
								#	}
								#}
								#resolve_title_and_vassal_change = scope:change
							}
							scope:vandal_expel = {
								every_vassal = {
									add_to_list = vassals_to_defect
								}

								every_held_title = {
									limit = {
										NOT = { this = scope:county_expel }
									}
									add_to_list = titles_to_usurp
								}			
	
								create_title_and_vassal_change = {
									type = usurped
									save_scope_as = title_change
									add_claim_on_loss = no
								}
								every_in_list = {
									list = titles_to_usurp
									change_title_holder = {
										holder = title:k_africae.holder
										change = scope:title_change
										take_baronies = no
									}
								}
								every_in_list = {
									list = vassals_to_defect
									change_liege = {
										liege = title:k_africae.holder
										change = scope:title_change
									}
								}
								change_liege = {
									liege = title:k_africae.holder.top_liege
									change = scope:title_change
								}
								resolve_title_and_vassal_change = scope:title_change
							}
							if = {
								limit = {
									scope:vandal_expel = {
										is_landed = no
									}
									character:vandals_012 = {
										is_alive = yes
										is_landed = yes
									}
								}
								character:vandals_012 = {
									add_courtier = scope:vandal_expel
								}
							}
						}
					}
				}
			}
		}
		add_culture_minority_effect = {
			CULTURE = culture:vandal
			SIZE = small
			COUNTY = title:c_upper_khabur
		}
		add_culture_minority_effect = {
			CULTURE = culture:vandal
			SIZE = small
			COUNTY = title:c_amida
		}
		add_culture_minority_effect = {
			CULTURE = culture:vandal
			SIZE = small
			COUNTY = title:c_tall_basma
		}
	}

	on_invalidated_desc = msg_invalidate_war_title

	check_defender_inheritance_validity = no

	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	transfer_behavior = transfer

	war_name = "INDEPENDENCE_WAR_NAME"

	interface_priority = 120

	attacker_wargoal_percentage = 0.8

	max_attacker_score_from_battles = 100
	max_defender_score_from_battles = 50
	
	max_defender_score_from_occupation = 150
	max_attacker_score_from_occupation = 150

	max_ai_diplo_distance_to_title = 500
}
	}
	{
cb_gothic_wars = {
	group = event

	allowed_for_character = {
	}

	allowed_against_character = {
		scope:attacker = {
			ALL_FALSE = {
				top_liege = scope:defender.top_liege
				liege = scope:defender
			}
		}
	}

	
	target_titles = neighbor_land
	target_title_tier = county
	ignore_effect = change_title_holder
	should_show_war_goal_subview = yes
	combine_into_one = yes
	ai_only_against_neighbors = yes
	mutually_exclusive_titles = { always = yes }

	valid_to_start = {
		always = no
	}

	should_invalidate = {
		NOT = {
			any_in_list = {
				list = target_titles
				any_in_de_jure_hierarchy = {
					tier = tier_county
					holder = {
						OR = {
							this = scope:defender
							target_is_liege_or_above = scope:defender
						}
					}
				}
			}
		}
	}

	on_invalidated_desc = msg_religious_war_invalidation_region_message

	on_invalidated = {
	}

	cost = {
	}

	on_declaration = {
		on_declared_war = yes
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = gothic_wars_victory_desc_attacker
			}
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = gothic_wars_victory_desc_defender
			}
			desc = gothic_wars_victory_desc
		}
	}

	on_victory = {
        #EP2 accolade glory gain for winning against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_high_effect = yes }
		scope:defender = {
			pay_long_term_gold = {
				target = scope:attacker
				gold = grand_raid_gold
			}
			add_prestige = -1000
		}
		scope:attacker = {
			add_prestige = grand_raid_gold
			dynasty = {
				add_dynasty_prestige = 300
			}
			trigger_event = {
				id = gothic_wars.0002
				days = 1
			}
		}
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = gothic_wars_white_peace_desc_attacker
			}
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = gothic_wars_white_peace_desc_defender
			}
			desc = gothic_wars_white_peace_desc
		}
	}

	on_white_peace = {
        #EP2 accolade glory gain for doing ok against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_low_effect = yes }
		scope:defender = { accolade_defender_war_end_glory_gain_med_effect = yes }
		scope:attacker = {
		add_prestige = {
			value = minor_prestige_value
			multiply = -1.0
		}
		stress_impact = {
			ambitious = medium_stress_impact_gain
			arrogant = medium_stress_impact_gain
		}
		}
		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = medium_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = medium_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		scope:defender = {
			remove_variable = realm_size
			stress_impact = {
				arrogant = medium_stress_impact_gain
			}
		}

		add_truce_white_peace_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = gothic_wars_defeat_desc_attacker
			}
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = gothic_wars_defeat_desc_defender
			}
			desc = gothic_wars_defeat_desc
		}
	}

	on_defeat = {
        #EP2 accolade glory gain for winning against higher ranked enemy
		scope:defender = { accolade_attacker_war_end_glory_gain_high_effect = yes }
		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			save_temporary_scope_as = loser
			pay_short_term_gold_reparations_effect = {
				GOLD_VALUE = 5
			}
			add_prestige = {
				value = major_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for Defender
		scope:defender = {
			remove_variable = realm_size
			add_prestige_war_defender_effect = {
				PRESTIGE_VALUE = major_prestige_value
			}
		}

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = medium_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = medium_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		add_truce_attacker_defeat_effect = yes
		on_lost_aggression_war_discontent_loss = yes
	}

	transfer_behavior = transfer

	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	attacker_score_from_battles_scale = 200                # War Score from battles won by the Attacker is modified by this value
    defender_score_from_battles_scale = 200                # War Score from battles won by the Defender is modified by this value
    max_attacker_score_from_battles = 100                # How much War Score the Attacker can gain from battles in total
    max_defender_score_from_battles = 100                # How much War Score the Defender can gain from battles in total

	max_defender_score_from_occupation = 50
	full_occupation_by_defender_gives_victory = no

	war_name = GOTHIC_WARS_NAME
	war_name_base = GRAND_RAID_WAR_NAME_BASE
	cb_name = GRAND_RAID_CB

	interface_priority = 100
}
	}
	{
radagaisus_invasion_cb = {
	group = event

	allowed_for_character = {
	}

	allowed_against_character = {
		scope:attacker = {
			ALL_FALSE = {
				top_liege = scope:defender.top_liege
				liege = scope:defender
			}
		}
	}

	combine_into_one = yes

	target_titles = none
	target_title_tier = all
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder
	ai_only_against_neighbors = yes
	defender_ticking_warscore_delay = { years = 2 }

	white_peace_possible = no

	valid_to_start = {
		always = no
	}

	should_invalidate = {
		NOT = {
			any_in_list = {
				list = target_titles
				any_in_de_jure_hierarchy = {
					tier = tier_county
					holder = {
						OR = {
							this = scope:defender
							target_is_liege_or_above = scope:defender
						}
					}
				}
			}
		}
	}

	on_invalidated_desc = msg_religious_war_invalidation_region_message

	on_invalidated = {
	}

	cost = {
	}

	on_declaration = {
		on_declared_war = yes
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = radagaisus_invasion_victory_desc_attacker
			}
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = radagaisus_invasion_victory_desc_defender
			}
			desc = radagaisus_invasion_victory_desc
		}
	}

	on_victory = {
        #EP2 accolade glory gain for winning against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_high_effect = yes }
		scope:attacker = { show_pow_release_message_effect = yes }
		scope:defender = {
			trigger_event = {
				id = gothic_wars.0014
				days = 1
			}
		}

		create_title_and_vassal_change = {
			type = conquest_holy_war
			save_scope_as = change
			add_claim_on_loss = yes
		}
		# go through the dejure hierarchy under target titles, transfer titles with same or worse tolerance holders (their religion equaly or less tolerated than the defender's),
		# take the holder as vassal otherwise and don't go deeper
		every_in_list = {
			list = target_titles
			custom_tooltip = RELIGIOUS_CB_TITLE

			conquest_cb_title_transfer = {
				RELIGIOUS_WAR = yes
			}
		}

		every_in_list = {
			list = vassals_taken
			change_liege = {
				liege = scope:attacker
				change = scope:change
			}
		}
		
		every_in_list = {
			list = titles_taken
			change_title_holder = {
				holder = scope:attacker
				change = scope:change
				take_baronies = yes
			}
		}

		resolve_title_and_vassal_change = scope:change

		# Prestige Progress for the Attacker
		every_in_list = {
			list = target_titles
			scope:attacker = {
				add_prestige_experience = medium_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker
			FAME_BASE = medium_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable)
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = radagaisus_invasion_white_peace_desc_attacker
			}
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = radagaisus_invasion_white_peace_desc_defender
			}
			desc = radagaisus_invasion_white_peace_desc
		}
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = radagaisus_invasion_defeat_desc_attacker
			}
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = radagaisus_invasion_defeat_desc_defender
			}
			desc = radagaisus_invasion_defeat_desc
		}
	}

	on_defeat = {
        #EP2 accolade glory gain for winning against higher ranked enemy
		scope:defender = { accolade_attacker_war_end_glory_gain_high_effect = yes }
		scope:attacker = { show_pow_release_message_effect = yes }

		if = {
			limit = {
				exists = title:k_visigoths.holder
			}
			goths_flee_effect = yes
		}

		# Prestige loss for the attacker
		scope:attacker = {
			save_temporary_scope_as = loser
			pay_short_term_gold_reparations_effect = {
				GOLD_VALUE = 5
			}
			add_prestige = {
				value = major_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for Defender
		scope:defender = {
			add_prestige_war_defender_effect = {
				PRESTIGE_VALUE = major_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:defender
			FAME_BASE = medium_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		lost_radagaisus_invasion_effect = yes

		add_truce_attacker_defeat_effect = yes
		on_lost_aggression_war_discontent_loss = yes
	}

	transfer_behavior = transfer

	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = RADAGAISUS_INVASION_NAME
	war_name_base = RADAGAISUS_INVASION_NAME_BASE
	cb_name = RADAGAISUS_INVASION_CB_NAME

	use_de_jure_wargoal_only = yes
	
	interface_priority = 100
}
	}
	{
cb_gothic_wars_amalasuntha = {
	group = event
	#white_peace_possible = no 

	allowed_for_character = {
	}

	allowed_against_character = {
	}

	target_titles = none
	target_title_tier = all
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder
	ai_only_against_neighbors = yes

	valid_to_start = {
		always = no
	}

	should_invalidate = {
		scope:defender = {
			is_independent_ruler = no
		}
	}

	on_invalidated_desc = msg_religious_war_invalidation_region_message

	on_invalidated = {
	}

	cost = {
	}

	on_declaration = {
		on_declared_war = yes
		set_global_variable = {
			name = gothic_war_declared
			value = yes
		}
		scope:attacker = {
			spawn_army = {
				name = "Ostrogothic Defenders"
				levies = 750
				men_at_arms = {
					type = light_footmen
					stacks = 3
				}
				men_at_arms = {
					type = bowmen
					stacks = 2
				}
				men_at_arms = {
					type = light_horsemen
					stacks = 2
				}
				war = scope:war
				location = capital_province
			}
			every_vassal = {
				limit = {
					is_greek_or_roman = no
					is_ai = yes
				}
				save_scope_as = join_attacker
				scope:war = {
					add_attacker = scope:join_attacker
				}
			}
		}
	}

	#This is necessary for error log -- this should never happen
	on_white_peace_desc = {
		desc = cb_gothic_wars_amalasuntha_white_peace_desc
	}

	on_white_peace = {
		scope:attacker = {
			show_pow_release_message_effect = yes
			stress_impact = {
 				ambitious = medium_stress_impact_gain
 				arrogant = medium_stress_impact_gain
 			}
		}

		#EP2 accolade glory gain for defender doing alright
		scope:defender = { accolade_defender_war_end_glory_gain_low_effect = yes }

		# Defender neither gains nor loses any prestige.
		scope:defender = {
			stress_impact = {
 				arrogant = medium_stress_impact_gain
 			}
		}

		# Truce
		add_truce_white_peace_effect = yes
		if = {
			limit = {
				NOT = { exists = global_var:belisarius_betrayal_white_peace }
			}
		
		scope:attacker = {
			every_held_title = {
				limit = {
					tier = tier_county
					duchy = title:d_sicily
				}
				create_title_and_vassal_change = {
					type = granted
					save_scope_as = change
					add_claim_on_loss = no
				}
				change_title_holder_include_vassals = {
					holder = scope:defender
					change = scope:change
				}
				resolve_title_and_vassal_change = scope:change
			}
			every_vassal = {
				limit = {
					capital_county = {
						duchy = title:d_sicily
					}
				}
				create_title_and_vassal_change = {
					type = granted
					save_scope_as = change
					add_claim_on_loss = no
				}
				change_liege = {
					liege = scope:defender
					change = scope:change
				}
				resolve_title_and_vassal_change = scope:change
			}
		}

		if = {
			limit = {
				exists = title:e_byzantium.holder
				scope:defender = {
					NOT = { top_liege = title:e_byzantium.holder }
				}
			}
			create_title_and_vassal_change = {
				type = swear_fealty
				save_scope_as = change
				add_claim_on_loss = no
			}
			scope:defender = {
				change_liege = {
					liege = title:e_byzantium.holder
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
		}

		}

	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = cb_gothic_wars_amalasuntha_victory_desc_attacker
			}
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = cb_gothic_wars_amalasuntha_defeat_desc_defender
			}
			desc = cb_gothic_wars_amalasuntha_victory_desc
		}
	}

	on_victory = {
        #EP2 accolade glory gain for winning against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_high_effect = yes }
		#scope:attacker = { destroy_title = title:k_thracian_goths }
		scope:attacker = { show_pow_release_message_effect = yes }
		
		scope:defender = {
			every_vassal = {
				add_to_list = vassals_to_defect
			}
		}

		scope:defender = {
			every_held_title = {
				add_to_list = titles_to_usurp
			}
		}

		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = title_change
			add_claim_on_loss = no
		}
		every_in_list = {
			list = titles_to_usurp
			change_title_holder = {
				holder = scope:attacker
				change = scope:title_change
				take_baronies = no
			}
		}
		every_in_list = {
			list = vassals_to_defect
			change_liege = {
				liege = scope:attacker
				change = scope:title_change
			}
		}
		resolve_title_and_vassal_change = scope:title_change

		# Prestige Progress for the Attacker
		every_in_list = {
			list = target_titles
			scope:attacker = {
				add_prestige_experience = medium_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker
			FAME_BASE = medium_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		scope:attacker = {
			imprison = {
				target = scope:defender
				type = house_arrest
			}
		}

		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = cb_gothic_wars_amalasuntha_victory_desc_defender
			}
			triggered_desc = {
				trigger = {	scope:attacker = { is_local_player = yes } }
				desc = cb_gothic_wars_amalasuntha_defeat_desc_attacker
			}
			desc = cb_gothic_wars_amalasuntha_defeat_desc
		}
	}

	on_defeat = {
        #EP2 accolade glory gain for winning against higher ranked enemy
		scope:defender = { accolade_attacker_war_end_glory_gain_high_effect = yes }
		#scope:defender = { destroy_title = title:k_ostrogoths }
		scope:defender = { show_pow_release_message_effect = yes }
		
		scope:attacker = {
			every_vassal = {
				add_to_list = vassals_to_defect
			}
		}

		scope:attacker = {
			every_held_title = {
				add_to_list = titles_to_usurp
			}
		}

		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = title_change
			add_claim_on_loss = no
		}
		every_in_list = {
			list = titles_to_usurp
			change_title_holder = {
				holder = scope:defender
				change = scope:title_change
				take_baronies = no
			}
		}
		every_in_list = {
			list = vassals_to_defect
			change_liege = {
				liege = scope:defender
				change = scope:title_change
			}
		}
		resolve_title_and_vassal_change = scope:title_change

		# Prestige Progress for the Defender
		every_in_list = {
			list = target_titles
			scope:defender = {
				add_prestige_experience = medium_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:defender
			FAME_BASE = medium_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		scope:defender = {
			imprison = {
				target = scope:attacker
				type = house_arrest
			}
		}

		if = {
			limit = {
				exists = title:e_byzantium.holder
				scope:defender = {
					NOT = { top_liege = title:e_byzantium.holder }
				}
			}
			create_title_and_vassal_change = {
				type = swear_fealty
				save_scope_as = change
				add_claim_on_loss = no
			}
			scope:defender = {
				change_liege = {
					liege = title:e_byzantium.holder
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
			title:e_byzantium.holder = {
				trigger_event = {
					id = western_roman.0062
					days = 1
				}
			}
		}

		if = {
			limit = {
				exists = title:k_ostrogoths.holder
				scope:defender = title:k_ostrogoths.holder
			}
			scope:defender = { destroy_title = title:k_ostrogoths }
		}

		# Truce
		add_truce_attacker_defeat_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:defender = { fp1_remember_recent_conquest_victory_effect = yes }
	}

	transfer_behavior = transfer

	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = cb_gothic_wars_amalasuntha_NAME
	war_name_base = cb_gothic_wars_amalasuntha_NAME_BASE
	cb_name = cb_gothic_wars_amalasuntha_NAME

	interface_priority = 79

	use_de_jure_wargoal_only = yes

	attacker_score_from_battles_scale = 50                # War Score from battles won by the Attacker is modified by this value
    defender_score_from_battles_scale = 50                # War Score from battles won by the Defender is modified by this value
    max_attacker_score_from_battles = 100                # How much War Score the Attacker can gain from battles in total
    max_defender_score_from_battles = 50                # How much War Score the Defender can gain from battles in total
	attacker_score_from_occupation_scale = 25
	defender_score_from_occupation_scale = 25

	max_ai_diplo_distance_to_title = 500
}
	}
	{
vandalic_war_cb = {
	group = event
	white_peace_possible = no
	# Root is the title
	# scope:claimant is the claimant
	# scope:attacker is the attacker
	# scope:defender is the defender

	target_titles = claim
	#target_title_tier = all

	on_declaration = {
		on_declared_war = yes
		scope:attacker = {
			capital_county = {
				add_county_modifier = { modifier = roman_camps years = 5 }
			}
			spawn_army = {
				name = "Roman Vanguard"
				levies = 1000
				men_at_arms = {
					type = cataphract
					stacks = 2
				}
				men_at_arms = {
					type = bowmen
					stacks = 1
				}
				men_at_arms = {
					type = palatinae
					stacks = 1
				}
				men_at_arms = {
					type = comitatenses
					stacks = 1
				}
				men_at_arms = {
					type = scorpio
					stacks = 2
				}
				location = province:4578 #Mahdiya
				uses_supply = no
				inheritable = yes
			}
			spawn_army = {
				name = "Roman Vanguard"
				levies = 600
				men_at_arms = {
					type = cataphract
					stacks = 2
				}
				men_at_arms = {
					type = bowmen
					stacks = 1
				}
				men_at_arms = {
					type = palatinae
					stacks = 1
				}
				men_at_arms = {
					type = comitatenses
					stacks = 1
				}
				men_at_arms = {
					type = scorpio
					stacks = 2
				}
				location = province:4578 #Mahdiya
				uses_supply = no
				inheritable = yes
				war = scope:war
			}
			spawn_army = {
				name = "Roman Vanguard"
				levies = 600
				men_at_arms = {
					type = cataphract
					stacks = 2
				}
				men_at_arms = {
					type = bowmen
					stacks = 1
				}
				men_at_arms = {
					type = palatinae
					stacks = 1
				}
				men_at_arms = {
					type = comitatenses
					stacks = 1
				}
				men_at_arms = {
					type = scorpio
					stacks = 2
				}
				location = province:4578 #Mahdiya
				uses_supply = no
				inheritable = yes
				war = scope:war
			}
			if = {
				limit = {
					character:armenian_02 = {
						is_alive = yes
					}
				}
				add_courtier = character:armenian_02
			}
		}
		scope:defender = {
			if = {
				limit = {
					global_var:hildirix ?= {
						is_alive = yes
					}
				}
				trigger_event = {
					id = western_roman.0040
					days = 1
				}
			}
		}
		if = {
			limit = {
				title:c_tunis.holder = scope:defender
			}
			title:c_tunis = {
				add_county_modifier = { modifier = surprise_attack years = 2 }
			}
		}
		#scope:attacker = {
		#	trigger_event = {
		#		id = TFE_flavour_events.0051
		#		days = 1
		#	}
		#}
	}	

	should_invalidate = {
		scope:defender = {
			is_independent_ruler = no
		}
	}

	on_invalidated_desc = msg_subjugation_war_invalidated_message
	
	on_invalidated = {
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:claimant = { is_local_player = yes }
				}
				desc = claim_cb_victory_desc_attacker_claimant
			}
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = claim_cb_victory_desc_attacker
			}
			desc = claim_cb_victory_desc
		}
	}

	on_victory = {
		scope:defender = {
			every_held_title = {
				limit = {
					tier >= tier_kingdom
					NOT = { this = title:k_vandals }
				}
				scope:defender = { destroy_title = prev }
			}
			every_held_title = {
				limit = {
					tier = tier_duchy
					NOT = { this = title:d_tunis }
				}
				scope:defender = { destroy_title = prev }
			}
		}
		scope:attacker = {
			top_liege = {
				save_scope_as = victor
				every_vassal = {
					add_opinion = {
						modifier = respect_opinion
						target = scope:victor
						opinion = 20
					}
				}
			}
		}
		title:c_mahdiya = {
			remove_county_modifier = roman_camps
		}
		title:c_tunis = {
			remove_county_modifier = surprise_attack
		}
        #EP2 accolade glory gain for winning against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_high_effect = yes }
		scope:attacker = { show_pow_release_message_effect = yes }
		scope:attacker = {
			if = {
				limit = {
					OR = {
						top_liege = {
							has_title = title:e_byzantium
						}
						top_liege = {
							has_title = title:e_roman_empire
						}
					}
				}
				custom_tooltip = vandalic_war_end_effect
				top_liege = {
				trigger_event = {
					id = western_roman.0041
					days = 1
				}
				}
			}
		}

		create_title_and_vassal_change = {
			type = conquest_claim
			save_scope_as = change
			add_claim_on_loss = yes
		}
		# Create a claim CB which is executed to handle title/vassal changes, in addition to being used to calculate Prestige awards for war participants.
		setup_claim_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			claimant = scope:claimant
			change = scope:change
		}

		resolve_title_and_vassal_change = scope:change

		if = {
			limit = {
				NOT = { scope:claimant = scope:attacker }
				scope:claimant.primary_title.tier < scope:attacker.primary_title.tier
				scope:claimant = {
					NOT = { target_is_liege_or_above = scope:attacker }
				}
			}

			create_title_and_vassal_change = {
				type = conquest_claim
				save_scope_as = change_two
				add_claim_on_loss = yes
			}
			scope:claimant = {
				change_liege = {
					liege = scope:attacker
					change = scope:change_two
				}
			}
			resolve_title_and_vassal_change = scope:change_two
		}

		if = {
			limit = {
				NOT = { scope:claimant = scope:attacker }
				scope:attacker = {
					can_add_hook = {
					  	type = favor_hook
					  	target = scope:claimant
					}
				}
			}
			scope:attacker = {
				add_hook = {
		  			target = scope:claimant
		  			type = favor_hook
		 		}
			}
		}
		if = {
			limit = {
				scope:defender = {
					highest_held_title_tier >= tier_kingdom
				}
			}
			create_title_and_vassal_change = {
				type = conquest
				save_scope_as = changethree
				add_claim_on_loss = yes
			}
			scope:defender = {
				every_held_title = {
					limit = {
						tier >= tier_kingdom
					}
					change_title_holder_include_vassals = {
						holder = scope:attacker
						change = scope:changethree
					}
				}
			}
			resolve_title_and_vassal_change = scope:changethree
		}
		if = {
			limit = {
				scope:defender = {
					is_independent_ruler = yes
					is_landed = yes
				}
			}
			create_title_and_vassal_change = {
				type = swear_fealty
				save_scope_as = changev
				add_claim_on_loss = no
			}
			scope:defender = {
				change_liege = {
					liege = scope:attacker
					change = scope:changev
				}
			}
			resolve_title_and_vassal_change = scope:changev
		}
		resolve_title_and_vassal_change = scope:change
		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }
		# Shift dejure under Italia to the Ostrogoths
		#title:k_italy = {
		#	every_in_de_jure_hierarchy = {
		#		limit = {
		#			tier = tier_duchy
		#		}
		#		set_de_jure_liege_title = scope:attacker.primary_title
		#	}
		#}

		#scope:attacker = {
		#	imprison = {
		#		target = scope:defender
		#		type = house_arrest
		#	}
		#}
		if = {
			limit = {
				global_var:hildirix = {
					is_alive = yes
				}
			}
			global_var:hildirix ?= { release_from_prison = yes }
			global_var:hildirix ?= { remove_character_flag = is_being_tortured }
		}
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = claim_cb_white_peace_desc_defender
			}
			desc = claim_cb_white_peace_desc
		}
		
	}

	on_white_peace = {
        #EP2 accolade glory gain for doing ok against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_low_effect = yes }
		scope:defender = { accolade_defender_war_end_glory_gain_med_effect = yes }
		scope:attacker = {
			show_pow_release_message_effect = yes
			stress_impact = {
 				ambitious = medium_stress_impact_gain
 				arrogant = medium_stress_impact_gain
 			}
		}

		# press claims
		every_in_list = {
			list = target_titles
			if = {
				limit = { scope:claimant = { has_weak_claim_on = prev } }
				scope:claimant = {
					make_claim_strong = prev
				}
			}
		}
		# Prestige loss for the attacker
		scope:attacker = {
			stress_impact = {
				arrogant = medium_stress_impact_gain
			}
		}
		# Defender neither gains nor loses any prestige.
		scope:defender = {
			stress_impact = {
 				arrogant = medium_stress_impact_gain
 			}
		}

		if = {
			limit = {
				NOT = { scope:claimant = scope:attacker }
				scope:attacker = {
					can_add_hook = {
					  	type = favor_hook
					  	target = scope:claimant
					}
				}
			}
			scope:attacker = {
				add_hook = {
		  			target = scope:claimant
		  			type = favor_hook
		 		}
			}
		}

		# Truce
		add_truce_white_peace_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = claim_cb_defeat_desc_defender
			}
			triggered_desc = {
				trigger = { scope:claimant = { is_local_player = yes } }
				desc = claim_cb_defeat_desc_attacker_claimant
			}
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = claim_cb_defeat_desc_attacker
			}
			desc = claim_cb_defeat_desc
		}
		
	}

	on_defeat = {
        #EP2 accolade glory gain for winning against higher ranked enemy
		scope:defender = { accolade_attacker_war_end_glory_gain_high_effect = yes }
		scope:attacker = { show_pow_release_message_effect = yes }

		title:c_mahdiya = {
			remove_county_modifier = roman_camps
		}
		title:c_tunis = {
			remove_county_modifier = surprise_attack
		}

		title:c_kran = {
			save_temporary_scope_as = current_county
		}
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:current_county = {
			change_title_holder = {
				holder = scope:attacker
				change = scope:change
				take_baronies = yes
			}
		}
		resolve_title_and_vassal_change = scope:change

		title:c_beroe = {
			save_temporary_scope_as = current_county
		}
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:current_county = {
			change_title_holder = {
				holder = scope:attacker
				change = scope:change
				take_baronies = yes
			}
		}
		resolve_title_and_vassal_change = scope:change

		title:c_burgas = {
			save_temporary_scope_as = current_county
		}
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:current_county = {
			change_title_holder = {
				holder = scope:attacker
				change = scope:change
				take_baronies = yes
			}
		}
		resolve_title_and_vassal_change = scope:change

		title:c_adrianopolis = {
			save_temporary_scope_as = current_county
		}
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:current_county = {
			change_title_holder = {
				holder = scope:attacker
				change = scope:change
				take_baronies = yes
			}
		}
		resolve_title_and_vassal_change = scope:change

		title:d_adrianopolis = {
			save_temporary_scope_as = current_county
		}
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:current_county = {
			change_title_holder = {
				holder = scope:attacker
				change = scope:change
				take_baronies = yes
			}
		}
		resolve_title_and_vassal_change = scope:change

		title:c_mahdiya = {
			save_temporary_scope_as = current_county
		}
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:current_county = {
			change_title_holder = {
				holder = scope:defender
				change = scope:change
				take_baronies = yes
			}
		}
		resolve_title_and_vassal_change = scope:change

		#title:e_byzantium.holder = {
		#	add_courtier = scope:attacker
		#}

		if = {
			limit = {
				NOT = { scope:claimant = scope:attacker }
				scope:attacker = {
					can_add_hook = {
					  	type = favor_hook
					  	target = scope:claimant
					}
				}
			}
			scope:attacker = {
				add_hook = {
		  			target = scope:claimant
		  			type = favor_hook
		 		}
			}
		}

		# Attacker pays gold to the defender as reparations.
		scope:attacker = {
			pay_short_term_gold_reparations_effect = {
				GOLD_VALUE = 3
			}
		}

		# Truce
		add_truce_attacker_defeat_effect = yes

		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes
	}

	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit

	transfer_behavior = transfer

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = VANDALIC_WAR_NAME
	war_name_base = VANDALIC_WAR_NAME_BASE
	cb_name = VANDALIC_CB_NAME
	interface_priority = 60

	attacker_score_from_battles_scale = 200                # War Score from battles won by the Attacker is modified by this value
    defender_score_from_battles_scale = 200                # War Score from battles won by the Defender is modified by this value
    max_attacker_score_from_battles = 100                # How much War Score the Attacker can gain from battles in total
    max_defender_score_from_battles = 100                # How much War Score the Defender can gain from battles in total

	max_defender_score_from_occupation = 50
	full_occupation_by_defender_gives_victory = no

	should_show_war_goal_subview = yes

	attacker_wargoal_percentage = 0.8

	max_ai_diplo_distance_to_title = 1000
}
	}

	# k_juteland not in TFE as of the 'After the Pharaohs' update
	{
								this = title:k_juteland
	}
	{
							this = title:k_juteland
	}
}

"common/casus_belli_types/TFE_event_wars_overflow.txt" = {
	{
gothic_war_regular_cb = {
	group = event
	white_peace_possible = yes
	# Root is the title
	# scope:claimant is the claimant
	# scope:attacker is the attacker
	# scope:defender is the defender

	target_titles = claim
	#target_title_tier = all

	on_declaration = {
		on_declared_war = yes
		struggle:italian_struggle = {
            activate_struggle_catalyst = {
                catalyst = catalyst_TFE_major_historical_event_devastation
                character = scope:attacker
            }
        }
		set_global_variable = {
			name = gothic_war_declared
			value = yes
		}
		if = {
			limit = {
				exists = global_var:gothic_attacker_1
				global_var:gothic_attacker_1 = {
					is_alive = yes
					is_landed = yes
				}
			}
			global_var:gothic_attacker_1 = {
				trigger_event = {
					id = germanic_events.0027
					days = 1
				}
			}
		}
		if = {
			limit = {
				exists = global_var:gothic_attacker_2
			}
			global_var:gothic_attacker_2 = {
				trigger_event = {
					id = germanic_events.0027
					days = 1
				}
			}
		}
		every_vassal_or_below = {
			limit = {
				any_sub_realm_county = {
					tier = tier_county
					duchy = title:d_sicily
				}
			}
			save_scope_as = add_attacker_this
			scope:add_attacker_this = {
				trigger_event = {
					id = germanic_events.0027
					days = 1
				}
			}
		}
	}	

	should_invalidate = {
		scope:defender = {
			is_independent_ruler = no
		}
	}

	on_invalidated_desc = msg_subjugation_war_invalidated_message
	
	on_invalidated = {
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:claimant = { is_local_player = yes }
				}
				desc = claim_cb_victory_desc_attacker_claimant
			}
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = claim_cb_victory_desc_attacker
			}
			desc = claim_cb_victory_desc
		}
	}

	on_victory = {
		title:c_trapani = {
			remove_county_modifier = roman_camps
		}
		scope:defender = {
			every_held_title = {
				limit = {
					tier >= tier_kingdom
					NOT = { this = title:k_italy }
					NOT = { this = title:k_croatia }
				}
				scope:defender = { destroy_title = prev }
			}
		}
		scope:attacker = {
			top_liege = {
				save_scope_as = victor
				every_vassal = {
					add_opinion = {
						modifier = respect_opinion
						target = scope:victor
						opinion = 20
					}
				}
			}
		}
        #EP2 accolade glory gain for winning against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_high_effect = yes }
		scope:attacker = { show_pow_release_message_effect = yes }
		scope:attacker = {
			if = {
				limit = {
					OR = {
						top_liege = {
							has_title = title:e_byzantium
						}
						top_liege = {
							has_title = title:e_roman_empire
						}
					}
				}
				custom_tooltip = gothic_war_end_effect
				top_liege = {
				trigger_event = {
					id = western_roman.0062
					days = 1
				}
				}
			}
		}

		create_title_and_vassal_change = {
			type = conquest_claim
			save_scope_as = change
			add_claim_on_loss = yes
		}
		# Create a claim CB which is executed to handle title/vassal changes, in addition to being used to calculate Prestige awards for war participants.
		setup_claim_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			claimant = scope:claimant
			change = scope:change
		}

		resolve_title_and_vassal_change = scope:change

		if = {
			limit = {
				NOT = { scope:claimant = scope:attacker }
				scope:claimant.primary_title.tier < scope:attacker.primary_title.tier
				scope:claimant = {
					NOT = { target_is_liege_or_above = scope:attacker }
				}
			}

			create_title_and_vassal_change = {
				type = conquest_claim
				save_scope_as = change_two
				add_claim_on_loss = yes
			}
			scope:claimant = {
				change_liege = {
					liege = scope:attacker
					change = scope:change_two
				}
			}
			resolve_title_and_vassal_change = scope:change_two
		}

		if = {
			limit = {
				NOT = { scope:claimant = scope:attacker }
				scope:attacker = {
					can_add_hook = {
					  	type = favor_hook
					  	target = scope:claimant
					}
				}
			}
			scope:attacker = {
				add_hook = {
		  			target = scope:claimant
		  			type = favor_hook
		 		}
			}
		}
		if = {
			limit = {
				scope:defender = {
					highest_held_title_tier >= tier_kingdom
				}
			}
			create_title_and_vassal_change = {
				type = conquest
				save_scope_as = changethree
				add_claim_on_loss = yes
			}
			scope:defender = {
				every_held_title = {
					limit = {
						tier >= tier_kingdom
					}
					change_title_holder_include_vassals = {
						holder = scope:attacker
						change = scope:changethree
					}
				}
			}
			resolve_title_and_vassal_change = scope:changethree
		}
		if = {
			limit = {
				scope:defender = {
					is_independent_ruler = yes
					is_landed = yes
				}
			}
			create_title_and_vassal_change = {
				type = swear_fealty
				save_scope_as = changev
				add_claim_on_loss = no
			}
			scope:defender = {
				change_liege = {
					liege = scope:attacker
					change = scope:changev
				}
			}
			resolve_title_and_vassal_change = scope:changev
		}
		resolve_title_and_vassal_change = scope:change
		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }
		# Shift dejure under Italia to the Ostrogoths
		#title:k_italy = {
		#	every_in_de_jure_hierarchy = {
		#		limit = {
		#			tier = tier_duchy
		#		}
		#		set_de_jure_liege_title = scope:attacker.primary_title
		#	}
		#}

		#scope:attacker = {
		#	imprison = {
		#		target = scope:defender
		#		type = house_arrest
		#	}
		#}
		#if = {
		#	limit = {
		#		character:992020 = {
		#			is_alive = yes
		#			is_imprisoned = yes
		#		}
		#	}
		#	character:992020 = { release_from_prison = yes }
		#}
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = claim_cb_white_peace_desc_defender
			}
			desc = claim_cb_white_peace_desc
		}
		
	}

	on_white_peace = {
        #EP2 accolade glory gain for doing ok against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_low_effect = yes }
		scope:defender = { accolade_defender_war_end_glory_gain_med_effect = yes }
		scope:attacker = {
			show_pow_release_message_effect = yes
			stress_impact = {
 				ambitious = medium_stress_impact_gain
 				arrogant = medium_stress_impact_gain
 			}
		}

		if = {
			limit = {
				NOT = { exists = global_var:belisarius_betrayal_white_peace }
			}

		scope:defender = {
			every_sub_realm_county = {
				limit = {
					OR = {
						title_province = {
							geographical_region = TFE_south_po_river_region
						}
						title_province = {
							geographical_region = illyricum_pannoniae_diocese_region
						}
					}
				}
				save_scope_as = checkcounty
				if = {
					limit = {
						OR = {
							scope:checkcounty.holder = scope:defender
							AND = {
								scope:checkcounty.holder.liege = scope:defender
								NOT = {
									scope:checkcounty.holder = {
										every_sub_realm_county = {
											OR = {
												title_province = {
													geographical_region = TFE_south_po_river_region
												}
												title_province = {
													geographical_region = illyricum_pannoniae_diocese_region
												}
											}
										}
									}
								}
							}
						}
					}
					scope:checkcounty = { add_to_list = titles_taken }
				}
				else_if = {
					limit = {
						scope:checkcounty.holder.liege = scope:defender
					}
					scope:checkcounty.holder = { add_to_list = vassals_taken }
				}
			}
		}

		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}

		every_in_list = {
			list = vassals_taken
			change_liege = {
				liege = scope:attacker
				change = scope:change
			}
		}

		every_in_list = {
			list = titles_taken
			change_title_holder = {
				holder = scope:attacker
				change = scope:change
				take_baronies = yes
			}
		}

		resolve_title_and_vassal_change = scope:change

		}

		# Truce
		add_truce_white_peace_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = claim_cb_defeat_desc_defender
			}
			triggered_desc = {
				trigger = { scope:claimant = { is_local_player = yes } }
				desc = claim_cb_defeat_desc_attacker_claimant
			}
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = claim_cb_defeat_desc_attacker
			}
			desc = claim_cb_defeat_desc
		}
		
	}

	on_defeat = {
        #EP2 accolade glory gain for winning against higher ranked enemy
		scope:defender = { accolade_attacker_war_end_glory_gain_high_effect = yes }
		scope:attacker = { show_pow_release_message_effect = yes }

		title:c_trapani = {
			remove_county_modifier = roman_camps
		}

		title:c_kran = {
			save_temporary_scope_as = current_county
		}
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:current_county = {
			change_title_holder = {
				holder = scope:attacker
				change = scope:change
				take_baronies = yes
			}
		}
		resolve_title_and_vassal_change = scope:change

		title:c_beroe = {
			save_temporary_scope_as = current_county
		}
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:current_county = {
			change_title_holder = {
				holder = scope:attacker
				change = scope:change
				take_baronies = yes
			}
		}
		resolve_title_and_vassal_change = scope:change

		title:c_burgas = {
			save_temporary_scope_as = current_county
		}
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:current_county = {
			change_title_holder = {
				holder = scope:attacker
				change = scope:change
				take_baronies = yes
			}
		}
		resolve_title_and_vassal_change = scope:change

		title:c_adrianopolis = {
			save_temporary_scope_as = current_county
		}
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:current_county = {
			change_title_holder = {
				holder = scope:attacker
				change = scope:change
				take_baronies = yes
			}
		}
		resolve_title_and_vassal_change = scope:change

		title:d_adrianopolis = {
			save_temporary_scope_as = current_county
		}
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:current_county = {
			change_title_holder = {
				holder = scope:attacker
				change = scope:change
				take_baronies = yes
			}
		}
		resolve_title_and_vassal_change = scope:change

		title:c_trapani = {
			save_temporary_scope_as = current_county
		}
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:current_county = {
			change_title_holder = {
				holder = scope:attacker.top_liege
				change = scope:change
				take_baronies = yes
			}
		}
		resolve_title_and_vassal_change = scope:change

		#title:e_byzantium.holder = {
		#	add_courtier = scope:attacker
		#}

		if = {
			limit = {
				NOT = { scope:claimant = scope:attacker }
				scope:attacker = {
					can_add_hook = {
					  	type = favor_hook
					  	target = scope:claimant
					}
				}
			}
			scope:attacker = {
				add_hook = {
		  			target = scope:claimant
		  			type = favor_hook
		 		}
			}
		}

		# Attacker pays gold to the defender as reparations.
		scope:attacker = {
			pay_short_term_gold_reparations_effect = {
				GOLD_VALUE = 3
			}
		}

		# Truce
		add_truce_attacker_defeat_effect = yes

		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes
	}

	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit

	transfer_behavior = transfer

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = GOTHIC_WAR_AMA_NAME
	war_name_base = GOTHIC_WAR_AMA_NAME_BASE
	cb_name = GOTHIC_WAR_AMA_NAME
	interface_priority = 60

	attacker_score_from_battles_scale = 50                # War Score from battles won by the Attacker is modified by this value
    defender_score_from_battles_scale = 50                # War Score from battles won by the Defender is modified by this value
    max_attacker_score_from_battles = 50                # How much War Score the Attacker can gain from battles in total
    max_defender_score_from_battles = 100                # How much War Score the Defender can gain from battles in total
	attacker_score_from_occupation_scale = 25
	defender_score_from_occupation_scale = 25

	should_show_war_goal_subview = yes

	attacker_wargoal_percentage = 0.4

	max_ai_diplo_distance_to_title = 1000
}
	}
	{
independence_war_berber = {
	icon = independence_faction_war
	group = event
	ai = no # AI targeting is handled through game_rule events.

	allow_hostages = no
	allowed_against_character = {
		OR = {
			scope:attacker = {
				liege = scope:defender
			}
			scope:attacker = {
				top_liege = scope:defender
			}
		}
	}

	cost = {
		piety = {
			value = 0
		}
		prestige = {
			value = 0
		}
	}

	on_declaration = {
		on_declared_war = yes
		# Remove offending HumSac modifiers.
		scope:attacker = {
			spawn_army = {
				name = "Berber Tribesmen"
				levies = 1000
				men_at_arms = {
					type = bowmen
					stacks = 2
				}
				men_at_arms = {
					type = desert_hussar
					stacks = 2
				}
				men_at_arms = {
					type = light_footmen
					stacks = 2
				}
				location = province:4601 #Nemancha
				inheritable = no
				uses_supply = no
				war = scope:war
			}
		}
		scope:attacker = {
			hidden_effect = { fp1_remove_humsac_offended_counties_effect = yes }
		}
		war = {
			every_war_attacker = {
				if = {
					limit = { 
						top_liege = scope:defender
						NOT = { culture = { has_same_culture_heritage = liege.culture } }
					}
					add_character_flag = should_become_independent
				}
			}
		}
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { # Desc for only one player attacker
					scope:attacker = {
						is_local_player = yes
					}
				}
				desc = independence_war_victory_desc_local_player_attacker_alone
			}
			triggered_desc = { # Desc for only one attacker, player defender
				trigger = {
					scope:defender = {
						is_local_player = yes
					}
				}
				desc = player_independence_war_victory_desc_local_player_defender_attacker_alone
			}
			desc = independence_war_victory_desc_local_player_attacker_alone # Desc for a third party involved
		}

	}

	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }

		#EP2 Accolade glory gain from winning against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_med_effect = yes }

		create_title_and_vassal_change = {
			type = independency
			save_scope_as = change
		}
		if = {
			# Free character with the flag
			limit = { exists = war }
			war = {
				every_war_attacker = {
					if = {
						limit = { 
							has_character_flag = should_become_independent
							top_liege = scope:defender
						}

						create_title_and_vassal_change = {
							type = independency
							save_scope_as = going_independent
							add_claim_on_loss = no
						}
						becomes_independent = {
							change = scope:going_independent
						}

						resolve_title_and_vassal_change = scope:going_independent

						add_truce_both_ways = {
							character = scope:defender
							days = 1825
							war = root.war
							result = victory
						}

						remove_character_flag = should_become_independent

						change_liege_or_become_independent = {
							CHANGE = scope:change
							VASSAL = this
						}

						hidden_effect = {
							set_variable = {
								name = independence_war_former_liege
								value = scope:defender
							}

							save_scope_as = current_member

							# Struggle Catalyst
							if = {
								limit = {
									catalyst_gave_independence_to_powerful_diff_faith_culture_vassal_preliminary_trigger = {
										CHAR1 = scope:defender
										CHAR2 = scope:current_member
									}
									any_character_struggle = {
										involvement = involved
										activate_struggle_catalyst_secondary_character_involvement_involved_trigger = {
											CATALYST = catalyst_gave_independence_to_powerful_diff_faith_culture_vassal
											CHAR = scope:current_member
										}
									}
								}
								every_character_struggle = {
									involvement = involved
									limit = {
										activate_struggle_catalyst_secondary_character_involvement_either_trigger = {
											CATALYST = catalyst_gave_independence_to_powerful_diff_faith_culture_vassal
											CHAR = scope:current_member
										}
									}
									activate_struggle_catalyst = {
										catalyst = catalyst_gave_independence_to_powerful_diff_faith_culture_vassal
										character = scope:defender
									}
								}
							}
						}
					}
				}
			}
		}

		scope:defender = {
			# Struggle Catalyst
			hidden_effect = {
				if = {
					limit = {
						catalyst_gave_independence_to_powerful_diff_faith_culture_vassal_preliminary_trigger = {
							CHAR1 = scope:defender
							CHAR2 = scope:attacker
						}
						any_character_struggle = {
							involvement = involved
							activate_struggle_catalyst_secondary_character_involvement_involved_trigger = {
								CATALYST = catalyst_gave_independence_to_powerful_diff_faith_culture_vassal
								CHAR = scope:attacker
							}
						}
					}
					every_character_struggle = {
						involvement = involved
						limit = {
							activate_struggle_catalyst_secondary_character_involvement_either_trigger = {
								CATALYST = catalyst_gave_independence_to_powerful_diff_faith_culture_vassal
								CHAR = scope:attacker
							}
						}
						activate_struggle_catalyst = {
								catalyst = catalyst_gave_independence_to_powerful_diff_faith_culture_vassal
								character = scope:defender
							}
					}
				}
			}
		}
		resolve_title_and_vassal_change = scope:change

	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = player_independence_war_white_peace_defender_desc
			}
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
					}
				}
				desc = player_independence_war_white_peace_attacker_desc
			}
			desc = player_independence_war_white_peace_desc
		}

	}

	on_white_peace = {
		scope:attacker = {
			show_pow_release_message_effect = yes
			stress_impact = {
 				ambitious = medium_stress_impact_gain
 				arrogant = medium_stress_impact_gain
 			}
		}
		hidden_effect = {
			scope:attacker = {
				add_truce_both_ways = {
					character = scope:defender
					days = 1825
					war = root.war
					result = white_peace
				}
			}
		}

		scope:defender = {
			add_prestige = minor_prestige_value
			stress_impact = {
 				arrogant = medium_stress_impact_gain
 			}
		}
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = player_independence_defeat_defender_desc
			}
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
					}
				}
				desc = player_independence_defeat_attacker_desc
			}
			desc = player_independence_war_defeat_desc
		}

	}

	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }
		scope:defender = {
			add_dread = medium_dread_gain
			# Prestige for Defender
			add_prestige_war_defender_effect = {
				PRESTIGE_VALUE = medium_prestige_value
			}
		}
		if = {
			limit = { exists = war }
			war = {
				every_war_attacker = {
					limit = {
						top_liege = scope:defender
					}
					hard_imprison_character_effect = {
						TARGET = this
						IMPRISONER = scope:defender
					}
					scope:defender = {
						add_opinion = {
							target = prev
							modifier = vassal_lost_faction_revolt_war
						}
					}
				}
			}
		}
		if = {
			limit = {
				character:thracio_03 = {
					is_landed = yes
					top_liege = scope:defender
					is_imprisoned = yes
				}
			}
			character:thracio_03 = {
				depose = yes
				release_from_prison = yes
			}
		}
		if = {
			limit = {
				exists = title:k_mauro_roman_kingdom.holder
			}
			title:k_mauro_roman_kingdom.holder = {
				add_courtier = character:thracio_03
			}
			character:thracio_03 = {
				add_unpressed_claim = title:k_mauro_roman_kingdom
			}
		}
		if = {
			limit = {
				war = {
					any_war_attacker = { has_title = title:d_avaritana }
				}
				war = {
					any_war_defender = { has_title = title:d_zaba }
				}
			}
			create_title_and_vassal_change = {
				type = swear_fealty
				save_scope_as = change
				add_claim_on_loss = no
			}
		
			if = {
				limit = {
					title:d_avaritana.holder.primary_title.tier < title:d_zaba.holder.primary_title.tier
				}
				title:d_avaritana.holder = {
					change_liege = {
						liege = title:d_zaba.holder
						change = scope:change
					}
				}
			}
			else = {
				title:d_avaritana.holder = {
					every_held_title = {
						if = {
							limit = {
								tier = title:d_avaritana.holder.primary_title.tier
							}
							change_title_holder = {
								holder = title:d_zaba.holder
								change = scope:change
							}
						}
						else_if = {
							limit = {
								OR = {
									NOT = { exists = scope:secondary_title }
									tier > scope:secondary_title.tier
								}
							}
							save_temporary_scope_as = secondary_title
						}
					}
				}

				title:d_avaritana.holder = {
					if = {
						limit = {
							exists = scope:secondary_title
						}
						every_vassal = {
							limit = {
								primary_title.tier >= scope:secondary_title.tier
								NOT = {
									primary_title.tier = tier_barony
								}
							}
							change_liege = {
								liege = title:d_zaba.holder
								change = scope:change
							}
						}
					}
				}
			
				title:d_avaritana.holder = {
					change_liege = {
						liege = title:d_zaba.holder
						change = scope:change
					}
				}
			}
		
			resolve_title_and_vassal_change = scope:change

			title:d_avaritana.holder = {
				destroy_title = title:d_avaritana
			}
		}
	}

	on_invalidated_desc = msg_invalidate_war_title

	check_defender_inheritance_validity = no

	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	transfer_behavior = transfer

	war_name = "INDEPENDENCE_WAR_NAME"

	interface_priority = 120

	attacker_wargoal_percentage = 0.8

	max_attacker_score_from_battles = 100
	max_defender_score_from_battles = 50
	
	max_defender_score_from_occupation = 150
	max_attacker_score_from_occupation = 150

	max_ai_diplo_distance_to_title = 500
}
	}

	{
gothic_duchy_conquest_cb = {
	icon = duchy_conquest_cb
	group = event
	white_peace_possible = yes

	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }
	
	attacker_score_from_occupation_scale = 150
	attacker_score_from_battles_scale = 150
	defender_score_from_battles_scale = 150

	target_titles = all
	target_title_tier = duchy
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder

	should_invalidate = {
		scope:defender = {
			is_independent_ruler = no
			NOT = { has_title = title:k_ostrogoths }
		}
	}

	on_invalidated_desc = msg_subjugation_war_invalidated_message
	
	on_invalidated = {
	}

	on_declaration = {
		on_declared_war = yes
		set_global_variable = {
			name = gothic_war_declared
			value = yes
		}
		set_global_variable = {
			name = gothic_attacker_1
			value = scope:attacker
		}
		scope:attacker = {
			capital_county = {
				add_county_modifier = { modifier = roman_camps years = 5 }
			}
			spawn_army = {
				name = "Roman Vanguard"
				levies = 1000
				men_at_arms = {
					type = cataphract
					stacks = 2
				}
				men_at_arms = {
					type = bowmen
					stacks = 1
				}
				men_at_arms = {
					type = palatinae
					stacks = 1
				}
				men_at_arms = {
					type = comitatenses
					stacks = 1
				}
				men_at_arms = {
					type = scorpio
					stacks = 2
				}
				location = province:2636 #Trapani
				uses_supply = no
				inheritable = yes
			}
			spawn_army = {
				name = "Roman Vanguard"
				levies = 600
				men_at_arms = {
					type = cataphract
					stacks = 2
				}
				men_at_arms = {
					type = bowmen
					stacks = 1
				}
				men_at_arms = {
					type = palatinae
					stacks = 1
				}
				men_at_arms = {
					type = comitatenses
					stacks = 1
				}
				men_at_arms = {
					type = scorpio
					stacks = 2
				}
				location = province:2636 #Trapani
				uses_supply = no
				inheritable = yes
				war = scope:war
			}
			spawn_army = {
				name = "Roman Vanguard"
				levies = 600
				men_at_arms = {
					type = cataphract
					stacks = 2
				}
				men_at_arms = {
					type = bowmen
					stacks = 1
				}
				men_at_arms = {
					type = palatinae
					stacks = 1
				}
				men_at_arms = {
					type = comitatenses
					stacks = 1
				}
				men_at_arms = {
					type = scorpio
					stacks = 2
				}
				location = province:2636 #Trapani
				uses_supply = no
				inheritable = yes
				war = scope:war
			}
			if = {
				limit = {
					character:armenian_02 = {
						is_alive = yes
					}
				}
				add_courtier = character:armenian_02
			}
		}
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = county_conquest_cb_victory_desc_attacker
			}
			desc = county_conquest_cb_victory_desc
		}
	}

	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }
		custom_tooltip = gothic_war_end_effect2

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_med_effect = yes }

		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}

		# go through the dejure hierarchy under target titles, transfer eligible vassals and sieze counties from ineligible ones
		every_in_list = {
			list = target_titles
			custom_tooltip = CONQUEST_CB_TITLE

			conquest_cb_title_transfer = {
				RELIGIOUS_WAR = no
			}
		}

		every_in_list = {
			list = vassals_taken
			change_liege = {
				liege = scope:attacker
				change = scope:change
			}
		}

		every_in_list = {
			list = titles_taken
			change_title_holder = {
				holder = scope:attacker
				change = scope:change
				take_baronies = yes
			}
		}

		resolve_title_and_vassal_change = scope:change

		# Prestige Progress for the Attacker
		every_in_list = {
			list = target_titles
			scope:attacker = {
				add_prestige_experience = medium_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker
			FAME_BASE = medium_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }

		if = { # Warning that only counties are changing hands
			limit = {
				any_in_list = {
					list = target_titles
					tier = tier_duchy
				}
			}
			random_in_list = {
				list = target_titles
				limit = { tier = tier_duchy }
				save_scope_as = de_jure_target
			}
		}
		if = {
			limit = {
				any_in_list = {
					list = target_titles
					tier = tier_duchy
					holder = scope:defender
				}
			}
			if = {
				limit = {
					scope:defender = {
						any_held_title = {
							tier = tier_county
							NOT = { target_is_de_jure_liege_or_above = scope:de_jure_target }
						}
					}
				}
				custom_tooltip = conquest_title_not_transferred_tt
			}
			else = { custom_tooltip = conquest_title_destroyed_tt }
		}
		else = {
			if = {
				limit = {
					any_in_list = {
						list = target_titles
						tier = tier_duchy
						is_title_created = yes
					}
				}
				custom_tooltip = conquest_title_usurp_tt
			}
			else = { custom_tooltip = conquest_title_create_tt }
		}
		if = {
			limit = {
				scope:attacker = {
					top_liege = title:e_byzantium.holder
				}
			}
			if = {
				limit = {
					exists = title:k_daciae.holder
					title:k_daciae.holder.top_liege = title:e_byzantium.holder
				}
				set_global_variable = {
					name = gothic_attacker_2
					value = title:k_daciae.holder
				}
			}
			title:e_byzantium.holder = {
				trigger_event = {
					id = western_roman.0063
					days = 1
				}
				start_war = {
					cb = gothic_war_regular_cb
					target = title:k_ostrogoths.holder
					target_title = title:k_ostrogoths
					claimant = title:e_byzantium.holder
				}
			}
		}
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = county_conquest_cb_white_peace_desc_defender
			}
			desc = county_conquest_cb_white_peace_desc
		}
	}

	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }
		# Prestige loss for the attacker

		#EP2 accolade glory gain for doing pretty good against higher ranked enemy
		scope:defender = { accolade_defender_war_end_glory_gain_low_effect = yes }

		scope:attacker = {
			add_prestige = {
				value = minor_prestige_value
				multiply = -1.0
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker # not impactful as the scale are identical
			FAME_BASE = medium_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}


		add_truce_white_peace_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = county_conquest_cb_defeat_desc_defender
			}
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
						has_targeting_faction = yes
					}
				}
				desc = county_conquest_cb_defeat_desc_attacker
			}
			desc = county_conquest_cb_defeat_desc
		}
	}

	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:defender = { accolade_defender_war_end_glory_gain_med_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold_reparations_effect = {
				GOLD_VALUE = 3
			}
			add_prestige = {
				value = major_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for Defender
		scope:defender = {
			add_prestige_war_defender_effect = {
				PRESTIGE_VALUE = major_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:defender
			FAME_BASE = medium_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		add_truce_attacker_defeat_effect = yes

		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes
	}

	transfer_behavior = transfer

	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = "CONQUEST_WAR_NAME"
	war_name_base = "CONQUEST_WAR_NAME_BASE"
	cb_name = "CONQUEST_DUCHY_CB_NAME"

	interface_priority = 79

	use_de_jure_wargoal_only = yes

	attacker_wargoal_percentage = 0.8
	
	attacker_score_from_battles_scale = 200                # War Score from battles won by the Attacker is modified by this value
    defender_score_from_battles_scale = 200                # War Score from battles won by the Defender is modified by this value
    max_attacker_score_from_battles = 100                # How much War Score the Attacker can gain from battles in total
    max_defender_score_from_battles = 100                # How much War Score the Defender can gain from battles in total

	max_defender_score_from_occupation = 50
	full_occupation_by_defender_gives_victory = no
}
	}
}

"common/scripted_effects/TFE_invasion_effects.txt" = {
	{
lost_radagaisus_invasion_effect = {
	if = {
		limit = {
			exists = title:k_goths.holder
		}
		title:k_goths.holder = {
			if = { # Imprison them if they aren't imprisoned.
				limit = {
					is_imprisoned = no
					character:900062 = {
						is_alive = yes
					}
				}
				
				hard_imprison_character_effect = {
					TARGET = this
					IMPRISONER = character:900062
				}
				trigger_event = {
					id = gothic_wars.0016
					days = 7
				}
			}
			else = {
				limit = {
					is_imprisoned = no
				}
				hard_imprison_character_effect = {
					TARGET = this
					IMPRISONER = scope:defender
				}
			}
		}
	}
}
	}

	{
spawn_radagaisus_character_effect = {
	title:c_hewes.title_province = {
		save_scope_as = radagaisus_birthplace
	}

	character:radagaisian_02 = {
		# Make temporarily immune to disease
		add_character_flag = {
			flag = immune_to_disease
			years = 15
		}
		save_scope_as = radagaisus

		add_gold = 500
		add_prestige = 2500
		add_dread = high_dread
		add_character_modifier = {
			modifier = TFE_king_of_the_goths_modifier
		}
		create_the_gothic_kingdom_effect = yes
	}

	radagaisus_find_target_titles_effect = yes

	every_player = {
		if = {
			limit = {
				exists = title:e_western_roman_empire.holder
				NOR = {
					THIS = scope:radagaisus
					THIS = title:e_western_roman_empire.holder
				}
			}
			trigger_event = gothic_wars.0012
		}
		if = {
			limit = {
				exists = title:e_western_roman_empire.holder
				THIS = title:e_western_roman_empire.holder
			}
			trigger_event = gothic_wars.0013
		}
	}
}
	}

	{
radagaisus_find_target_titles_effect = {
	if = {
		limit = {
			exists = title:k_italia_suburbicariae
			exists = title:k_italia_annonariae
			OR = {
				title:k_italia_suburbicariae.holder.top_liege.primary_title = title:e_western_roman_empire
				title:k_italia_suburbicariae.holder.top_liege.primary_title = title:e_roman_empire
			}
		}
		title:k_italia_suburbicariae.holder.top_liege = {
			save_scope_as = target_one
		}
	}
	if = {
		limit = {
			exists = scope:target_one
		}
		radagaisus_declare_war_for_target_title_effect = yes
	}
}

radagaisus_declare_war_for_target_title_effect = {
	save_scope_as = war_leader
	if = {
		limit = { exists = scope:target_one }
		scope:radagaisus = {
			start_war = {
				cb = radagaisus_invasion_cb
				target = scope:target_one
				target_title = title:k_italia_annonariae
				target_title = title:k_italia_suburbicariae
			}
		}
		scope:radagaisus = {
			spawn_gothic_troops_effect = yes
		}
	}
	else = {
		debug_log = "Failed to find a valid war target for Radagaisus!"
	}
}
	}

	{
goths_flee_effect = {
	title:k_visigoths.holder = {
		save_scope_as = visigothic_king
	}

	scope:visigothic_king = {
		trigger_event = {
			id = gothic_wars.0015
			days = 1
		}
	}
}
	}
}

"common/decisions/TFE_major_decisions_south_asia.txt" = {
	{
# Restore the main branch of the Vakataka Dynasty

reclaim_vakataka_decision = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_dynasty_house.dds"
	}
	decision_group_type = major

	desc = reclaim_vakataka_decision_desc
	selection_tooltip = reclaim_vakataka_decision_tooltip

	ai_check_interval = 120

	is_shown = {
		dynasty = dynasty:900024
		NOT = { house = character:900900.house } #Not a member of the OG Vakatakas
		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:reclaim_vakataka_decision
			}
		}
	}

	is_valid = {
		is_independent_ruler = yes
		prestige_level >= 4
		completely_controls = title:k_maharastra
		completely_controls = title:k_telingana
		completely_controls = title:k_karnata
	}

	is_valid_showing_failures_only = {
		is_available_adult = yes
		is_landed_or_landless_administrative = yes
	}
	
	cost = {
		prestige = 850
		piety = 500
	}

	effect = {
		hidden_effect = { ROOT.house = { every_house_member = { set_house = character:900900.house } } }
		set_house = character:900900.house
		add_pressed_claim = title:e_deccan
		add_pressed_claim = title:k_gondwana
		add_pressed_claim = title:d_jejakabhukti
		add_pressed_claim = title:d_akara_dasarna
		save_scope_as = founder
		trigger_event = {
			id = tfe_south_asia_decision.2001
			}
		#Notify other Vakatakas
		every_player = {
			limit = {
				dynasty = dynasty:900024
			}
			trigger_event = tfe_south_asia_decision.2002
			}
		}

		hidden_effect = {
			add_to_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:reclaim_vakataka_decision
			}
		}
	
	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 100
	}
}
	}
	{
#Restore the Three Crowned Kings
muvendhar_restoration_decision = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_dynasty_house.dds"
	}
	decision_group_type = cultural

	desc = muvendhar_restoration_decision_desc
	selection_tooltip = muvendhar_restoration_decision_tooltip

	ai_check_interval = 120

	is_shown = {
		is_ruler = yes
		is_landed_or_landless_administrative = yes
		OR = {
			culture = culture:tamil
			culture = culture:malaiya
			culture = culture:sinhala
			culture = { any_parent_culture_or_above = { this = culture:tamil }}
			culture = { any_parent_culture_or_above = { this = culture:malaiya }}
			culture = { any_parent_culture_or_above = { this = culture:sinhala }}
		}
		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:muvendhar_restoration_decision
			}
		}
	}
	
	is_valid = {
		is_independent_ruler = yes
		has_title = title:k_tamilakam
		prestige_level >= 3
		title:d_chola_nadu.holder.dynasty = dynasty:1043008
		title:d_pandya_nadu.holder.dynasty = dynasty:1043009
		title:d_chera_nadu.holder.dynasty = dynasty:1043010
		NOT = { dynasty = dynasty:900026 }
		completely_controls = title:d_chola_nadu
		completely_controls = title:d_pandya_nadu
		completely_controls = title:d_chera_nadu
	}

	is_valid_showing_failures_only = {
		is_capable_adult = yes
		is_imprisoned = no
		is_at_war = no
	}

	cost = {
		prestige = 750
		piety = 500
	}

	effect = {
		if = {
			limit = {
				NOR = {
					dynasty = dynasty:1043008
					dynasty = dynasty:1043009
					dynasty = dynasty:1043010
				}
			}
			dynasty = { add_dynasty_prestige = 500 }
		}
		dynasty:1043008 = { add_dynasty_prestige = 500 }
		dynasty:1043009 = { add_dynasty_prestige = 500 }
		dynasty:1043010 = { add_dynasty_prestige = 500 }
		save_scope_as = founder
		trigger_event = tfe_south_asia_decision.4001
		hidden_effect = {
			add_to_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:muvendhar_restoration_decision
			}
		}
	}
	
	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 100
	}
}
	}
}

"common/decisions/TFE_major_decisions_middle_east.txt" = {
	{
TFE_construct_khawarnaq = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_mena_palace.dds"
	}
	decision_group_type = major

	desc = TFE_construct_khawarnaq_desc
	selection_tooltip = TFE_construct_khawarnaq_tooltip

	ai_check_interval = 120

	is_shown = {
		is_landed_or_landless_administrative = yes
		NOT = {  #Can only do it once.
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:TFE_construct_khawarnaq
			}
		}
		dynasty = dynasty:lakhmid_dynasty
		OR = {
			game_start_date = 395.1.17
			game_start_date = 361.11.17
		}
		has_title = title:k_lakhmid
	}

	is_valid = {
		has_title = title:k_lakhmid
		prestige_level >= 3
		completely_controls = title:c_kufa
	}

	cost = {
		prestige = 500
		gold = 500
	}

	effect = {
		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:TFE_construct_khawarnaq
		}
		title:b_an-najaf.title_province = {
			add_special_building = palace_khawarnaq
			
		}
		trigger_event = TFE_flavour_events.0007
		add_prestige = 500
		dynasty = {
			add_dynasty_prestige = 500
		}
	}

	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 100
	}
}
	}
}

"common/decisions/TFE_rome_decisions.txt" = {
	{
recall_belisarius = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_roman_knight.dds"
	}
	decision_group_type = roman

	ai_check_interval = 6

	desc = recall_belisarius_desc
	selection_tooltip = recall_belisarius_tooltip

	is_shown = {
		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:recall_belisarius
			}
		}
		#OR = {
		#	root = global_var:justinian
		#	has_trait = paranoid
		#}
		has_global_variable = vandalic_war_won
		current_date >= 530.1.1
		current_date <= 600.1.1
		OR = {
			has_title = title:e_byzantium
			has_title = title:e_roman_empire
		}
		exists = title:k_africae.holder
		title:k_africae.holder = {
			is_vassal_of = root
		}
		game_start_date = 532.2.1
	}

	is_valid = {
		character:belisarius_001 = title:k_africae.holder
	}

	effect = {
		root = {
			save_scope_as = emperor
		}
		title:k_africae.holder = {
			save_scope_as = belisarius
		}
		custom_tooltip = recall_belisarius_warning
		character:belisarius_001 = {
			add_opinion = {
				modifier = angry_opinion
				target = root
				opinion = -20
			}
			trigger_event = {
				id = western_roman.0044
				days = 1
			}
		}
		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:recall_belisarius
		}
	}

	cost = {
		prestige = {
			if = {
				limit = {
					is_ai = no
				}
				add = {
					value = 500
				}
			}
		}
		gold = {
			if = {
				limit = {
					is_ai = no
				}
				add = {
					value = 250
				}
			}
		}
	}

	ai_potential = {
		is_at_war = no
	}
	ai_will_do = {
		base = 100
	}
}
	}
	
	{
start_amalasuntha_coup = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_destiny_goal.dds"
	}
	decision_group_type = roman

	ai_goal = yes

	desc = start_amalasuntha_coup_desc
	selection_tooltip = start_amalasuntha_coup_tooltip

	is_shown = {
		OR = {
			has_title = title:e_byzantium
			has_title = title:e_roman_empire
		}
		NOT = {
			exists = global_var:gothic_war_declared
		}
		exists = global_var:amalasuntha_coup_unlock
		current_date >= 530.1.1
		current_date <= 600.1.1
		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:started_gothic_war
			}
		}
		character:992020 = {
			is_alive = yes
			liege = title:k_ostrogoths.holder
		}
		title:k_ostrogoths.holder = {
			has_active_diarchy = yes
			diarch = character:992020
		}
		game_start_date = 532.2.1
	}

	is_valid = {
		trigger_if = {
			limit = {
				is_ai = yes
			}
			is_at_war = no
		}
		trigger_if = {
			limit = {
				is_ai = yes
				character:belisarius_001 = {
					is_ai = no
				}
			}
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:recall_belisarius
			}
		}
	}

	effect = {
		root = {
			save_scope_as = emperor
			trigger_event = {
				id = germanic_events.0033
				days = 1
			}
		}
		custom_tooltip = gothic_war_belisarius_warning
		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:started_gothic_war
		}
	}

	cost = {
		prestige = {
			if = {
				limit = {
					is_ai = no
				}
				add = {
					value = 250
				}
			}
		}
	}

	ai_potential = {
		always = yes
	}
	ai_will_do = {
		base = 100
	}
}
	}
	
	{
vandalic_war = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_vandalic_war.dds"
	}
	decision_group_type = roman

	ai_check_interval = 12

	desc = vandalic_war_desc
	selection_tooltip = vandalic_war_tooltip

	is_shown = {
		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:vandalic_war
			}
		}
		exists = title:k_vandals
		has_title = title:e_byzantium
		current_date >= 530.1.1
		game_start_date = 532.2.1
		OR = {
			character:vandals_005 = {
				is_alive = yes
			}
			AND = {
				current_date <= 550.1.1
				any_courtier = {
					has_claim_on = title:k_vandals
				}
			}
		}
	}

	effect = {
		custom_tooltip = vandalic_war_decision_1
		custom_tooltip = vandalic_war_decision_2
		custom_tooltip = vandalic_war_decision_3

		hidden_effect = {
			every_vassal = {
				add_opinion = {
					modifier = respect_opinion
					target = root
					opinion = -20
				}
			}
			add_to_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:vandalic_war
			}
			trigger_event = {
				id = western_roman.0039
				days = 1
			}
		}
	}

	cost = {
		prestige = {
			if = {
				limit = {
					is_ai = no
				}
				add = {
					value = 750
				}
			}
		}
		gold = {
			if = {
				limit = {
					is_ai = no
				}
				add = {
					value = 250
				}
			}
		}
	}

	ai_potential = {
		always = yes
	}
	ai_will_do = {
		base = 100
	}

}
	}

	{
break_eternal_peace = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_destiny_goal.dds"
	}
	decision_group_type = major

	ai_check_interval = 12

	desc = break_eternal_peace_desc
	selection_tooltip = break_eternal_peace_tooltip

	is_shown = {
		has_global_variable = has_eternal_peace
		OR = {
			has_title = title:e_byzantium
			has_title = title:e_roman_empire
			has_title = title:e_persia
		}
	}

	effect = {
		remove_global_variable = has_eternal_peace
		root = {
			save_scope_as = truce_breaker
		}
		if = {
			limit = {
				OR = {
					has_title = title:e_byzantium
					has_title = title:e_roman_empire
				}
				NOT = {
					has_title = title:e_persia
				}
			}
			title:e_persia.holder = {
				save_scope_as = truce_breakee
				add_opinion = {
					modifier = angry_opinion
					target = scope:truce_breaker
					opinion = -100
				}
				trigger_event = {
					id = TFE_flavour_events.0035
					days = 1
				}
				every_vassal_or_below = {
					trigger_event = {
						id = TFE_flavour_events.0036
						days = 1
					}
				}
			}
			every_vassal_or_below = {
				trigger_event = {
					id = TFE_flavour_events.0036
					days = 1
				}
			}
		}
		if = {
			limit = {
				NOT = {
					OR = {
						has_title = title:e_byzantium
						has_title = title:e_roman_empire
					}
				}
				has_title = title:e_persia
			}
			if = {
				limit = {
					exists = title:e_byzantium.holder
				}
				title:e_byzantium.holder = {
					save_scope_as = truce_breakee
					add_opinion = {
						modifier = angry_opinion
						target = scope:truce_breaker
						opinion = -100
					}
					trigger_event = {
						id = TFE_flavour_events.0035
						days = 1
					}
					every_vassal_or_below = {
						trigger_event = {
							id = TFE_flavour_events.0036
							days = 1
						}
					}
				}
				every_vassal_or_below = {
					trigger_event = {
						id = TFE_flavour_events.0036
						days = 1
					}
				}
				if = {
					limit = {
						exists = global_var:gothic_war_declared
						NOT = { exists = global_var:gothic_war_won }
						root = title:e_persia.holder
					}
					title:e_persia.holder = {
						trigger_event = {
							id = western_roman.0064
							days = 1
						}
					}
				}
			}
			if = {
				limit = {
					exists = title:e_roman_empire.holder
				}
				title:e_roman_empire.holder = {
					save_scope_as = truce_breakee
					add_opinion = {
						modifier = angry_opinion
						target = root
						opinion = -100
					}
					trigger_event = {
						id = TFE_flavour_events.0035
						days = 1
					}
					every_vassal_or_below = {
						trigger_event = {
							id = TFE_flavour_events.0036
							days = 1
						}
					}
				}
				every_vassal_or_below = {
					trigger_event = {
						id = TFE_flavour_events.0036
						days = 1
					}
				}
				if = {
					limit = {
						exists = global_var:gothic_war_declared
						NOT = { exists = global_var:gothic_war_won }
						root = title:e_persia.holder
					}
					title:e_persia.holder = {
						trigger_event = {
							id = western_roman.0064
							days = 1
						}
					}
				}
			}
		}
	}

	cost = {
		prestige = {
			if = {
				limit = {
					is_ai = no
				}
				add = {
					value = 1000
				}
			}
		}
	}

	ai_potential = {
		is_at_war = no
	}
	ai_will_do = {
		base = 10
		modifier = {
			add = 30
			has_title = title:e_persia
		}
		modifier = {
			add = -50
			current_date <= 540.1.1
		}
		modifier = {
			add = 200
			AND = {
				has_title = title:e_persia
				exists = global_var:gothic_war_declared
				NOT = { exists = global_var:gothic_war_won }
			}
		}
	}

}
	}

	{
vandalic_aftermath_vassals = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_destiny_goal.dds"
	}
	decision_group_type = roman

	ai_check_interval = 12

	desc = vandalic_aftermath_vassals_desc
	selection_tooltip = vandalic_aftermath_vassals_tooltip

	is_shown = {
		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:vandalic_aftermath_vassals
			}
		}
		#OR = {
		#	root = global_var:justinian
		#	has_trait = zealous
		#}
		OR = {
			has_title = title:e_byzantium
			has_title = title:e_roman_empire
		}
		has_global_variable = vandalic_war_won
		exists = title:k_africae.holder
		title:k_africae.holder = {
			any_vassal = {
				faith = faith:arianism
			}
		}
		current_date >= 530.1.1
		current_date <= 570.1.1
		game_start_date = 532.2.1
	}

	is_valid = {
		NOT = { faith = faith:arianism }
		is_at_war = no
	}

	effect = {
		root = {
			save_scope_as = emperor
		}
		title:k_africae.holder = {
			save_scope_as = vicar
		}
		custom_tooltip = vandalic_aftermath_vassals_warning
		every_vassal_or_below = {
			limit = {
				OR = {
					culture = culture:vandal
					liege = title:k_africae.holder
				}
				NOT = { faith = root.faith }
				NOT = { culture =  { has_cultural_pillar = heritage_berber } }
				vassal_contract_obligation_level_can_be_increased = religious_rights
				highest_held_title_tier > tier_barony
			}
			add_opinion = {
				modifier = angry_opinion
				target = root
				opinion = -20
			}
			trigger_event = {
				id = western_roman.0043
				days = 1
			}
		}
		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:vandalic_aftermath_vassals
		}
	}

	cost = {
		prestige = {
			if = {
				limit = {
					is_ai = no
				}
				add = {
					value = 500
				}
			}
		}
	}

	ai_potential = {
		is_at_war = no
	}
	ai_will_do = {
		base = 100
	}
}
	}

	{
start_gothic_war = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_destiny_goal.dds"
	}
	decision_group_type = roman

	ai_check_interval = 6

	desc = start_gothic_war_desc
	selection_tooltip = start_gothic_war_tooltip

	is_shown = {
		OR = {
			has_title = title:e_byzantium
			has_title = title:e_roman_empire
		}
		NOT = {
			exists = global_var:gothic_war_declared
		}
		exists = global_var:gothic_war_cycle_prep
		current_date >= 530.1.1
		current_date <= 600.1.1
		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:started_gothic_war
			}
		}
		game_start_date = 532.2.1
	}

	is_valid = {
		is_at_war = no
		trigger_if = {
			limit = {
				is_ai = yes
			}
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:recall_belisarius
			}
		}
	}

	effect = {
		root = {
			trigger_event = {
				id = germanic_events.0025
				days = 1
			}
		}
		custom_tooltip = gothic_war_belisarius_warning
		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:started_gothic_war
		}
	}

	cost = {
		prestige = {
			if = {
				limit = {
					is_ai = no
				}
				add = {
					value = 500
				}
			}
		}
		gold = {
			if = {
				limit = {
					is_ai = no
				}
				add = {
					value = 250
				}
			}
		}
	}

	ai_potential = {
		is_at_war = no
	}
	ai_will_do = {
		base = 10
		modifier = {
			add = -10
			current_date <= 540.1.1
		}
		modifier = {
			add = 100
			exists = global_var:vandalic_war_won
		}
	}
}
	}

	# ck3-tiger: "unknown token `government_hast_flag`". This is a TFE error as of the 'After the Pharaohs' update.
	{
restore_the_west_empire = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_dynasty_house.dds"
	}
	decision_group_type = roman
	
	desc = restore_the_west_empire_desc
	selection_tooltip = restore_the_west_empire_tooltip
	ai_goal = yes

	is_shown = {
		is_landed = yes
		exists = dynasty
		culture = { has_cultural_pillar = heritage_latin }
		title:e_western_roman_empire = {
			is_title_created = no
		}
		title:e_roman_empire = {
			is_title_created = no
		}
		highest_held_title_tier = tier_empire
		NOT = {
			has_title = title:e_byzantium
		}
		NOT = {
			government_has_flag = government_is_roman
		}
	}

	is_valid = {
		is_independent_ruler = yes
		prestige_level >= high_prestige_level
		highest_held_title_tier = tier_empire
		OR = {
			government_has_flag = government_is_imperial
			government_has_flag = government_is_imperial_cult
			government_has_flag = government_is_autocratic
			government_has_flag = government_is_autocratic_ep3
			government_has_flag = government_is_administrative
		}
		completely_controls = title:d_latium
		completely_controls = title:d_friuli
		completely_controls = title:d_romagna
		completely_controls = title:d_sicily
		completely_controls = title:d_lombardia
		completely_controls = title:d_apulia
		completely_controls = title:d_tunis
		completely_controls = title:d_dalmatia
	}

	is_valid_showing_failures_only = {
		is_capable_adult = yes
		is_imprisoned = no
		is_independent_ruler = yes
		is_at_war = no
	}

	effect = {
		save_scope_as = founder
		show_as_tooltip = { restore_the_west_effect = yes }
		trigger_event = { id = western_roman.0011 }
		#notify other players
		if = {
			limit = {
				government_has_flag = government_is_autocratic
			}
			change_government = imperial_government
			every_vassal = {
				limit = {
					OR = {
						government_has_flag = government_is_autocratic
						AND = {
							government_has_flag = government_is_roman
							highest_held_title_tier > tier_county
						}
					}
				}
				change_government = imperial_government
			}
			else_if = {
				limit = {
					government_has_flag = government_is_autocratic_ep3
				}
				save_scope_as = founder
				show_as_tooltip = { restore_the_west_effect = yes }
				trigger_event = { id = western_roman.0011 }
				#government stuff
				change_government = administrative_government
				every_vassal = {
					limit = {
						OR = {
							government_has_flag = government_is_autocratic_ep3
							AND = {
								government_hast_flag = government_is_roman
								highest_held_title_tier > tief_countiy
							}
						}
					}
					change_government = administrative_government
				}
			}
		every_player = {
			limit = {
				NOT = { this = scope:founder }
			}
			#vassal players get a separate event
			if = {
				limit = {
					any_liege_or_above = { this = scope:founder }
				}
				trigger_event = western_roman.0012
			}
			#germanics get a separate event
			if = {
				limit = {
					culture = { has_cultural_pillar = heritage_north_germanic }
					culture = { has_cultural_pillar = heritage_west_germanic }
					culture = { has_cultural_pillar = heritage_east_germanic }
					culture = { has_cultural_pillar = heritage_central_germanic }
				}
				trigger_event = western_roman.0013
			}
			#slavs get a separate event
			if = {
				limit = {
					culture = { has_cultural_pillar = heritage_slavic }
					culture = { has_cultural_pillar = heritage_south_slavic }
				}
				trigger_event = western_roman.0014
			}
			#everyone else within range gets a less personal version
			else = { trigger_event = western_roman.0015 }
		}
		hidden_effect = {
			if = {
				limit = {
					title:e_italy = {
						is_titular = no
					}
				}
				title:e_italy = {
					every_in_de_jure_hierarchy = {
						set_de_jure_liege_title = title:e_western_roman_empire
							}
						}
					}
				}
			}
		}

	cost = { gold = { value = 750 if = { limit = { is_ai = yes } multiply = 0 } } prestige = { value = 250 if = { limit = { is_ai = yes } multiply = 0 } } piety = { value = 250 if = { limit = { is_ai = yes } multiply = 0 } } }

	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 100
	}
}
	}

	# ck3-tiger: "unknown token `tief_countiy`". This is a TFE error as of the 'After the Pharaohs' update.
	{
#Restore Eastern Rome - Hróðvitnir
restore_the_east = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_dynasty_house.dds"
	}
	decision_group_type = roman

	desc = restore_the_east_desc
	selection_tooltip = restore_the_east_tooltip
	ai_goal = yes

	is_shown = {
		is_landed = yes
		exists = dynasty
		OR = {
			culture = { has_cultural_pillar = heritage_latin }
		}
		#capital must be in rome
		title:e_byzantium = {
			any_in_de_jure_hierarchy = {
				THIS = root.capital_county
			}
			is_title_created = no
		}
		title:e_roman_empire = {
			is_title_created = no
		}
		highest_held_title_tier < tier_empire
	}

	is_valid = {
		is_independent_ruler = yes
		prestige_level >= high_prestige_level
		OR = {
			government_has_flag = government_is_autocratic
			government_has_flag = government_is_autocratic_ep3
			government_has_flag = government_is_roman
		}
		completely_controls = title:d_thrace
		completely_controls = title:d_alexandria
		completely_controls = title:d_delta
		completely_controls = title:d_palestine
		completely_controls = title:d_antioch
		completely_controls = title:d_achaia
		completely_controls = title:d_krete
		completely_controls = title:d_thessalonika
	}

	is_valid_showing_failures_only = {
		is_capable_adult = yes
		is_imprisoned = no
		is_independent_ruler = yes
		is_at_war = no
	}

	effect = {
		if = {
			limit = {
				NOT = { has_dlc_feature = roads_to_power }
			}
		save_scope_as = founder
		show_as_tooltip = { restore_the_east_effect = yes }
		trigger_event = { id = western_roman.0021 }
		#government stuff
		if = {
			limit = {
				government_has_flag = government_is_autocratic
			}
			change_government = imperial_government
			every_vassal = {
				limit = {
					OR = {
						government_has_flag = government_is_autocratic
						AND = {
							government_has_flag = government_is_roman
							highest_held_title_tier > tier_county
						}
					}
				}
				change_government = imperial_government
			}
			else_if = {
				save_scope_as = founder
				show_as_tooltip = { restore_the_west_effect = yes }
				trigger_event = { id = western_roman.0021 }
				#government stuff
				change_government = administrative_government
				every_vassal = {
					limit = {
						OR = {
							government_has_flag = government_is_autocratic_ep3
							AND = {
								government_hast_flag = government_is_roman
								highest_held_title_tier > tief_countiy
							}
						}
					}
					change_government = administrative_government
				}
			}
		#notify other players
		every_player = {
			limit = {
				NOT = { this = scope:founder }
			}
			#vassal players get a separate event
			if = {
				limit = {
					any_liege_or_above = { this = scope:founder }
				}
				trigger_event = eastern_roman.0002
			}
			#germanics get a separate event
			if = {
				limit = {
					culture = { has_cultural_pillar = heritage_north_germanic }
					culture = { has_cultural_pillar = heritage_west_germanic }
					culture = { has_cultural_pillar = heritage_east_germanic }
					culture = { has_cultural_pillar = heritage_central_germanic }
				}
				trigger_event = eastern_roman.0003
			}
			#slavs get a separate event
			if = {
				limit = {
					culture = { has_cultural_pillar = heritage_slavic }
					culture = { has_cultural_pillar = heritage_south_slavic }
				}
				trigger_event = eastern_roman.0004
			}
			#everyone else within range gets a less personal version
			else = { trigger_event = eastern_roman.0005 }
				}
			}
		}
	}

	cost = { gold = { value = 1000 if = { limit = { is_ai = yes } multiply = 0 } } prestige = { value = 500 if = { limit = { is_ai = yes } multiply = 0 } } piety = { value = 500 if = { limit = { is_ai = yes } multiply = 0 } } }

	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 100
	}
}
	}

	# No k_italia_annonaria in TFE as of the 'After the Pharaohs' update.
	{
			any_vassal = {
				has_title = title:k_italia_annonaria
			}
	}
	{
			has_title = title:k_italia_annonaria
	}
}


"common/decisions/tfe_culture_decisions.txt" = {
	{
dong_zhuo_culture_decision = {
	ai_check_interval = 0
	is_shown = {
		has_game_rule = larp_enabled
		NOT = {
			culture = {
				this = culture:soissons
			}
		}
		dynasty = dynasty:syagri
		game_start_date = 395.1.17
	}
	is_valid = {
		culture = { has_cultural_pillar = heritage_levantine }
		custom_description = {
			text = soissonstrigger1
			culture = { any_parent_culture_or_above = { this = culture:han } }
		}
		dynasty = dynasty:syagri
		has_title = title:k_israel
		custom_description = {
			text = soissonstrigger2
			current_date = 690.4.20
		}
	}
	effect = {
		save_scope_as = soi
		#Convert your, and your whole family's, culture
		set_culture = culture:soissons
		add_prestige = 10000
		hidden_effect = {
			if = {
				limit = { any_spouse = { is_landed = no } }
				every_spouse = {
					limit = {
						is_landed = no
					}
					set_culture = culture:soissons
				}
			}
			if = {
				limit = {
					any_close_family_member = {
						is_landed = no
						NOT = { is_spouse_of = root }
					}
				}
				every_close_family_member = {
					limit = {
						is_landed = no
						NOT = { is_spouse_of = root }
					}
					custom = all_unlanded_family_members
					set_culture = culture:soissons
				}
			}

			#Convert appropriate vassals, and their family
			if = {
				limit = {
					any_vassal_or_below = {
						is_ai = yes
					}
				}
				every_vassal_or_below = {
					limit = {
						is_ai = yes
					}
					set_culture = culture:soissons
				}
			}

			#Flip Counties
			every_realm_county = {
				set_county_culture = culture:soissons
			}

			culture:soissons = {
				hidden_effect = {
					reset_culture_creation_date = yes
					get_all_innovations_from = culture:han
					get_all_innovations_from = culture:hebrew
				}
			}

			trigger_event = tfe_culture.9900
		}
	}
	cost = { gold = 69 }
}
	}
}

"gfx/portraits/portrait_modifiers/00_custom_hair.txt" = {
	{
			modifier = {
                add = 200
                exists = this
                exists = character:easteregg_joe_parkin
                this = character:easteregg_joe_parkin
            }
            modifier = {
                add = 200
                exists = this
                exists = character:easteregg_alessandro_bragalini
                this = character:easteregg_alessandro_bragalini
            }
	}
}

"gfx/portraits/portrait_modifiers/50_beards_scripted_characters.txt" = {
	{
beards_scripted_characters = {

    usage = game
    selection_behavior = max

    male_beard_western_01 = { # Standard full beard
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.04 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            modifier = {
                add = 999
				exists = this
				exists = character:144998 #king_lothaire
				this = character:144998 #king_lothaire
            }
            modifier = {
                add = 999
				exists = this
                exists = character:83355 #petty_king_murchad
                this = character:83355 #petty_king_murchad
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_petter_vilberg
                this = character:easteregg_petter_vilberg
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_james_beaumont
                this = character:easteregg_james_beaumont
            }
            modifier = {
                add = 999
                exists = this
                exists = character:159038 #Coel
                this = character:159038 #ACoel
            }
            modifier = {
                add = 999
                exists = this
                exists = character:900062 #Stilicho
                this = character:900062 #Stilicho
            }
            modifier = {
                add = 999
                exists = this
                exists = character:180618 #Bahram
                this = character:180618 #Bahram
            }
            modifier = {
                add = 999
		        exists = this
                exists = character:83432 #Eochaid
                this = character:83432 #Eochaid
            }
            modifier = {
                add = 999
                exists = this
                exists = character:londinium_01 #Riothamus
                this = character:londinium_01 #Riothamus
            }
            modifier = {
                add = 999
                exists = this
                exists = character:vigg_04 #Hengest
                this = character:vigg_04 #Hengest
            }
            modifier = {
                add = 999
                exists = this
                exists = character:constantinus_05 #Ambrosius
                this = character:constantinus_05 #Ambrosius
            }
            modifier = {
                add = 999
                exists = this
                exists = character:cappadocia_07 #Ioannes
                this = character:cappadocia_07 #Ioannes
            }
            modifier = {
                add = 999
                exists = this
                exists = character:mauri_42 #Iabdas
                this = character:mauri_42 #Iabdas
            }
            modifier = {
                add = 999
                exists = this
                exists = character:997011 #Chlodomir
                this = character:997011 #Chlodomir
            }
        }
    }

    male_beard_western_02 = { # Standard goatee
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.07 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            modifier = {
                add = 999
				exists = this
                exists = character:107500 #king_sancho
                this = character:107500 #king_sancho
            }
            modifier = {
                add = 999
				exists = this
                exists = character:42018 #karlmann
                this = character:42018 #karlmann
            }
            modifier = {
                add = 999
                exists = this
                exists = character:991004 #Mundus
                this = character:991004 #Mundus
            }
        }
    }

    male_beard_western_03 = { # Short beard
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.11 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            modifier = {
                add = 999
				exists = this
                exists = character:163110 #sigurdr_snake_in_the_eye
                this = character:163110 #sigurdr_snake_in_the_eye
            }
            modifier = {
                add = 999
				exists = this
                exists = character:90104 #charles_the_bald
                this = character:90104 #charles_the_bald
            }
            modifier = {
                add = 999
				exists = this
                exists = character:109500 #king_garcia
                this = character:109500 #king_garcia
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_henrik_fahraeus
                this = character:easteregg_henrik_fahraeus
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_olof_bjork
                this = character:easteregg_olof_bjork
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_sean_hughes
                this = character:easteregg_sean_hughes
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_maximilian_olbers
                this = character:easteregg_maximilian_olbers
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_nikolaos_kaltsogiannis
                this = character:easteregg_nikolaos_kaltsogiannis
            }
        }
    }

    male_beard_western_04 = { # Short goatee
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.14 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_nils_wadensten
                this = character:easteregg_nils_wadensten
            }
            modifier = {
                add = 999
                exists = this
                exists = character:waegmunding_2 #Beowulf
                this = character:waegmunding_2 #Beowulf
            }
        }
    }

    male_beard_western_05 = { # Mustache
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.17 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            modifier = {
                add = 999
				exists = this
                exists = character:122 #king_harold
                this = character:122 #king_harold
            }
            modifier = {
                add = 999
				exists = this
                exists = character:1128 #duke_robert
                this = character:1128 #duke_robert
            }
            modifier = {
                add = 999
                exists = this
                exists = character:992016 #theodoric_the_great
                this = character:992016 #theodoric_the_great
            }
            modifier = {
                add = 999
                exists = this
                exists = character:992022 #Theodahad
                this = character:992022 #Theodahad
            }
            modifier = {
                add = 999
                exists = this
                exists = character:997003 #Merovech
                this = character:997003 #Merovech
            }
        }
    }

    male_beard_western_06 = { # Big bushy beard
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.2 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            modifier = {
                add = 999
				exists = this
                exists = character:106000 #king_antso
                this = character:106000 #king_antso
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_paul_depre
                this = character:easteregg_paul_depre
            }
            modifier = {
                add = 999
                exists = this
                exists = character:999103 #Alaric I
                this = character:999103 #Alaric I
            }
            modifier = {
                add = 999
                exists = this
                exists = character:997002 #Chlodio
                this = character:997002 #Chlodio
            }
        }
    }

    male_beard_western_07 = { # Chin strap
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.23 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            modifier = {
                add = 999
                exists = this
                exists = character:997004 #Childeric
                this = character:997004 #Childeric
            }
        }
    }

    male_beard_western_08 = { # Big with fancy mustache
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.27 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            modifier = {
                add = 999
				exists = this
                exists = character:984 #king_malcom
                this = character:984 #king_malcom
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_max_weltz
                this = character:easteregg_max_weltz
            }
            modifier = {
               	add = 999
                exists = this
		exists = character:arsacid_58 #vramshapuh
		this = character:arsacid_58 #vramshapuh
	    }
            modifier = {
               	add = 999
                exists = this
                exists = character:145071 #Heraclius
                this = character:145071 #Heraclius
	    }
        }
    }

    male_beard_western_09 = { # Pointy beard
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.30 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            modifier = {
                add = 999
                exists = this
                exists = character:159431 #Conan Meriadoc
                this = character:159431 #Conan Meriadoc
            }
            modifier = {
                add = 999
                exists = this
                exists = character:maldras_06 #Hermenerich
                this = character:maldras_06 #Hermenerich
            }
            modifier = {
                add = 999
                exists = this
                exists = character:997009 #Theodoric Meroving
                this = character:997009 #Theodoric Meroving
            }
            modifier = {
                add = 999
                exists = this
                exists = character:992063 #Fritigern
                this = character:992063 #Fritigern
            }
        }
    }

    male_beard_western_10 = { # Chin goatee
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.33 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
        }
    }

    male_beard_mena_01 = { # Very curly medium length full beard
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.35 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0

		modifier = {
                add = 999
                exists = this
                exists = character:982001 #Abu Karib
                this = character:982001 #Abu Karib
            }
        }
    }

    male_beard_mena_02 = { # Big with small mustache
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.39 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            modifier = {
                add = 999
				exists = this
                exists = character:3924 #emir_yahya
                this = character:3924 #emir_yahya
            }
	    modifier = {
                add = 999
                exists = this
                exists = character:lakhmid_06 #al-Nu'Man
                this = character:lakhmid_06 #al-Nu'Man
            }
	    modifier = {
                add = 999
                exists = this
                exists = character:rugian_03 #Feletheus
                this = character:rugian_03 #Feletheus
            }
        }
    }

    male_beard_mena_03 = { # Big chin strap
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.42 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
        }
    }

    male_beard_mena_04 = { # Short stylish
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.45 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            modifier = {
                add = 999
				exists = this
                exists = character:quadi_04 # Hermerich of the Quadi
                this = character:quadi_04 # Hermerich of the Quadi
            }
            modifier = {
                add = 999
                exists = this
                exists = character:syagri_06 #Syagrus
                this = character:syagri_06 #Syagrus
            }
            modifier = {
                add = 999
                exists = this
                exists = character:997005 #Chlodovech
                this = character:997005 #Chlodovech
            }
            modifier = {
                add = 999
                exists = this
                exists = character:belisarius_001 #Belisarius
                this = character:belisarius_001 #Belisarius
            }
        }
    }

    male_beard_northern_01 = { # Big wide
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.48 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            modifier = {
                add = 999
				exists = this
                exists = character:163111 #ivar_the_boneless
                this = character:163111 #ivar_the_boneless
            }
            modifier = {
                add = 999
				exists = this
                exists = character:102531 #harald_hardrade
                this = character:102531 #harald_hardrade
            }
        }
    }

    male_beard_northern_02 = { # Single braid
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.52 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            modifier = {
                add = 999
				exists = this
                exists = character:163112 #halfdan_whiteshirt
                this = character:163112 #halfdan_whiteshirt
            }
        }
        weight = {
            base = 0
            modifier = {
                add = 999
				exists = this
                exists = character:6878 #jarl_haesteinn
                this = character:6878 #jarl_haesteinn
            }
        }
    }

    male_beard_northern_03 = { # Beaded beard
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.54 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            modifier = {
                add = 999
				exists = this
                exists = character:163108 #bjorn_ironside
                this = character:163108 #bjorn_ironside
            }
            modifier = {
                add = 999
				exists = this
                exists = character:40605 #rurik
                this = character:40605 #rurik
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_peter_johannesson
                this = character:easteregg_peter_johannesson
            }
		modifier = {
		add = 999
		exists = character:997013 #Chlothar
		this = character:997013 #Chlothar
	    }
	   }
    }

    male_beard_steppe_01 = { # long at chin with mustache
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.58 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
		modifier = {
		add = 999
		exists = character:ashina_03 #Tuwu
		this = character:ashina_03 #Tuwu
	    }
		modifier = {
		add = 999
		exists = character:ashina_04 #Bumin
		this = character:ashina_04 #Bumin
	    }
	   }
    }

    male_beard_steppe_02 = { # low rough 
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.61 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            modifier = {
                add = 999
				exists = this
                exists = character:159137 #almos_arpad
                this = character:159137 #almos_arpad
            }
		modifier = {
		add = 999
		exists = character:990006 #Attila
		this = character:990006 #Attila
	    }
		modifier = {
		add = 999
		exists = character:ashina_05 #Istemi
		this = character:ashina_05 #Istemi
	    }
           modifier = {
                add = 999
                exists = this
                exists = character:hephthalite_misc_017 #Katulf
                this = character:hephthalite_misc_017 #Katulf
            }
	   }
    }

    male_beard_sub_saharan_01 = { # Full african beard medium
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.64 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
        }
        weight = {
               	base = 0
		modifier = {
			add = 999
                	exists = this
                	exists = character:nuvelan_11 #Gildo
                	this = character:nuvelan_11 #Gildo
		}
		modifier = {
			add = 999
                	exists = this
                	exists = character:aksum_16 #Ouazeba
                	this = character:aksum_16 #Ouazeba
		}
            	modifier = {
               	add = 999
                exists = this
		        exists = character:himyarite_30 #Abraha
		        this = character:himyarite_30 #Abraha
	        }
	}
    }

    male_beard_sub_saharan_02 = { # Stylish african goatee
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.67 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            modifier = {
                add = 999
                exists = this
                exists = character:aksum_17 #eon
                this = character:aksum_17 #eon
            }
        }
    }

    male_beard_sub_saharan_03 = { # Full african beard long
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.70 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
        }
    }

    male_beard_indian_01 = { # Handlebar mustache
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.74 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            modifier = {
				add = 999
				exists = this
				exists = character:easteregg_struan_mccallum
				this = character:easteregg_struan_mccallum
			}
	    modifier = {
                add = 999
                exists = this
                exists = character:alchonid_005 #Khingila
                this = character:alchonid_005 #Khingila
            }
	    modifier = {
                add = 999
                exists = this
                exists = character:arsacid_64 #Mystakon
                this = character:arsacid_64 #Mystakon
            }
        }
    }

    male_beard_indian_02 = { # Indian pointy
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.77 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            modifier = {
                add = 999
                exists = this
                exists = character:900016 #Faramund
                this = character:900016 #Faramund
            }
	    modifier = {
                add = 999
                exists = this
                exists = character:xionite_001 #Kidara
                this = character:xionite_001 #Kidara
            }
	    modifier = {
                add = 999
                exists = this
                exists = character:145072 #Focas
                this = character:145072 #Focas
            }
	    modifier = {
                add = 999
                exists = this
                exists = character:greek_17 #Plutarch
                this = character:greek_17 #Plutarch
            }
        }
    }

    male_beard_indian_03 = { # Very curly medium length full beard
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.80 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0

        }
    }

    male_beard_rtt_01 = { # Wizard beard
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.0 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
        }
    }

    ### FP2 Beards ###

    male_beard_fp2_iberian_christian_01 = { # Twin braids with metal rings
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_02
                value = 0.11 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
        }
    }

    male_beard_fp2_iberian_christian_02 = { # Twin braids with metal rings
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_02
                value = 0.235 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            modifier = {
                add = 999
                exists = this
                exists = character:996002 #Odovacar
                this = character:996002 #Odovacar
            }
             modifier = {
                add = 999
                exists = this
                exists = character:168137
                this = character:168137
            }

            modifier = {
                add = 999
               	exists = this
               	exists = character:70292
                this = character:70292
            }
        }
    }

    male_beard_fp2_iberian_christian_03 = { # Twin braids with metal rings
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_02
                value = 0.36 # For the randomness to work correctly
            }
        }
        weight = {
            base = 0

            modifier = {
                add = 999
                exists = this
                exists = character:73813
                this = character:73813
            }

            modifier = {
                add = 999
                exists = this
                exists = character:surunbaqi0001
                this = character:surunbaqi0001
            }
        }
    }

    male_beard_fp2_iberian_christian_04 = {
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_02
                value = 0.485 # For the randomness to work correctly
            }
        }
        weight = {
            base = 0

            modifier = {
                add = 999
                exists = this
                exists = character:barcelona_00003
                this = character:barcelona_00003
            }
            modifier = {
                add = 999
                exists = this
                exists = character:200280 #Theodis
                this = character:200280 #Theodis
            }
            modifier = {
                add = 999
                exists = this
                exists = character:997015 #Theodobert
                this = character:997015 #Theodobert
            }
        }
    }

    male_beard_fp2_iberian_muslim_01 = { # Thick Groomed Beard
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_02
                value = 0.61 # For the randomness to work correctly
            }
        }
        weight = {
            base = 0

             modifier = {
                add = 999
                exists = this
                exists = character:70150
                this = character:70150
            }

            modifier = {
                add = 999
                exists = this
                exists = character:180628 #Khosrau
                this = character:180628 #Khosrau
            }

             modifier = {
                add = 999
                exists = this
                exists = character:73683
                this = character:73683
            }
            modifier = {
                add = 999
                exists = this
                exists = character:200284 #euric
                this = character:200284 #euric
            }
            modifier = {
                add = 999
                exists = this
                exists = character:aelling_01 #Aelle
                this = character:aelling_01 #Aelle
            }
            modifier = {
                add = 999
                exists = this
                exists = character:159012 #Cadwallon
                this = character:159012 #Cadwallon
            }
        }
    }

    male_beard_fp2_iberian_muslim_02 = { # Scholar's beard
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_02
                value = 0.735 # For the randomness to work correctly
            }
        }
        weight = {
            base = 0

              modifier = {
                add = 999
                exists = this
                exists = character:danis0005
                this = character:danis0005
            }
             modifier = {
                add = 999
                exists = this
                exists = character:vandals_003
                this = character:vandals_003
            }
            modifier = {
               	add = 999
                exists = this
		exists = character:145237 #julian_the_apostate
		this = character:145237 #julian_the_apostate
            }
             modifier = {
                add = 999
                exists = this
                exists = character:greek_20 #Proklos
                this = character:greek_20 #Proklos
            }
        }
    }



    male_beard_fp2_iberian_muslim_03 = { # Forked beard
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_02
                value = 0.860 # For the randomness to work correctly
            }
        }
        weight = {
            base = 0
            modifier = {
                add = 999
                exists = this
                exists = character:mauri_36 #Masties
                this = character:mauri_36 #Masties
            }
        }
    }

    no_beard = {
    	dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_02
                value = 1 # For the randomness to work correctly
            }
        }
        weight = {
            base = 0
            modifier = {
                add = 999
				exists = this
				exists = character:73857
				this = character:73857
            }
            modifier = {
                add = 999
	        	exists = this
                exists = character:nepos_02 #Nepos
                this = character:nepos_02 #Nepos
            }
            modifier = {
                add = 999
                exists = this
                exists = character:70512 #Justinian
                this = character:70512 #Justinian
            }
            modifier = {
                add = 999
                exists = this
                exists = character:205141 #Ceredig
                this = character:205141 #Ceredig
            }
            modifier = {
                add = 999
                exists = this
                exists = character:vandals_005 #Hilderic
                this = character:vandals_005 #Hilderic
            }
            modifier = {
                add = 999
                exists = this
                exists = character:vandals_012 #Gelimer
                this = character:vandals_012 #Gelimer
            }
            modifier = {
                add = 999
                exists = this
                exists = character:992023 #Athalaric
                this = character:992023 #Athalaric
            }
           modifier = {
                add = 999
                exists = this
                exists = character:70515  #Zeno
                this = character:70515  #Zeno
            }
           modifier = {
                add = 999
                exists = this
                exists = character:70517  #Leo
                this = character:70517  #Leo
            }
           modifier = {
                add = 999
                exists = this
                exists = character:70514  #Anastasius
                this = character:70514  #Anastasius
            }
           modifier = {
                add = 999
                exists = this
                exists = character:armenian_01  #Narses
                this = character:armenian_01  #Narses
            }
           modifier = {
                add = 999
                exists = this
                exists = character:mauro_roman_kings_02  #Massonas
                this = character:mauro_roman_kings_02  #Massonas
            }
           modifier = {
                add = 999
                exists = this
                exists = character:samo_01  #Samo
                this = character:samo_01  #Samo
            }
        }
    }


    ### FP1 Beards ###
    male_beard_fp1_01 = { # Twin braids with metal rings
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.84 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
        }
    }

    male_beard_fp1_02 = { # Short low beard
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.1 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
           modifier = {
                add = 999
                exists = this
                exists = character:159117  #Kubrat
                this = character:159117  #Kubrat
            }
        }
    }

    male_beard_fp1_03 = { # Wavy pointy beard
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.90 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            
        }
    }

    male_beard_fp1_04 = { # Huge braid
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.94 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
        }
    }

    male_beard_fp1_05 = { # Long narrow wavy
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.97 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            modifier = {
                add = 999
                exists = this
                exists = character:997012 #Childebert
                this = character:997012 #Childebert
            }
            modifier = {
                add = 999
                exists = this
                exists = character:992003 #Hermanaric
                this = character:992003 #Hermanaric
            }
        }
    }
}
	}
}

"gfx/portraits/portrait_modifiers/50_headgear_scripted_characters.txt" = {
	{
headgear_scripted_characters = {

    usage = game
    selection_behavior = max
    priority = 10

    no_headgear = { # No headgear
        dna_modifiers = {
            accessory = {
                mode = add
                gene = headgear
                template = fp2_scripted_headgear_01
                value = 0.1 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
		modifier = {
			add = 50
			exists = this
			exists = character:73857
                	this = character:73857
		}
		modifier = {
			add = 50
			exists = this
			exists = character:108501
              	  	this = character:108501
		}
            	modifier = {
               	 	add = 999
                	exists = this
                	exists = character:900062 #Stilicho
                	this = character:900062 #Stilicho
		}
            	modifier = {
               	 	add = 999
                	exists = this
                	exists = character:nuvelan_11 #Gildo
                	this = character:nuvelan_11 #Gildo
		}
		modifier = {
                	add = 999
                	exists = this
                	exists = character:belisarius_001 #Belisarius
                	this = character:belisarius_001 #Belisarius
		}
          }
    }

    male_headgear_secular_fp2_iberian_muslim_common_01_low = {
        dna_modifiers = {
            accessory = {
                mode = add
                gene = headgear
                template = fp2_scripted_headgear_01
                value = 0.5  # For the randomness to work correctly
            }
        }   
        weight = {
			base = 0
			modifier = {
				add = 50
				exists = this
				exists = character:73813 # Musa
                this = character:73813
			}
		}
    	}

    	male_headgear_secular_fp2_iberian_muslim_high_nobility_01 = {
        dna_modifiers = {
            accessory = {
                mode = add
                gene = headgear
                template = fp2_scripted_headgear_01
                value = 1 # For the randomness to work correctly
            }
        }   
        weight = {
			base = 0
			modifier = {
				add = 50
				exists = this
				exists = character:danis0005 # Adanis
                this = character:danis0005
			}
		}
	}
	male_headgear_secular_roman_pannonian_hat_high_nobility = {
		dna_modifiers = {
			accessory = {
				mode = add
				gene = headgear
				template = roman_pannonian_hat_high
				value = 1
			}
		}
		weight = {
			base = 0
            			modifier = {
               	 		add = 999
                		exists = this
                		exists = character:nepos_02 #Nepos
                		this = character:nepos_02 #Nepos
			}
		}
		weight = {
			base = 0
            			modifier = {
               	 		add = 999
                		exists = this
                		exists = character:syagri_06 #Syagrius
                		this = character:syagri_06 #Syagrius
			}
		}
	}
	male_headgear_secular_western_high_nobility = {
		dna_modifiers = {
			accessory = {
				mode = add
				gene = headgear
				template = western_high_nobility
				value = 1
			}
		}
		weight = {
			base = 0
				modifier = {
                		add = 999
                		exists = this
                		exists = character:900016 #Faramund
                		this = character:900016 #Faramund
			}
		}
	}
	male_headgear_secular_roman_diadem = {
		dna_modifiers = {
			accessory = {
				mode = add
				gene = headgear
				template = roman_diadem 
				value = 1
			}
		}
		weight = {
			base = 0
				modifier = {
                		add = 999
                		exists = this
                		exists = character:70515  #Zeno
                		this = character:70515  #Zeno
			}
		}
	}
	male_headgear_secular_sassanid_crown = {
		dna_modifiers = {
			accessory = {
				mode = add
				gene = headgear
				template = ep1_sassanid_crown
				value = 1
			}
		}
		weight = {
			base = 0
				modifier = {
                		add = 999
                		exists = this
                		exists = character:180628 #Khosrau
                		this = character:180628 #Khosrau
			}
		}
	}
}
	}
}


"events/gothic_wars_events.txt" = {
	{
### King of the Goths is crowned after the Death of Theodosius and starts a rebellion 
### by Juli
gothic_wars.0001 = {
	type = character_event
	theme = war
	title = gothic_wars_0001.t
	desc = gothic_wars_0001.desc
	override_icon = { reference = "gfx/interface/icons/event_types/special_visigoths.dds" }

	left_portrait = {
		character = ROOT 
		animation = rage 
	}
	right_portrait = {
		character = character:70534
		animation = zealous
	}
	lower_left_portrait = {
		character = title:e_western_roman_empire.holder
		animation = cynical
	}
	lower_right_portrait = {
		character = title:e_byzantium.holder
		animation = grief
	}
	
	option = {
		name = gothic_wars_0001.a
		add_character_modifier = {
			modifier = TFE_king_of_the_goths_modifier # They became King of the Goths
		}
	}
}
### King of the Goth Has won the rebellion and now can choose to press demands on the emperor
### by Juli
gothic_wars.0002 = {
	type = character_event
	theme = war
	title = gothic_wars_0002.t
	desc = gothic_wars_0002.desc
	override_icon = { reference = "gfx/interface/icons/event_types/special_visigoths.dds" }

	left_portrait = {
		character = ROOT 
		animation = personality_zealous 
	}
	right_portrait = {
		character = title:e_byzantium.holder
		animation = shame
	}
	
	option = { # The King chooses to pressure the Emperor into giving him an office
		custom_tooltip = gothic_wars_0002.option.a.tooltip
		name = gothic_wars_0002.a
		title:e_byzantium.holder = {trigger_event = gothic_wars.0003 }
		ai_chance = {
			# AI should always be fairly likely to pick this.
			base = 100
		}
	}
	option = { # The King chooses to forgive the romans and settle with the plundering he gained
		name = gothic_wars_0002.b
		ai_chance = {
			base = 1
		}
	}
}
### Emperor of Byzantium recieves demand from the Goths
### by Juli
gothic_wars.0003 = {
	type = character_event
	theme = war
	title = gothic_wars_0003.t
	desc = gothic_wars_0003.desc
	override_icon = { reference = "gfx/interface/icons/event_types/special_visigoths.dds" }

	left_portrait = {
		character = title:k_visigoths.holder
		animation = personality_greedy
	}
	right_portrait = {
		character = title:e_byzantium.holder
		animation = vengeful
	}
	
	option = { # The Emperor accepts the demands
		name = gothic_wars_0003.a
		title:k_visigoths.holder = {trigger_event = gothic_wars.0004 }
		ai_chance = {
			# AI should always be fairly likely to pick this.
			base = 100
		}
	}
	option = { # The Emperor declines the offer, making the goths rebel again
		name = gothic_wars_0003.b
		title:k_visigoths.holder = {
			start_war = {
				casus_belli = depose_war
				target = title:e_byzantium.holder
				target_title = title:e_byzantium
			}
		}
		ai_chance = {
			base = 1
		}
	}
}
### King of the Goths is granted an Office in Illyricum
### by Juli
gothic_wars.0004 = {
	type = character_event
	theme = war
	title = gothic_wars_0004.t
	desc = gothic_wars_0004.desc
	override_icon = { reference = "gfx/interface/icons/event_types/special_visigoths.dds" }

	left_portrait = {
		character = ROOT 
		animation = personality_bold
	}
	right_portrait = {
		character = title:e_byzantium.holder
		animation = shame
	}
	
	option = { # The Emperor accepted the demands and grants Illyricum to Alaric
		name = gothic_wars_0004.a
		every_county_in_region = {
			region = custom_roman_illyricum
			limit = {
				holder = {
					highest_held_title_tier < tier_kingdom #to not vassalize the vicar
					top_liege = title:e_byzantium.holder
				}
			}
			create_title_and_vassal_change = {
			  type = conquest
			  save_scope_as = change
			  add_claim_on_loss = no
			}
			holder = {
				change_liege = {
					liege = root
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
		}
		hidden_effect = {
			every_realm_county = {
				limit = {
					NOT = {
						any_county_in_region = {
							region = custom_roman_illyricum
							THIS = PREV
						}
					}
					holder = {
						OR = {
							any_liege_or_above = {
								THIS = root
							}
							THIS = root
						}
					}
				}
				if = {
					limit = {
						holder = root
					}
					create_character = {
						location = THIS.title_province
						gender = male
						dynasty = generate
						faith = root.faith
						culture = root.culture
						save_scope_as = local_warlord
					}
					create_title_and_vassal_change = {
						type = usurped
						save_scope_as = change
						add_claim_on_loss = no
					}
					change_title_holder = {
						holder = scope:local_warlord
						change = scope:change
						take_baronies = yes
					}
					resolve_title_and_vassal_change = scope:change
					create_title_and_vassal_change = {
						type = conquest
						save_scope_as = change
						add_claim_on_loss = no
					}
					scope:local_warlord = {
						change_liege = {
							liege = title:e_byzantium.holder
							change = scope:change
						}
					}
					resolve_title_and_vassal_change = scope:change
				}
				else = {
					holder = {
						create_title_and_vassal_change = {
							type = conquest
							save_scope_as = change
							add_claim_on_loss = no
						}
						change_liege = {
							liege = title:e_byzantium.holder
							change = scope:change
						}
						resolve_title_and_vassal_change = scope:change
					}
				}
				
			}
		}
		add_pressed_claim = title:k_italia_suburbicariae
	}
}
	}

	{
### Invasion of the Gothic pagan Radagaisus around in 405-406 - Hróð
gothic_wars.0011 = {
	scope = none
	hidden = yes

	immediate = {
		debug_log = "Radagaisus appeared!"
		debug_log_date = yes
		spawn_radagaisus_character_effect = yes
	}
}
	}

	{
## Radagaisus notification event global - Hróð
gothic_wars.0012 = {
	type = character_event
	theme = war
	title = gothic_wars_0012.t
	desc = gothic_wars_0012.desc

	left_portrait = {
		character = character:radagaisian_02
		animation = rage 
	}
	right_portrait = {
		character = title:e_western_roman_empire.holder
		animation = fear
	}

	option = {
		name = gothic_wars_0012.a
	}
}
## Radagaisus notification event for defender - Hróð
gothic_wars.0013 = {
	type = character_event
	theme = war
	title = gothic_wars_0012.t
	desc = gothic_wars_0013.desc

	left_portrait = {
		character = character:radagaisian_02
		animation = rage 
	}
	right_portrait = {
		character = ROOT
		animation = fear
	}

	option = {
		name = gothic_wars_0013.a
	}
}
## Defender event if Radagaisus wins - Hróð
gothic_wars.0014 = {
	type = character_event
	theme = war
	title = gothic_wars_0012.t
	desc = gothic_wars_0014.desc

	left_portrait = {
		character = character:radagaisian_02
		animation = personality_bold
	}
	right_portrait = {
		character = scope:defender
		animation = shame
	}

	option = {
		name = gothic_wars_0014.a
		scope:defender = {
			add_pressed_claim = title:k_italia_annonariae
			add_pressed_claim = title:k_italia_suburbicariae
		}
	}
}
## Event for the Visigothic King if Radagaisus loses - Hróð
gothic_wars.0015 = {
	type = character_event
	theme = war
	title = gothic_wars_0012.t
	desc = gothic_wars_0015.desc

	left_portrait = {
		character = scope:defender
		animation = personality_bold
	}
	right_portrait = {
		character = character:radagaisian_02
		animation = grief
	}

	option = {
		name = gothic_wars_0015.a
		scope:visigothic_king = {
			add_unpressed_claim = title:k_italia_annonariae
			add_unpressed_claim = title:k_italia_suburbicariae
		}
		title:e_western_roman_empire.holder = {
			add_opinion = {
				target = scope:visigothic_king
				modifier = angry_opinion
				opinion = -30
			}
		}
		title:e_byzantium.holder = {
			add_opinion = {
				target = scope:visigothic_king
				modifier = angry_opinion
				opinion = -30
			}
		}
		spawn_smaller_gothic_troops_effect = yes
		ai_chance = {
			base = 50

			opinion_modifier = {
				if = {
					exists = scope:visigothic_king.liege
				}
				who = scope:visigothic_king
				opinion_target = scope:visigothic_king.liege
				multiplier = 1
			}
		}
	}
	option = {
		name = gothic_wars_0015.b
		title:e_western_roman_empire.holder = {
			add_opinion = {
				target = scope:visigothic_king
				modifier = pleased_opinion
				opinion = 30
			}
		}
		title:e_byzantium.holder = {
			add_opinion = {
				target = scope:visigothic_king
				modifier = pleased_opinion
				opinion = 30
			}
		}
		ai_chance = {
			base = 50

			opinion_modifier = {
				if = {
					exists = scope:visigothic_king.liege
				}
				who = scope:visigothic_king
				opinion_target = scope:visigothic_king.liege
				multiplier = 1
			}
		}
	}
}
	}
}

"common/scripted_effects/TFE_landless_adventurer_effects.txt" = {
	{
		############################################################
		# 
		# 361 LAAMP
		# 
		############################################################

		# Charietto
		character:ripurian_misc_001 ?= {
			if = {
				limit = {
					is_alive = yes
					is_landless_adventurer = yes
				}
				add_realm_law_skip_effects = camp_purpose_brigands
			}
		}

		# Moses the Black
		character:nobatia_12 ?= {
			if = {
				limit = {
					is_alive = yes
					is_landless_adventurer = yes
				}
				add_realm_law_skip_effects = camp_purpose_brigands
			}
		}
	}

	{
		############################################################
		# 
		# 395 LAAMP
		# 
		############################################################

		# Olympiodorus
		character:aegyptian_misc_009 ?= {
			if = {
				limit = {
					is_alive = yes
					is_landless_adventurer = yes
				}
				add_realm_law_skip_effects = camp_purpose_scholars
			}
		}

		# Claudius Marius Victorius/Victorinus
		character:gallo_roman_misc_010 ?= {
			if = {
				limit = {
					is_alive = yes
					is_landless_adventurer = yes
				}
				add_realm_law_skip_effects = camp_purpose_scholars
			}
		}

		# Fravitta
		character:992079 ?= {
			if = {
				limit = {
					is_alive = yes
					is_landless_adventurer = yes
				}
				add_realm_law_skip_effects = camp_purpose_mercenaries
			}
		}
	}

	{
		############################################################
		# 
		# 476 LAAMP
		# 
		############################################################


		# Damascius
		character:syrian_misc_06 ?= {
			if = {
				limit = {
					is_alive = yes
					is_landless_adventurer = yes
				}
				add_realm_law_skip_effects = camp_purpose_scholars
			}
		}

		# Pamprepius
		character:aegyptus_84 ?= {
			if = {
				limit = {
					is_alive = yes
					is_landless_adventurer = yes
				}
				add_realm_law_skip_effects = camp_purpose_scholars
			}
		}
	}

	{
		############################################################
		# 
		# 532 LAAMP
		# 
		############################################################

		# Cosmas Indicopleustes
		character:aegyptian_misc_008 ?= {
			if = {
				limit = {
					is_alive = yes
					is_landless_adventurer = yes
				}
				add_realm_law_skip_effects = camp_purpose_explorers
			}
		}
	}
}

"events/liang_events.txt" = {
	{
# Meng Min is a cool guy, but destiny calls for Li Gao to do his part as the distant ancestor of the Tang Dynasty
liang.0012 = {
	type = character_event
	hidden = yes
	
	trigger = {
		this = character:western_liang_043 # Meng Min
		character:western_liang_005 = { # Li Gao is alive
			is_alive = yes
		}
	}

	immediate = {
		death = {
			death_reason = death_natural_causes
		}
	}
}
	}

	{
# Give Li Gao the territory
liang.0010 = {
	type = character_event
	title = liang.0010.t
	desc = liang.0010.desc
	theme = realm
	
	left_portrait = {
		character = scope:governor
		animation = personality_content
	}
	right_portrait = {
		character = scope:li_gao
		animation = personality_forgiving
	}
	lower_center_portrait = {
		character = scope:guo_nen
	}

	trigger = {
		game_start_date < 400.1.1
		game_start_date > 385.1.1
		NOT = { has_global_variable = TFE_li_gao_becomes_governor }
		scope:title = {
			this = title:d_guiyi
		}
		character:western_liang_005 ?= {
			is_alive = yes
			NOT = { has_title = scope:title }
		}
	}

	immediate = {
		set_global_variable = {
			name = TFE_li_gao_becomes_governor
			value = yes
		}
		save_scope_as = governor
		character:western_liang_005 = {
			save_scope_as = li_gao
		}
		character:liang_007 = {
			save_scope_as = guo_nen
		}
	}

	# Give Li Gao the title
	option = {
		name = liang.0010.a
		add_character_flag = gave_li_gao_title
		scope:li_gao = {
			trigger_event = liang.0011
		}
		show_as_tooltip = {			
			scope:li_gao = {
				get_title = scope:title
			}
			if = {
				limit = {
					has_title = title:d_aksay
				}
				scope:li_gao = {
					get_title = title:d_aksay
				}
			}
			if = {
				limit = {
					has_title = title:c_guazhou
				}
				scope:li_gao = {
					get_title = title:c_guazhou
				}
			}
			scope:li_gao = {
				add_prestige = 500
			}
		}
		if = {
			limit = {
				scope:li_gao = {
					is_ai = yes
				}
			}	
			set_player_character = scope:li_gao	
		}
	}

	# Don't give Li Gao the title
	option = {
		name = liang.0010.b
		trigger = {
			is_ai = no
		}
		add_prestige = -250
		add_character_modifier = {
			modifier = TFE_refused_to_give_up_dunhuang
		}
		scope:li_gao = {
			add_pressed_claim = scope:title		
		}
		if = {
			limit = {
				has_title = title:d_aksay
			}
			scope:li_gao = {
				add_pressed_claim = title:d_aksay
			}
		}
		if = {
			limit = {
				has_title = title:c_guazhou
			}
			scope:li_gao = {
				add_pressed_claim = title:c_guazhou
			}
		}	
	}

	after = {
		hidden_effect = {
			if = {
				limit = {
					has_character_flag = gave_li_gao_title
				}
				if = {
					limit = {
						is_landed = yes
						highest_held_title_tier < tier_duchy
					}
					create_title_and_vassal_change = {
						type = swear_fealty
						save_scope_as = change
					}
					scope:governor = {
						change_liege = {
							liege = scope:li_gao
							change = scope:change
						}
					}
					resolve_title_and_vassal_change = scope:change
				}
				else_if = {
					limit = {
						is_landed = no
					}
					scope:li_gao = {
						add_courtier = scope:governor
					}
				}
				remove_character_flag = gave_li_gao_title
			}
		}
	}
}
	}
}

"events/roman_events.txt" = {
	{
western_roman.0027 = {
	type = character_event
	title = western_roman.0027.t
	desc = western_roman.0027.desc
	theme = realm
	left_portrait = {
		character = root
		animation = personality_vengeful
	}
	right_portrait = {
		character = character:orestes_02
		animation = personality_greedy
	}

	immediate = {
		play_music_cue = "TFE_General_Cue"
	}

	option = {
		name = western_roman.0027.a
		add_stress = major_stress_gain
		set_relation_rival = {
			target = character:996002
			reason = rival_usurper
		}
		add_pressed_claim = title:k_italy
		add_pressed_claim = title:d_romagna
		add_pressed_claim = title:c_ravenna
		remove_trait = diligent
		add_trait = impatient
		custom_tooltip = nepos_ambition_tooltip
		set_global_variable = {
			name = nepos_ambition_var
			value = yes
		}
		ai_chance = {
			base = 90
		}
	}
	option = {
		name = western_roman.0027.b
		add_prestige = 500
		every_vassal = {
			add_opinion = {
				modifier = friendliness_opinion
				target = scope:root
				opinion = 20
			}
		}
		remove_trait = ambitious
		add_trait = content
		ai_chance = {
			base = 10
		}
	}
}
	}

	{
western_roman.0038 = {
	type = character_event
	title = western_roman.0038.t
	desc = western_roman.0038.desc
	theme = realm
	override_icon = { reference = "gfx/interface/icons/event_types/special_rhomaion.dds" }

	left_portrait = {
		character = root
		animation = anger
	}
	lower_center_portrait = {
		character = global_var:gelimer
		animation = personality_greedy
	}
	right_portrait = {
		character = global_var:hildirix
		animation = fear
	}

	immediate = {
		title:e_byzantium.holder = {
			add_legitimacy = -400
		}
		if = {
			limit = {
				character:vandals_005 = {
					is_alive = yes
				}
			}
			set_global_variable = {
				name = hildirix
				value = character:vandals_005
			}
			character:vandals_005 = {
				add_character_flag = {
					flag = is_being_tortured
					years = 20 #
				}
			}
			title:k_vandals.holder = {
				imprison = {
					target = global_var:hildirix
					type = house_arrest
				}
			}
			set_global_variable = {
				name = gelimer
				value = title:k_vandals.holder
			}
		}
		add_character_modifier = {
			modifier = renovatio_imperii
			years = 10
		}
	}

	option = {
		name = western_roman.0038.a
		ai_chance = {
			base = 100
		}		
	}

	option = {
		name = western_roman.0038.b
		ai_chance = {
			base = 0
		}		
	}

}
	}

	{
western_roman.0039 = {
	type = character_event
	title = western_roman.0039.t
	desc = western_roman.0039.desc
	theme = realm
	override_icon = { reference = "gfx/interface/icons/event_types/special_rhomaion.dds" }

	left_portrait = {
		character = root
		animation = personality_vengeful
	}
	lower_center_portrait = {
		character = scope:commander_2
		animation = personality_bold
	}
	right_portrait = {
		character = scope:commander_1
		animation = personality_bold
	}

	immediate = {
		title:k_vandals.holder = {
			set_scope_as = target_ruler
		}
		if = {
			limit = {
				global_var:belisarius = {
					is_alive = yes
				}
			}
			global_var:belisarius = {
				save_scope_as = commander_1
			}
		}
		else_if = {
			limit = {
				character:armenian_01 = {
					is_alive = yes
				}
				character:armenian_01 = {
					is_courtier_of = root
				}
			}
			character:armenian_01 = {
				save_scope_as = commander_1
			}
		}
		else_if = {
			limit = {
				character:armenian_02 = {
					is_alive = yes
				}
				character:armenian_02 = {
					is_courtier_of = root
				}
			}
			character:armenian_02 = {
				save_scope_as = commander_1
			}
		}
		else = {
			random_courtier = {
				limit = {
					is_adult = yes
					is_male = yes
				}
				save_scope_as = commander_1
			}
		}
		random_courtier = {
			limit = {
				NOT = { THIS = scope:commander_1 }
				is_adult = yes
				is_male = yes
			}
			save_scope_as = commander_2
		}
	}

	option = {
		name = western_roman.0039.a
		hidden_effect = {
			set_global_variable = {
				name = justinian_commander
				value = scope:commander_1
			}
			start_vandalic_war_effect = yes
		}
		ai_chance = {
			base = 100
		}		
	}

	option = {
		name = western_roman.0039.b
		hidden_effect = {
			set_global_variable = {
				name = justinian_commander
				value = scope:commander_2
			}
			start_vandalic_war_effect = yes
		}
		ai_chance = {
			base = 0
		}		
	}
}
	}

	{
western_roman.0041 = {
	type = character_event
	title = western_roman.0041.t
	desc = western_roman.0041.desc
	theme = realm
	override_icon = { reference = "gfx/interface/icons/event_types/special_rhomaion.dds" }

	left_portrait = {
		character = root
		animation = personality_honorable
	}

	immediate = {
		global_var:justinian_commander = {
			add_character_flag = STOP_ADMIN
		}
		title:k_vandals.holder = {
			save_scope_as = justinian_commander
		}
		set_global_variable = {
			name = vandalic_war_won
			value = yes
		}
		title:e_byzantium.holder = {
			add_legitimacy = 100
		}
		if = {
			limit = {
				character:vandals_146 = {
					is_alive = yes
					is_landed = yes
					top_liege = root
				}
			}
			character:vandals_146 = {
				vassal_contract_set_obligation_level = { type = feudal_government_taxes level = 2 }
				vassal_contract_set_obligation_level = { type = feudal_government_levies level = 1 }
				vassal_contract_set_obligation_level = { type = religious_rights level = 1 }
			}
		}
	}

	option = {
		name = western_roman.0041.a
		if = {
			limit = {
				exists = title:d_tunis.holder
				title:d_tunis.holder = { is_vassal_or_below_of = scope:justinian_commander }
			}
			title:d_tunis = {
				save_temporary_scope_as = current_county
			}
			create_title_and_vassal_change = {
				type = usurped
				save_scope_as = change
				add_claim_on_loss = no
			}
			scope:current_county = {
				change_title_holder = {
					holder = scope:justinian_commander
					change = scope:change
					take_baronies = yes
				}
			}
			resolve_title_and_vassal_change = scope:change
		}
		if = {
			limit = {
				title:c_tunis.holder = { is_vassal_or_below_of = scope:justinian_commander }
			}
			title:c_tunis = {
				save_temporary_scope_as = current_county
			}
			create_title_and_vassal_change = {
				type = usurped
				save_scope_as = change
				add_claim_on_loss = no
			}
			scope:current_county = {
				change_title_holder = {
					holder = scope:justinian_commander
					change = scope:change
					take_baronies = yes
				}
			}
			resolve_title_and_vassal_change = scope:change
		}
		end_vandalic_war_africae_effect = yes
		global_var:justinian_commander = {
			remove_character_flag = STOP_ADMIN
		}
		ai_chance = {
			base = 5
		}		
	}

	option = {
		name = western_roman.0041.b
		trigger = {
			NOT = { scope:justinian_commander = character:belisarius_001 }
		}
		end_vandalic_war_africae_effect = yes
		title:k_africae = {
			save_temporary_scope_as = current_county
		}
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:current_county = {
			change_title_holder = {
				holder = root
				change = scope:change
				take_baronies = yes
			}
		}
		resolve_title_and_vassal_change = scope:change

		title:c_trapani = {
			save_temporary_scope_as = current_county
		}
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:current_county = {
			change_title_holder = {
				holder = scope:justinian_commander
				change = scope:change
				take_baronies = yes
			}
		}

		resolve_title_and_vassal_change = scope:change

		title:c_mahdiya = {
			save_temporary_scope_as = current_county
		}
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:current_county = {
			change_title_holder = {
				holder = scope:justinian_commander.top_liege
				change = scope:change
				take_baronies = yes
			}
		}
		resolve_title_and_vassal_change = scope:change

		global_var:justinian_commander = {
			remove_character_flag = STOP_ADMIN
		}

		ai_chance = {
			base = 0
		}		
	}
	option = {
		name = western_roman.0041.c
		trigger = {
			global_var:hildirix = {
				is_alive = yes
			}
		}
		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:recall_belisarius
		}
		title:c_tunis = {
			save_temporary_scope_as = current_county
		}
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:current_county = {
			change_title_holder = {
				holder = global_var:hildirix
				change = scope:change
				take_baronies = yes
			}
		}
		resolve_title_and_vassal_change = scope:change

		title:k_vandals = {
			add_to_list = titles_to_usurp
		}

		title:k_vandals.holder = {
			every_vassal = {
				limit = {
					capital_county = {
						NOT = { empire = { this = title:e_byzantium } }
					}
				}
				add_to_list = vassals_to_defect
			}
		}

		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = title_change
			add_claim_on_loss = no
		}
		every_in_list = {
			list = titles_to_usurp
			change_title_holder = {
				holder = global_var:hildirix
				change = scope:title_change
				take_baronies = no
			}
		}
		every_in_list = {
			list = vassals_to_defect
			change_liege = {
				liege = global_var:hildirix
				change = scope:title_change
			}
		}
		resolve_title_and_vassal_change = scope:title_change

		title:c_trapani = {
			save_temporary_scope_as = current_county
		}
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:current_county = {
			change_title_holder = {
				holder = scope:justinian_commander
				change = scope:change
				take_baronies = yes
			}
		}
		scope:justinian_commander = {
			change_liege = {
				liege = top_liege
				change = scope:title_change
			}
		}
		resolve_title_and_vassal_change = scope:change

		title:c_mahdiya = {
			save_temporary_scope_as = current_county
		}
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:current_county = {
			change_title_holder = {
				holder = global_var:hildirix
				change = scope:change
				take_baronies = yes
			}
		}
		resolve_title_and_vassal_change = scope:change

		global_var:justinian_commander = {
			remove_character_flag = STOP_ADMIN
		}

		ai_chance = {
			base = 90
		}		
	}
	option = {
		name = western_roman.0041.d
		trigger = {
			global_var:hildirix = {
				is_alive = yes
			}
		}
		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:recall_belisarius
		}
		title:c_tunis = {
			save_temporary_scope_as = current_county
		}
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:current_county = {
			change_title_holder = {
				holder = global_var:hildirix
				change = scope:change
				take_baronies = yes
			}
		}
		resolve_title_and_vassal_change = scope:change

		title:k_vandals = {
			add_to_list = titles_to_usurp
		}

		title:k_vandals.holder = {
			every_vassal = {
				limit = {
					capital_county = {
						NOT = { empire = { this = title:e_byzantium } }
					}
				}
				add_to_list = vassals_to_defect
			}
		}

		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = title_change
			add_claim_on_loss = no
		}
		every_in_list = {
			list = titles_to_usurp
			change_title_holder = {
				holder = global_var:hildirix
				change = scope:title_change
				take_baronies = no
			}
		}
		every_in_list = {
			list = vassals_to_defect
			change_liege = {
				liege = global_var:hildirix
				change = scope:title_change
			}
		}
		resolve_title_and_vassal_change = scope:title_change

		create_title_and_vassal_change = {
			type = independency 
			save_scope_as = change
		}
		global_var:hildirix = {
			becomes_independent = {
				change = scope:change
			}
		}
		resolve_title_and_vassal_change = scope:change

		make_tributary = {
			TYPE = tributary_permanent
			SUZERAIN = title:e_byzantium.holder
			TRIBUTARY = global_var:hildirix
		}

		title:c_trapani = {
			save_temporary_scope_as = current_county
		}
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:current_county = {
			change_title_holder = {
				holder = scope:justinian_commander
				change = scope:change
				take_baronies = yes
			}
		}
		resolve_title_and_vassal_change = scope:change

		title:c_mahdiya = {
			save_temporary_scope_as = current_county
		}
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:current_county = {
			change_title_holder = {
				holder = global_var:hildirix
				change = scope:change
				take_baronies = yes
			}
		}
		resolve_title_and_vassal_change = scope:change

		create_title_and_vassal_change = {
			type = independency 
			save_scope_as = change
		}
		scope:justinian_commander = {
			becomes_independent = {
				change = scope:change
			}
		}
		resolve_title_and_vassal_change = scope:change

		create_title_and_vassal_change = {
			type = swear_fealty
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:justinian_commander = {
			change_liege = {
				liege = root
				change = scope:change
			}
			resolve_title_and_vassal_change = scope:change
		}

		global_var:justinian_commander = {
			remove_character_flag = STOP_ADMIN
		}

		ai_chance = {
			base = 5
		}		
	}
}
	}

	{
western_roman.0043 = {
	type = character_event
	title = western_roman.0043.t
	desc = western_roman.0043.desc
	theme = realm
	left_portrait = {
		character = root
		animation = fear
	}
	right_portrait = {
		character = scope:emperor
		animation = personality_vengeful
	}
	lower_center_portrait = {
		character = scope:vicar
		animation = personality_honorable
	}

	immediate = {
		root = {
			save_scope_as = recipient
		}
		scope:emperor = {
			save_scope_as = actor
		}
	}

	option = {
		name = western_roman.0043.a
		if = {
			limit = { 
				OR = {
					liege = title:k_africae.holder
					AND = {
						liege = {
							liege = scope:defender
						}
						NOT = {
							faith = liege.faith
						}
					}
				}
			}
			add_character_flag = should_become_independent
		}
		if = {
			limit = {
				scope:actor = {
					any_character_war = {
						AND = {
							using_cb = independence_war_vandal
							casus_belli = {
								primary_defender = scope:actor
							}
						}
					}
				}
			}
			scope:actor = {
				every_character_war = {
					limit = {
						using_cb = independence_war_vandal
						casus_belli = {
							primary_defender = scope:actor
						}
					}
					add_attacker = scope:recipient
				}
			}
		}
		else = {
			start_war = {
				cb = independence_war_vandal
				target = scope:actor
			}
		}
		ai_chance = {
			base = 75
			ai_value_modifier = {
				ai_boldness = 0.5
				ai_zeal = 1
			}
			opinion_modifier = {
				opinion_target = top_liege
				who = root
				multiplier = 0.25
			}
		}		
	}

	option = {
		name = western_roman.0043.b
		demand_conversion_interaction_effect = yes
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_greed = 0.25
				ai_boldness = -0.5
				ai_zeal = -1
				ai_rationality = 0.25
			}
			opinion_modifier = {
				opinion_target = top_liege
				who = root
				multiplier = -0.25
			}
		}		
	}
}

western_roman.0044 = {
	type = character_event
	title = western_roman.0044.t
	desc = western_roman.0044.desc
	theme = realm
	left_portrait = {
		character = root
		animation = personality_honorable
	}
	right_portrait = {
		character = scope:emperor
		animation = personality_greedy
	}

	immediate = {
		if = {
			limit = {
				character:assyrian_02 = {
					is_alive = yes
					is_landed = no
				}
			}
			character:assyrian_02 = {
				save_scope_as = new_vicar
			}
		}
		else = {
			scope:emperor = {
				random_courtier = {
					limit = {
						is_adult = yes
						is_male = yes
						health >= fine_health
					}
					save_scope_as = new_vicar
				}
			}
		}
	}

	option = {
		name = western_roman.0044.a
		if = {
			limit = {
				has_trait = loyal
			}
			remove_trait = loyal
		}
		else = {
			add_trait = disloyal
		}
		remove_trait = calm
		add_trait = ambitious
		set_relation_rival = {
			target = scope:emperor
			reason = rival_betrayed_friendship
		}
		scope:emperor = {
			set_relation_rival = {
				target = root
				reason = rival_betrayed_friendship
			}
		}
		add_opinion = {
			modifier = hate_opinion
			target = scope:emperor
			opinion = -100
		}
		reverse_add_opinion = {
			modifier = hate_opinion
			target = scope:emperor
			opinion = -100
		}
		set_global_variable = {
			name = belisarius_betrayal
			value = yes
		}
		start_war = {
			cb = independence_war
			target = scope:emperor
		}
		ai_chance = {
			base = 0
		}		
	}

	option = {
		name = western_roman.0044.b
		if = {
			limit = {
				has_trait = disloyal
			}
			remove_trait = disloyal
		}
		else = {
			add_trait = loyal
		}
		add_prestige = 2000
		add_prestige_level = 1
		add_character_modifier = {
			modifier = imperial_triumph
			years = 10
		}
		scope:emperor = {
			remove_trait = paranoid
			add_trait = stubborn
			send_interface_toast = {
				title = western_roman.0044.tt
				left_icon = root
				right_icon = scope:emperor
			}
		}

		title:c_trapani = {
			save_temporary_scope_as = current_county
		}
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:current_county = {
			change_title_holder = {
				holder = root
				change = scope:change
				take_baronies = yes
			}
		}
		resolve_title_and_vassal_change = scope:change

		root = {
			every_vassal = {
				add_to_list = vassals_to_defect
			}
		}

		every_held_title = {
			limit = {
				NOT = { this = title:c_trapani }
			}
			add_to_list = titles_to_usurp
		}

		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = title_change
			add_claim_on_loss = no
		}
		every_in_list = {
			list = titles_to_usurp
			change_title_holder = {
				holder = scope:new_vicar
				change = scope:title_change
				take_baronies = no
			}
		}
		every_in_list = {
			list = vassals_to_defect
			change_liege = {
				liege = scope:new_vicar
				change = scope:title_change
			}
		}
		resolve_title_and_vassal_change = scope:title_change

		if = {
			limit = {
				scope:new_vicar = {
					is_independent_ruler = yes
				}
			}
			create_title_and_vassal_change = {
				type = swear_fealty
				save_scope_as = change
				add_claim_on_loss = no
			}
			scope:new_vicar = {
				change_liege = {
					liege = scope:emperor
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
		}

		if = {
			limit = {
				scope:new_vicar = {
					NOT = {
						OR = {
						has_government = imperial_government
						has_government = administrative_government
						}
					}
				}
			}
			scope:new_vicar = { 
				if = {
					limit = {
						has_dlc_feature = roads_to_power
					}
						change_government = administrative_government
					}
					else = {
						change_government = imperial_government
				} 
			}
		}

		#I hate admin
		title:c_trapani = {
			save_temporary_scope_as = current_county
		}
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:current_county = {
			change_title_holder = {
				holder = root
				change = scope:change
				take_baronies = yes
			}
		}
		resolve_title_and_vassal_change = scope:change

		ai_chance = {
			base = 100
		}		
	}
}
	}

	{
western_roman.0062 = {
	type = character_event
	title = western_roman.0062.t
	desc = western_roman.0062.desc
	theme = realm
	override_icon = { reference = "gfx/interface/icons/event_types/special_rhomaion.dds" }

	left_portrait = {
		character = root
		animation = personality_honorable
	}

	immediate = {
		set_global_variable = {
			name = gothic_war_won
			value = yes
		}
		root = {
			save_scope_as = gothic_war_victor
			add_legitimacy = 100
		}
		if = {
			limit = {
				exists = title:k_italy.holder
				title:k_italy.holder.top_liege = root
			}
			title:k_italy.holder = {
				every_held_title = {
					limit = { tier = tier_duchy }
					title:k_italy.holder = {
						destroy_title = prev
					}
				}
			}
		}
	}

	option = {
		name = western_roman.0062.a
		if = {
			limit = {
				exists = title:k_italy.holder
				OR = {
					title:k_italy.holder = root
					title:k_italy.holder.top_liege = root
				}
			}
			title:k_italy = {
				save_scope_as = title
			}
			trigger_event = tfe_title_event.0002
		}
		if = {
			limit = {
				exists = title:k_croatia.holder
				OR = {
					title:k_croatia.holder = root
					title:k_croatia.holder.top_liege = root
				}
			}
			title:k_croatia = {
				save_scope_as = title
			}
			trigger_event = tfe_title_event.0002
		}
		ai_chance = {
			base = 5
		}		
	}

	option = {
		name = western_roman.0062.b
		ai_chance = {
			base = 0
		}		
	}

	option = {
		name = western_roman.0062.c
		if = {
			limit = {
				exists = title:k_italy.holder
				OR = {
					title:k_italy.holder = root
					title:k_italy.holder.top_liege = root
				}
			}
			end_gothic_war_italia_effect = yes
			title:k_italia_annonariae = {
				save_scope_as = title
			}
			trigger_event = tfe_title_event.0002
			title:k_italia_suburbicariae = {
				save_scope_as = title
			}
			trigger_event = tfe_title_event.0002
		}
		if = {
			limit = {
				exists = title:k_croatia.holder
				OR = {
					title:k_croatia.holder = root
					title:k_croatia.holder.top_liege = root
				}
			}
			end_gothic_war_croatia_effect = yes
			title:k_pannonia = {
				save_scope_as = title
			}
			trigger_event = tfe_title_event.0002
		}
		ai_chance = {
			base = 90
		}		
	}
	option = {
		name = western_roman.0062.d
		if = {
			limit = {
				exists = title:k_italy.holder
				OR = {
					title:k_italy.holder = root
					title:k_italy.holder.top_liege = root
				}
			}
			end_gothic_war_italia_effect = yes
		}
		if = {
			limit = {
				exists = title:k_croatia.holder
				OR = {
					title:k_croatia.holder = root
					title:k_croatia.holder.top_liege = root
				}
			}
			end_gothic_war_croatia_effect = yes
		}
		ai_chance = {
			base = 5
		}		
	}
	option = {
		name = western_roman.0062.e
		trigger = {
			is_ai = yes
		}
		if = {
			limit = {
				exists = title:k_italy.holder
				OR = {
					title:k_italy.holder = root
					title:k_italy.holder.top_liege = root
				}
			}
			end_gothic_war_italia_effect = yes
		}
		if = {
			limit = {
				exists = title:k_croatia.holder
				OR = {
					title:k_croatia.holder = root
					title:k_croatia.holder.top_liege = root
				}
			}
			end_gothic_war_croatia_effect = yes
			title:k_pannonia = {
				save_scope_as = title
			}
			trigger_event = tfe_title_event.0002
		}
		if = {
			limit = {
				character:belisarius_001 = {
					is_alive = yes
					#is_ai = no
					highest_held_title_tier <= tier_duchy
					any_held_title = {
						tier = tier_county
						kingdom = title:k_italia_suburbicariae
					}
					top_liege = title:e_byzantium.holder
				}
				NOT = { exists = global_var:belisarius_betrayal }
			}
			title:k_italia_suburbicariae = {
				save_scope_as = title
			}
			scope:title = {
				create_title_and_vassal_change = {
					type = granted
					save_scope_as = change
					add_claim_on_loss = no
				}
				change_title_holder_include_vassals = {
					holder = character:belisarius_001
					change = scope:change
				}
				resolve_title_and_vassal_change = scope:change
			}
		}
		else = {
			title:k_italia_suburbicariae = {
				save_scope_as = title
			}
			trigger_event = tfe_title_event.0002
		}
		if = {
			limit = {
				character:belisarius_001 = {
					is_alive = yes
					#is_ai = no
					highest_held_title_tier <= tier_duchy
					any_held_title = {
						tier = tier_county
						kingdom = title:k_italia_annonariae
					}
					top_liege = title:e_byzantium.holder
				}
				NOT = { exists = global_var:belisarius_betrayal }
			}
			title:k_italia_annonariae = {
				save_scope_as = title
			}
			scope:title = {
				create_title_and_vassal_change = {
					type = granted
					save_scope_as = change
					add_claim_on_loss = no
				}
				change_title_holder_include_vassals = {
					holder = character:belisarius_001
					change = scope:change
				}
				resolve_title_and_vassal_change = scope:change
			}
		}
		else = {
			title:k_italia_annonariae = {
				save_scope_as = title
			}
			trigger_event = tfe_title_event.0002
		}
		ai_chance = {
			base = 1000
		}		
	}
}
	}

	{
western_roman.0064 = {
	type = character_event
	title = western_roman.0064.t
	desc = western_roman.0064.desc
	override_icon = { reference = "gfx/interface/icons/event_types/special_rhomaion.dds" }
	theme = realm
	left_portrait = {
		character = scope:truce_breaker
		animation = personality_greedy
	}
	right_portrait = {
		character = scope:truce_breakee
		animation = rage
	}

	immediate = {
		title:e_byzantium.holder = {
			save_scope_as = truce_breakee
		}
		title:e_persia.holder = {
			save_scope_as = truce_breaker
		}
	}

	option = {
		name = western_roman.0064.a
		trigger = {
			AND = {
				scope:truce_breaker = {
					character_is_land_realm_neighbor = scope:truce_breakee
				}
				NOT = { scope:truce_breakee = { is_at_war_with = scope:truce_breaker } }
			}
		}
		scope:truce_breakee = {
			random_sub_realm_county = {
				limit = {
					is_neighbor_to_realm = scope:truce_breaker
				}
				save_scope_as = target_title_eternal_placeholder
			}
		}
		scope:truce_breaker = {
			start_war = {
				cb = TFE_gothic_outbreak_county_struggle_cb
				target = scope:truce_breakee
				target_title = scope:target_title_eternal_placeholder
				claimant = scope:truce_breaker
			}
		}
		if = {
			limit = {
				OR = {
					scope:truce_breakee = {
						any_character_war = {
							using_cb = gothic_war_regular_cb
							attacker_war_score <= 75
						}
					}
					AND = {
						exists = title:k_ostrogoths.holder
						title:k_ostrogoths.holder = {
							any_character_war = {
								using_cb = cb_gothic_wars_amalasuntha
								defender_war_score <= 75
							}
						}
					}
					scope:truce_breakee = {
						any_vassal_or_below = {
							any_character_war = {
								using_cb = gothic_duchy_conquest_cb
								attacker_war_score <= 75
							}
						}
					}
				}
			}
			scope:truce_breakee = {
				trigger_event = {
					id = western_roman.0065
					days = 1
				}
			}
		}
		ai_chance = {
			base = 1
		}		
	}
	option = {
		name = western_roman.0064.b
		trigger = {
			AND = {
				exists = title:d_abkhazia.holder
				title:d_abkhazia.holder = {
					exists = var:my_suzerain
					var:my_suzerain = scope:truce_breakee
				}
				NOT = { title:d_abkhazia.holder = { is_at_war_with = scope:truce_breaker } }
			}
		}
		scope:truce_breaker = {
			start_war = {
				cb = individual_duchy_de_jure_cb
				target = title:d_abkhazia.holder
				target_title = title:d_abkhazia
				claimant = scope:truce_breaker
			}
		}
		if = {
			limit = {
				OR = {
					scope:truce_breakee = {
						any_character_war = {
							using_cb = gothic_war_regular_cb
							attacker_war_score <= 75
						}
					}
					AND = {
						exists = title:k_ostrogoths.holder
						title:k_ostrogoths.holder = {
							any_character_war = {
								using_cb = cb_gothic_wars_amalasuntha
								defender_war_score <= 75
							}
						}
					}
					scope:truce_breakee = {
						any_vassal_or_below = {
							any_character_war = {
								using_cb = gothic_duchy_conquest_cb
								attacker_war_score <= 75
							}
						}
					}
				}
			}
			scope:truce_breakee = {
				trigger_event = {
					id = western_roman.0065
					days = 1
				}
			}
		}
		ai_chance = {
			base = 100
		}		
	}
	option = {
		name = western_roman.0064.c
		ai_chance = {
			base = 1
		}		
	}
}

western_roman.0065 = {
	type = character_event
	title = western_roman.0065.t
	desc = western_roman.0065.desc
	override_icon = { reference = "gfx/interface/icons/event_types/special_rhomaion.dds" }
	theme = realm
	left_portrait = {
		character = scope:truce_breaker
		animation = personality_greedy
	}
	right_portrait = {
		character = scope:truce_breakee
		animation = rage
	}

	option = {
		name = western_roman.0065.a
		trigger = {
			OR = {
				character:belisarius_001 = {
					is_alive = yes
					is_landed = yes
					any_character_war = {
						using_cb = gothic_war_regular_cb
					}
				}
				character:belisarius_001 = {
					is_alive = yes
					is_landed = yes
					any_character_war = {
						using_cb = cb_gothic_wars_amalasuntha
					}
				}
				character:belisarius_001 = {
					is_alive = yes
					is_landed = yes
					any_character_war = {
						using_cb = gothic_duchy_conquest_cb
					}
				}
			}
		}
		character:belisarius_001 = {
			trigger_event = {
				id = western_roman.0066
				days = 1
			}
		}
		ai_chance = {
			base = 100
		}		
	}
	option = {
		name = western_roman.0065.b
		trigger = {
			NOT = {
				OR = {
					character:belisarius_001 = {
						is_alive = yes
						is_landed = yes
						any_character_war = {
							using_cb = gothic_war_regular_cb
						}
					}
					character:belisarius_001 = {
						is_alive = yes
						is_landed = yes
						any_character_war = {
							using_cb = cb_gothic_wars_amalasuntha
						}
					}
					character:belisarius_001 = {
						is_alive = yes
						is_landed = yes
						any_character_war = {
							using_cb = gothic_duchy_conquest_cb
						}
					}
				}
			}
		}
		save_scope_as = peace_offerer
		title:k_ostrogoths.holder = {
			trigger_event = western_roman.0071
		}
		ai_chance = {
			base = 100
		}		
	}
	option = {
		name = western_roman.0065.c
		ai_chance = {
			base = 1
		}		
	}
}

western_roman.0066 = {
	type = character_event
	title = western_roman.0066.t
	desc = western_roman.0066.desc
	override_icon = { reference = "gfx/interface/icons/event_types/special_rhomaion.dds" }
	theme = realm
	left_portrait = {
		character = scope:truce_breaker
		animation = personality_greedy
	}
	right_portrait = {
		character = scope:truce_breakee
		animation = rage
	}

	option = {
		name = western_roman.0066.a
		struggle:italian_struggle = {
            activate_struggle_catalyst = {
                catalyst = catalyst_TFE_major_historical_event_devastation
                character = root
            }
        }
		scope:truce_breakee = {
			trigger_event = {
				id = western_roman.0067
				days = 1
			}
		}
		if = {
			limit = {
				exists = title:k_ostrogoths.holder
			}
			title:k_ostrogoths.holder = {
				trigger_event = {
					id = western_roman.0068
					days = 1
				}
			}
		}
		scope:truce_breakee = {
			add_opinion = {
				modifier = anger_opinion
				target = character:belisarius_001
				opinion = -50
			}
		}
		character:belisarius_001 = {
			remove_trait = loyal
		}
		if = {
			limit = {
				character:belisarius_001 = {
					has_trait = calm
					NOT = { has_trait = deceitful }
					NOT = { has_trait = honest }
				}
			}
			character:belisarius_001 = {
				remove_trait = calm
				add_trait = deceitful
			}
		}
		ai_chance = {
			base = 100
		}		
	}
	option = {
		name = western_roman.0066.b
		custom_tooltip = western_roman.0066.b.tooltip
		save_scope_as = peace_offerer
		title:k_ostrogoths.holder = {
			trigger_event = western_roman.0071
		}
		ai_chance = {
			base = 1
		}		
	}
}
	}

	{
western_roman.0068 = {
	type = character_event
	title = western_roman.0068.t
	desc = western_roman.0068.desc
	override_icon = { reference = "gfx/interface/icons/event_types/special_rhomaion.dds" }
	theme = realm
	left_portrait = {
		character = root
		animation = personality_bold
	}

	option = {
		name = western_roman.0068.a
		character:belisarius_001 = {
			trigger_event = {
				id = western_roman.0069
				days = 1
			}
		}
		ai_chance = {
			base = 100
		}		
	}

	option = {
		name = western_roman.0068.b
		ai_chance = {
			base = 1
		}		
	}
}

western_roman.0069 = {
	type = character_event
	title = western_roman.0069.t
	desc = western_roman.0069.desc
	override_icon = { reference = "gfx/interface/icons/event_types/special_rhomaion.dds" }
	theme = realm
	left_portrait = {
		character = root
		animation = personality_bold
	}

	option = {
		name = western_roman.0069.a
		struggle:italian_struggle = {
            activate_struggle_catalyst = {
                catalyst = catalyst_TFE_major_historical_event_devastation
                character = root
            }
        }
		set_global_variable = {
			name = belisarius_betrayal
			value = yes
		}
		set_global_variable = {
			name = belisarius_betrayal_white_peace
			value = yes
		}
		scope:truce_breakee = {
			set_relation_rival = {
				target = root
				reason = rival_betrayed_friendship
			}
		}
		add_opinion = {
			modifier = hate_opinion
			target = scope:truce_breakee
			opinion = -100
		}
		reverse_add_opinion = {
			modifier = hate_opinion
			target = scope:truce_breakee
			opinion = -100
		}
		scope:truce_breakee = {
			trigger_event = {
				id = western_roman.0070
				days = 1
			}
		}
		character:belisarius_001 = {
			if = {
				limit = {
					has_trait = loyal
				}
				remove_trait = loyal
			}
			else = {
				add_trait = disloyal
			}
			every_character_war = {
				limit = {
					OR = {
						using_cb = gothic_duchy_conquest_cb
						using_cb = cb_gothic_wars_amalasuntha
						using_cb = gothic_war_regular_cb
					}
				}
				end_war = white_peace
			}
			get_title = title:e_western_roman_empire
			if = {
				limit = {
					exists = title:e_italy.holder
					title:e_italy.holder = title:k_ostrogoths.holder
				}
				destroy_title = title:e_italy
			}
			create_title_and_vassal_change = {
				type = swear_fealty
				save_scope_as = changev
				add_claim_on_loss = no
			}
			title:k_ostrogoths.holder = {
				change_liege = {
					liege = character:belisarius_001
					change = scope:changev
				}
			}
			resolve_title_and_vassal_change = scope:changev
			title:k_ostrogoths.holder = {
				save_scope_as = destroychar
				every_held_title = {
					limit = {
						tier >= tier_kingdom
					}
					scope:destroychar = { destroy_title = prev }
				}
			}
			scope:truce_breakee = {
				start_war = {
					cb = gothic_subjugation_cb
					target = character:belisarius_001
					claimant = scope:truce_breakee
				}
			}
		}
		ai_chance = {
			base = 1
		}		
	}

	option = {
		name = western_roman.0069.b
		if = {
			limit = {
				character:belisarius_001 = {
					NOT = { has_trait = loyal }
				}
			}
			character:belisarius_001 = {
				remove_trait = disloyal
				add_trait = loyal
			}
		}
		ai_chance = {
			base = 100
		}		
	}
}
	}

	{
western_roman.0071 = {
	type = character_event
	title = western_roman.0071.t
	desc = western_roman.0071.desc
	override_icon = { reference = "gfx/interface/icons/event_types/special_rhomaion.dds" }
	theme = realm
	left_portrait = {
		character = root
		animation = worry
	}

	option = {
		name = western_roman.0071.a
		struggle:italian_struggle = {
            activate_struggle_catalyst = {
                catalyst = catalyst_TFE_major_historical_event_rebuilding
                character = root
            }
        }
		ai_chance = {
			base = 100
		}		
		scope:peace_offerer = {
			send_interface_toast = {
				title = WHITE_PEACE_ACCEPTED
				left_icon = root
			}
		}
		end_gothic_war_early_effect = yes
		if = {
			limit = {
				character:belisarius_001 = {
					is_landed = yes
					top_liege = scope:truce_breakee
				}
				exists = title:k_pontus.holder
				title:k_pontus.holder.top_liege = scope:truce_breakee
			}
			character:belisarius_001 = {
				every_held_title = {
					add_to_list = title_to_return
				}
				every_vassal = {
					add_to_list = vassal_to_return
				}
			}
			title:c_trebizond = {
				save_temporary_scope_as = current_county
			}
			create_title_and_vassal_change = {
				type = usurped
				save_scope_as = change
				add_claim_on_loss = no
			}
			scope:current_county = {
				change_title_holder = {
					holder = character:belisarius_001
					change = scope:change
					take_baronies = yes
				}
			}
			resolve_title_and_vassal_change = scope:change

			title:k_pontus = {
				save_temporary_scope_as = current_county
			}
			create_title_and_vassal_change = {
				type = usurped
				save_scope_as = change
				add_claim_on_loss = no
			}
			scope:current_county = {
				change_title_holder_include_vassals = {
					holder = character:belisarius_001
					change = scope:change
					take_baronies = no
				}
			}
			resolve_title_and_vassal_change = scope:change

			create_title_and_vassal_change = {
				type = usurped
				save_scope_as = title_change
				add_claim_on_loss = no
			}
			every_in_list = {
				list = title_to_return
				change_title_holder = {
					holder = character:belisarius_001.top_liege
					change = scope:title_change
					take_baronies = no
				}
			}
			every_in_list = {
				list = vassal_to_return
				change_liege = {
					liege = character:belisarius_001.top_liege
					change = scope:title_change
				}
			}
			resolve_title_and_vassal_change = scope:title_change
		}
	}

	option = {
		name = western_roman.0071.b
		scope:peace_offerer = {
			send_interface_toast = {
				title = WHITE_PEACE_DECLINED
				left_icon = root
			}
		}
		ai_chance = {
			base = 1
		}		
	}
}
	}

	{
western_roman.0072 = {
	scope = none
	hidden = yes
	immediate = {
		title:e_byzantium.holder = {
			save_scope_as = emperor
		}
		if = {
			limit = {
				character:thracio_03 = {
					is_alive = yes
				}
				OR = {
					character:thracio_03 = {
						is_landed = no
					}
					character:thracio_03 = {
						is_landed = yes
						top_liege = { has_title = title:e_byzantium }
						capital_province = { geographical_region = custom_roman_africae }
					}
				}
			}
			character:thracio_03 = {
				save_scope_as = berber_leader
			}
		}
		else_if = {
			limit = {
				character:mauro_roman_05 = {
					is_alive = yes
					is_landed = yes
					top_liege = { has_title = title:e_byzantium }
				}
			}
			character:mauro_roman_05 = {
				save_scope_as = berber_leader
			}
		}
		else = {
			title:e_byzantium.holder = {
				random_vassal_or_below =  {
					limit = {
						highest_held_title_tier > tier_barony
						OR = {
							culture = { has_cultural_pillar = heritage_berber }
							culture = culture:mauro_roman
						}
					}
					save_scope_as = berber_leader
				}
			}
		}
		if = {
			limit = {
				character:thracio_03 = {
					is_alive = yes
					is_landed = no
				}
				scope:berber_leader = character:thracio_03
			}
			title:c_qashtiliya = {
				save_temporary_scope_as = current_county
			}
			create_title_and_vassal_change = {
				type = usurped
				save_scope_as = change
				add_claim_on_loss = no
			}
			scope:current_county = {
				change_title_holder = {
					holder = scope:berber_leader
					change = scope:change
					take_baronies = yes
				}
			}
			resolve_title_and_vassal_change = scope:change
		}
		if = {
			limit = {
				character:mauro_roman_05 = {
					is_alive = yes
					is_landed = yes
					top_liege = { has_title = title:e_byzantium }
				}
				character:mauro_roman_06 = {
					is_alive = yes
					is_married = no
				}
				character:thracio_03 = {
					is_alive = yes
					is_married = no
				}
				scope:berber_leader = character:thracio_03
			}
			character:mauro_roman_05 = {
				trigger_event = {
					id = western_roman.0073
					days = 1
				}
			}
		}
		title:e_byzantium.holder = {
			every_vassal_or_below = {
				limit = {
					highest_held_title_tier > tier_barony
					OR = {
						culture = { has_cultural_pillar = heritage_berber }
						culture = culture:mauro_roman
					}
					NOT = { this = scope:berber_leader }
				}
				trigger_event = {
					id = western_roman.0075
					days = 2
				}
			}
		}
		title:e_byzantium.holder = {
			trigger_event = {
				id = western_roman.0077
				days = 2
			}
		}
		if = {
			limit = {
				exists = title:k_mauro_roman_kingdom.holder
			}
			title:k_mauro_roman_kingdom.holder = {
				trigger_event = {
					id = western_roman.0075
					days = 2
				}
			}
		}
		if = {
			limit = {
				exists = title:d_avaritana.holder
			}
			title:d_avaritana.holder = {
				trigger_event = {
					id = western_roman.0075
					days = 2
				}
			}
		}
		if = {
			limit = {
				exists = title:d_zaba.holder
			}
			title:d_zaba.holder = {
				trigger_event = {
					id = western_roman.0076
					days = 2
				}
			}
		}
		if = {
			limit = {
				exists = title:d_naffur.holder
			}
			title:d_naffur.holder = {
				trigger_event = {
					id = western_roman.0075
					days = 2
				}
			}
		}
		scope:berber_leader = {
			trigger_event = {
				id = western_roman.0074
				days = 1
			}
		}
	}
}

western_roman.0073 = {
	type = character_event
	title = western_roman.0073.t
	desc = western_roman.0073.desc
	override_icon = { reference = "gfx/interface/icons/event_types/special_rhomaion.dds" }
	theme = realm
	left_portrait = {
		character = root
		animation = personality_bold
	}
	right_portrait = {
		character = character:thracio_03
		animation = personality_bold
	}

	option = {
		name = western_roman.0073.a
		character:thracio_03 = {
			marry = character:mauro_roman_06
		}
		ai_chance = {
			base = 100
		}		
	}
	option = {
		name = western_roman.0073.b
		ai_chance = {
			base = 0
		}		
	}
}

western_roman.0074 = {
	type = character_event
	title = western_roman.0074.t
	desc = western_roman.0074.desc
	override_icon = { reference = "gfx/interface/icons/event_types/special_rhomaion.dds" }
	theme = realm
	left_portrait = {
		character = root
		animation = personality_bold
	}

	immediate = {
		title:e_byzantium.holder = {
			random_vassal_or_below =  {
				limit = {
					highest_held_title_tier > tier_barony
					OR = {
						culture = { has_cultural_pillar = heritage_berber }
						culture = culture:mauro_roman
					}
				}
				weight = {
					base = 1
					modifier = {
						add = 5
						primary_title.tier >= tier_duchy
					}
					modifier = {
						add = martial
					}
					modifier = {
						add = martial
					}
					modifier = {
						add = martial
					}
					modifier = {
						add = martial
					}
					modifier = {
						add = martial
					}
				}
				save_scope_as = berber_leader_replacement
			}
		}
	}

	option = {
		name = western_roman.0074.a
		spawn_army = {
			name = "Roman Deserters"
			levies = 600
			men_at_arms = {
				type = clibanarius
				stacks = 1
			}
			men_at_arms = {
				type = cataphract
				stacks = 1
			}
			men_at_arms = {
				type = scorpio
				stacks = 2
			}
			men_at_arms = {
				type = armored_footmen
				stacks = 2
			}
			men_at_arms = {
				type = bowmen
				stacks = 1
			}
			location = scope:berber_leader.capital_province
			inheritable = no
		}
		scope:berber_leader = {
			set_relation_rival = {
				target = scope:emperor
				reason = rival_age_old_rivalry
			}
			add_prestige = 500
			start_war = {
				cb = independence_war_berber
				target = scope:emperor
			}
		}
		ai_chance = { base = 100 }
	}
	option = {
		name = western_roman.0074.b

		scope:berber_leader_replacement = {
			save_scope_as = berber_leader
		}

		scope:berber_leader = {
			spawn_army = {
				name = "Roman Deserters"
				levies = 600
				men_at_arms = {
					type = clibanarius
					stacks = 1
				}
				men_at_arms = {
					type = cataphract
					stacks = 1
				}
				men_at_arms = {
					type = scorpio
					stacks = 2
				}
				men_at_arms = {
					type = armored_footmen
					stacks = 2
				}
				men_at_arms = {
					type = bowmen
					stacks = 1
				}
				location = scope:berber_leader.capital_province
				inheritable = no
			}	
			scope:berber_leader = {
				set_relation_rival = {
					target = scope:emperor
					reason = rival_age_old_rivalry
				}
				add_prestige = 500
				start_war = {
					cb = independence_war_berber
					target = scope:emperor
				}
			}
		}

		ai_chance = { base = 0 }
	}
}

western_roman.0075 = {
	type = character_event
	title = western_roman.0075.t
	desc = western_roman.0075.desc
	override_icon = { reference = "gfx/interface/icons/event_types/special_rhomaion.dds" }
	theme = realm
	left_portrait = {
		character = root
		animation = personality_bold
	}

	option = {
		name = western_roman.0075.a
		if = {
			limit = {
				root = character:mauro_roman_05
				exists = title:k_mauro_roman_kingdom.holder
				NOT = { top_liege = title:k_mauro_roman_kingdom.holder }
			}
			create_title_and_vassal_change = {
				type = usurped
				save_scope_as = title_change
				add_claim_on_loss = yes
			}
			character:mauro_roman_05 = {
				change_liege = {
					liege = title:k_mauro_roman_kingdom.holder
					change = scope:title_change
				}
			}
			resolve_title_and_vassal_change = scope:title_change
			character:mauro_roman_05 = {
				add_unpressed_claim = title:k_mauro_roman_kingdom
				create_alliance = {
					target = title:k_mauro_roman_kingdom.holder
					allied_through_owner = root
					allied_through_target = title:k_mauro_roman_kingdom.holder
				}
			}
		}
		scope:emperor = {
			every_character_war = {
				limit = {
					using_cb = independence_war_berber
					casus_belli = {
						primary_defender = scope:emperor
					}
				}
				add_attacker = root
			}
		}
		add_character_flag = should_become_independent
		ai_chance = {
			base = 100
		}		
	}
	option = {
		name = western_roman.0075.b
		ai_chance = {
			base = 0
		}		
	}
}

western_roman.0076 = {
	type = character_event
	title = western_roman.0076.t
	desc = western_roman.0076.desc
	override_icon = { reference = "gfx/interface/icons/event_types/special_rhomaion.dds" }
	theme = realm
	left_portrait = {
		character = root
		animation = personality_bold
	}

	option = {
		name = western_roman.0076.a
		scope:emperor = {
			every_character_war = {
				limit = {
					using_cb = independence_war_berber
					casus_belli = {
						primary_defender = scope:emperor
					}
				}
				add_defender = root
			}
		}
		ai_chance = {
			base = 100
		}		
	}
	option = {
		name = western_roman.0076.b
		ai_chance = {
			base = 0
		}		
	}
}
	}

	{
western_roman.0077 = {
	type = character_event
	title = western_roman.0077.t
	desc = western_roman.0077.desc
	override_icon = { reference = "gfx/interface/icons/event_types/special_rhomaion.dds" }
	theme = realm
	left_portrait = {
		character = root
		animation = rage
	}
	right_portrait = {
		character = character:thracio_03
		animation = personality_bold
	}

	option = {
		name = western_roman.0077.a
		ai_chance = {
			base = 100
		}		
	}
}
	}
}

"events/germanic_events.txt" = {
	{
germanic_events.0014 = {
	title = germanic_events.0014.t
	desc = germanic_events.0014.desc
	scope = character
	theme = realm

	left_portrait = {
		character = scope:suitor_1
		animation = personality_greedy
	}
	right_portrait = {
		character = scope:suitor_2
		animation = personality_greedy
	}
	lower_center_portrait = {
		character = scope:suitor_3
		animation = personality_greedy
	}

	immediate = {
		if = {
			limit = {
				character:992100 = {
					is_alive = yes
					is_landed = yes
					is_vassal_of = root
					is_betrothed = no
					is_married = no
				}
			}
			character:992100 = {
				save_scope_as = suitor_1
			}
		}
		else = {
			random_vassal = {
				limit = {
					is_male = yes
					is_betrothed = no
					is_married = no
					exists = dynasty
					NOT = { dynasty = root.dynasty }
				}
				save_scope_as = suitor_1
			}
		}
		if = {
			limit = {
				character:992030 = {
					is_alive = yes
					is_landed = yes
					is_betrothed = no
					is_married = no
					is_vassal_of = root
				}
			}
			character:992030 = {
				save_scope_as = suitor_2
			}
		}
		else = {
			random_vassal = {
				limit = {
					is_male = yes
					is_betrothed = no
					is_married = no
					exists = dynasty
					NOT = { dynasty = root.dynasty }
					NOT = { scope:suitor_1 = THIS }
				}
				save_scope_as = suitor_2
			}
		}
		if = {
			limit = {
				character:rugian_17 = {
					is_alive = yes
					is_landed = yes
					is_betrothed = no
					is_married = no
					is_vassal_of = root
				}
			}
			character:rugian_17 = {
				save_scope_as = suitor_3
			}
		}
		else = {
			random_vassal = {
				limit = {
					is_male = yes
					is_betrothed = no
					is_married = no
					exists = dynasty
					NOT = { dynasty = root.dynasty }
					NOT = { scope:suitor_1 = THIS }
					NOT = { scope:suitor_2 = THIS }
				}
				save_scope_as = suitor_3
			}
		}
	}

	option = {
		name = germanic_events.0014.option.a
		trigger = {
			exists = scope:suitor_1
			scope:suitor_1 = {
				is_alive = yes
				is_landed = yes
				is_betrothed = no
				is_married = no
				is_vassal_of = root
			}
		}
		character:992024 = {
			create_betrothal = scope:suitor_1
		}
		character:992023 = {
			create_alliance = {
				target = scope:suitor_1
				allied_through_owner = character:992024
				allied_through_target = scope:suitor_1
			}
		}
		ai_chance = { 
			base = 10
			modifier = {
				scope:suitor_1 = character:992100
				add = 90
			}
		}
	}
	option = {
		name = germanic_events.0014.option.b
		trigger = {
			exists = scope:suitor_2
			scope:suitor_2 = {
				is_alive = yes
				is_landed = yes
				is_betrothed = no
				is_married = no
				is_vassal_of = root
			}
		}
		character:992024 = {
			create_betrothal = scope:suitor_2
		}
		character:992023 = {
			create_alliance = {
				target = scope:suitor_2
				allied_through_owner = character:992024
				allied_through_target = scope:suitor_2
			}
		}
		ai_chance = { 
			base = 10
			modifier = {
				exists = scope:suitor_1
				scope:suitor_1 = character:992100
				add = -10
			}
		}
	}
	option = {
		name = germanic_events.0014.option.c
		trigger = {
			exists = scope:suitor_3
			scope:suitor_3 = {
				is_alive = yes
				is_landed = yes
				is_betrothed = no
				is_married = no
				is_vassal_of = root
			}
		}
		character:992024 = {
			create_betrothal = scope:suitor_3
		}
		character:992023 = {
			create_alliance = {
				target = scope:suitor_3
				allied_through_owner = character:992024
				allied_through_target = scope:suitor_3
			}
		}
		ai_chance = { 
			base = 10
			modifier = {
				exists = scope:suitor_1
				scope:suitor_1 = character:992100
				add = -10
			}
		}
	}
	option = {
		name = germanic_events.0014.option.d
		ai_chance = { 
			base = 1
		}
	}
}
	}

	{
germanic_events.0015 = {
	scope = none
	hidden = yes

	immediate = {
		#title:k_ostrogoths.holder = {
		#	add_gold = 50000
		#}
		character:992020 = {
			save_scope_as = regent
		}
		title:k_ostrogoths.holder = {
			if = {
				limit = {
					dynasty = scope:regent.dynasty
				}
				title:k_ostrogoths.holder = {
					add_character_flag = {
						flag = deposed
						years = 1
					}
				}
				if = {
					limit = {
						any_vassal = {
							THIS = character:992022
						}
					}
					character:992022 = {
						save_scope_as = ostrogoth_king
					}
				}
				else_if = {
					limit = {
						any_vassal = {
							THIS = character:992100
						}
					}
					character:992100 = {
						save_scope_as = ostrogoth_king
					}
				}
				else_if = {
					limit = {
						any_vassal = {
							is_greek_or_roman = no
						}
					}
					random_vassal =  {
						limit = {
							is_greek_or_roman = no
						}
						save_scope_as = ostrogoth_king
					}
				}
			}
			else = {
				title:k_ostrogoths.holder = {
					save_scope_as = ostrogoth_king
				}
			}
		}
		title:e_byzantium.holder = {
			save_scope_as = emperor
		}
		title:k_ostrogoths.holder = {
			every_vassal = {
				limit = {
					highest_held_title_tier >= tier_county
					is_ai = yes
					NOT = { is_in_list = roman_vassals }
					NOT = { is_in_list = ostrogoth_vassals }
				}
				save_scope_as = deciding_vassal
				random_list = {
					50 = { #Side with Romans
						modifier = {
							add = -500
							OR = {
								#Future Ostrogothic kings
								THIS = character:992022
								THIS = character:992100
								THIS = character:992030
								THIS = character:rugian_17
								THIS = character:992029
								THIS = character:992104
								THIS = scope:ostrogoth_king
							}
						}
						modifier = {
							add = 20
							scope:deciding_vassal = {
								is_greek_or_roman = yes
							}
						}
						modifier = {
							add = -20
							scope:deciding_vassal = {
								culture = {
									has_cultural_pillar = heritage_east_germanic
								}
							}
						}
						opinion_modifier = {
							who = scope:deciding_vassal
							opinion_target = scope:roman_king
							multiplier = 0.25
						}
						opinion_modifier = {
							who = scope:deciding_vassal
							opinion_target = scope:emperor
							multiplier = 0.25
						}
						opinion_modifier = {
							who = scope:deciding_vassal
							opinion_target = scope:ostrogoth_king
							multiplier = -0.5
						}
						add_to_list = roman_vassals
					}
					50 = { #Side with Ostrogoths
						modifier = {
							add = 500
							OR = {
								#Future Ostrogothic kings
								THIS = character:992022
								THIS = character:992100
								THIS = character:992030
								THIS = character:rugian_17
								THIS = character:992029
								THIS = character:992104
								THIS = scope:ostrogoth_king
							}
						}
						modifier = {
							add = 20
							scope:deciding_vassal = {
								culture = {
									has_cultural_pillar = heritage_east_germanic
								}
							}
						}
						modifier = {
							add = -20
							scope:deciding_vassal = {
								is_greek_or_roman = yes
							}
						}
						opinion_modifier = {
							who = scope:deciding_vassal
							opinion_target = scope:roman_king
							multiplier = -0.25
						}
						opinion_modifier = {
							who = scope:deciding_vassal
							opinion_target = scope:emperor
							multiplier = -0.25
						}
						opinion_modifier = {
							who = scope:deciding_vassal
							opinion_target = scope:ostrogoth_king
							multiplier = 0.5
						}
						add_to_list = ostrogoth_vassals
					}
				}
			}
		}

		if = {
			limit = {
				scope:roman_king = {
					is_landed = yes
				}
			}
			scope:roman_king = {
				every_held_title = {
					add_to_list = revert_to_emperor_titles
				}
				every_vassal = {
					add_to_list = revert_to_emperor_vassals
				}
			}
		}

		if = {
			limit = {
				character:992020 = {
					is_landed = yes
				}
			}
			character:992020 = {
				every_held_title = {
					add_to_list = titles_to_usurp
				}
				every_vassal = {
					add_to_list = roman_vassals
				}
			}
		}

		if = {
			limit = {
				title:k_ostrogoths.holder = {
					has_character_flag = deposed
				}
			}

			title:k_ostrogoths.holder = {
				add_to_list = roman_vassals
				every_held_title = {
					limit = {
						tier = tier_kingdom
					}
					add_to_list = revert_to_goths_titles
				}
				every_vassal = {
					add_to_list = revert_to_goths_vassals
				}
			}

			create_title_and_vassal_change = {
				type = usurped
				save_scope_as = title_change
				add_claim_on_loss = yes
			}
			every_in_list = {
				list = revert_to_goths_titles
				change_title_holder = {
					holder = scope:ostrogoth_king
					change = scope:title_change
					take_baronies = no
				}
			}
			every_in_list = {
				list = revert_to_goths_vassals
				change_liege = {
					liege = scope:ostrogoth_king
					change = scope:title_change
				}
			}
			resolve_title_and_vassal_change = scope:title_change
		}

		title:c_roma = {
			save_temporary_scope_as = current_county
		}
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:current_county = {
			change_title_holder = {
				holder = scope:roman_king
				change = scope:change
				take_baronies = yes
			}
		}
		resolve_title_and_vassal_change = scope:change

		if = {
			limit = {
				scope:roman_king = {
					any_held_title = {
						NOT = { THIS = title:c_roma }
					}
				}
			}
			create_title_and_vassal_change = {
				type = usurped
				save_scope_as = title_change
				add_claim_on_loss = yes
			}
			every_in_list = {
				list = revert_to_emperor_titles
				change_title_holder = {
					holder = scope:emperor
					change = scope:title_change
					take_baronies = no
				}
			}
			every_in_list = {
				list = revert_to_emperor_vassals
				change_liege = {
					liege = scope:emperor
					change = scope:title_change
				}
			}
			resolve_title_and_vassal_change = scope:title_change
		}


		scope:ostrogoth_king = {
			every_held_title = {
				limit = {
					NOT = { this = title:k_ostrogoths }
					tier = tier_kingdom
				}
				add_to_list = titles_to_usurp
				clear_title_laws = yes
			}
		}

		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = title_change
			add_claim_on_loss = yes
		}
		every_in_list = {
			list = titles_to_usurp
			change_title_holder = {
				holder = scope:roman_king
				change = scope:title_change
				take_baronies = no
			}
		}
		every_in_list = {
			list = roman_vassals
			change_liege = {
				liege = scope:roman_king
				change = scope:title_change
			}
		}
		resolve_title_and_vassal_change = scope:title_change

		scope:ostrogoth_king = {
			set_relation_rival = {
				target = scope:roman_king
				reason = rival_usurper
			}
		}

		if = {
			limit = {
				scope:roman_king = {
					is_independent_ruler = no
				}
			}
			scope:roman_king = {
				create_title_and_vassal_change = {
					type = independency
					save_scope_as = going_independent
					add_claim_on_loss = no
				}
				becomes_independent = {
					change = scope:going_independent
				}
				resolve_title_and_vassal_change = scope:going_independent
			}
		}

		scope:ostrogoth_king = {
			start_war = {
				cb = cb_gothic_wars_amalasuntha
				target = scope:roman_king
			}
		}

		scope:emperor = {
			trigger_event = {
				id = germanic_events.0016
				days = 1
			}
		}
		scope:ostrogoth_king = {
			trigger_event = {
				id = germanic_events.0017
				days = 1
			}
		}
		every_player = {
			limit = {
				OR = {
					is_vassal_of = scope:ostrogoth_king
					is_vassal_of = scope:roman_king
				}
			}
			trigger_event = {
				id = germanic_events.0018
				days = 1
			}
		}
	}
}
	}

	{
germanic_events.0019 = {
	title = germanic_events.0019.t
	desc = germanic_events.0019.desc
	scope = character
	theme = realm
	override_background = {
		reference = corridor_night
	}

	left_portrait = {
		character = root
		animation = personality_greedy
	}

	right_portrait = {
		character = character:992020
		animation = fear
	}

	option = {
		name = germanic_events.0019.a
		root = {
			end_diarchy = yes
			imprison = {
				target = character:992020
				type = house_arrest
			}
		}
		character:992020 = {
			add_opinion = {
				modifier = hate_opinion
				target = root
				opinion = -50
			}
		}
		set_global_variable = {
			name = gothic_war_cycle_active
			value = yes
		}
		#if = {
		#	limit = {
		#		exists = title:e_byzantium.holder
		#	}
		#	title:e_byzantium.holder = {
		#		trigger_event = {
		#			id = germanic_events.0022
		#			days = 1
		#		}
		#	}
		#}
		ai_chance = { 
			base = 1
			modifier = {
				is_greek_or_roman = no
				add = 100
			}
		}
	}
	option = {
		name = germanic_events.0019.b
		character:992020 = {
			add_opinion = {
				modifier = grateful_opinion
				target = root
				opinion = 20
			}
		}
		root = {
			add_hook = {
		  		target = character:992020
		  		type = favor_hook
		 	}
		}
		ai_chance = { 
			base = 1
			modifier = {
				is_greek_or_roman = yes
				add = 100
			}
		}
	}
}

germanic_events.0020 = {
	title = germanic_events.0020.t
	desc = germanic_events.0020.desc
	scope = character
	theme = realm
	override_background = {
		reference = corridor_night
	}

	left_portrait = {
		character = root
		animation = personality_greedy
	}

	right_portrait = {
		character = character:992020
		animation = fear
	}

	option = {
		name = germanic_events.0020.a
		root = {
			imprison = {
				target = character:992020
				type = house_arrest
			}
		}
		character:992020 = {
			add_opinion = {
				modifier = hate_opinion
				target = root
				opinion = -50
			}
		}
		set_global_variable = {
			name = gothic_war_cycle_active
			value = yes
		}
		ai_chance = { 
			base = 1
			modifier = {
				is_greek_or_roman = no
				add = 100
			}
		}
	}
	option = {
		name = germanic_events.0020.b
		character:992020 = {
			add_opinion = {
				modifier = grateful_opinion
				target = root
				opinion = 20
			}
		}
		root = {
			add_hook = {
		  		target = character:992020
		  		type = favor_hook
		 	}
		}
		ai_chance = { 
			base = 1
			modifier = {
				is_greek_or_roman = yes
				add = 100
			}
		}
	}
}

germanic_events.0021 = {
	title = germanic_events.0021.t
	desc = germanic_events.0021.desc
	scope = character
	theme = realm
	override_background = {
		reference = corridor_night
	}

	left_portrait = {
		character = root
		animation = personality_bold
	}

	right_portrait = {
		character = character:992020
		animation = personality_greedy
	}

	immediate = {
		root = {
			save_scope_as = actor
		}
		character:992020 = {
			save_scope_as = recipient
		}
	}

	option = {
		name = germanic_events.0021.a
		scope:recipient = {
			add_opinion = {
				modifier = respect_opinion
				target = scope:actor
				opinion = -20
			}
		}
		send_child_to_clergy_effect = yes
		if = {
			limit = {
				exists = title:e_byzantium.holder
			}
			scope:recipient = {
				visit_court_of = title:e_byzantium.holder
			}
		}
		else = {
			scope:recipient = {
				kick_from_court_interaction_effect = yes
			}
		}
		set_global_variable = {
			name = gothic_war_cycle_active
			value = yes
		}
		ai_chance = { 
			base = 1
			modifier = {
				is_greek_or_roman = no
				add = 100
			}
		}
	}
	option = {
		name = germanic_events.0021.b
		character:992020 = {
			add_opinion = {
				modifier = love_opinion
				target = root
				opinion = 20
			}
		}
		root = {
			add_hook = {
		  		target = character:992020
		  		type = favor_hook
		 	}
		}
		ai_chance = { 
			base = 1
			modifier = {
				is_greek_or_roman = yes
				add = 100
			}
		}
	}
}

germanic_events.0022 = {
	title = germanic_events.0022.t
	desc = germanic_events.0022.desc
	scope = character
	theme = realm
	override_background = {
		reference = corridor_night
	}

	left_portrait = {
		character = root
		animation = anger
	}

	right_portrait = {
		character = character:992020
		animation = fear
	}

	option = {
		name = germanic_events.0022.a
		set_global_variable = {
			name = gothic_war_cycle_active
			value = yes
		}
		trigger_event = {
			id = germanic_events.0025
			days = 1
		}
		ai_chance = { 
			base = 0
			modifier = {
				AND = {
					has_global_variable = vandalic_war_won
					is_target_in_global_variable_list = {
						name = unavailable_unique_decisions
						target = flag:recall_belisarius
					}
				}
				add = 50
			}
		}
	}
	option = {
		name = germanic_events.0022.b
		set_global_variable = {
			name = gothic_war_cycle_prep
			value = yes
		}
		ai_chance = { 
			base = 50
			modifier = {
				AND = {
					has_global_variable = vandalic_war_won
					is_target_in_global_variable_list = {
						name = unavailable_unique_decisions
						target = flag:recall_belisarius
					}
				}
				add = -50
			}
		}
	}
}

germanic_events.0023 = {
	title = germanic_events.0023.t
	desc = germanic_events.0023.desc
	scope = character
	theme = realm
	override_background = {
		reference = corridor_night
	}

	left_portrait = {
		character = root
		animation = anger
	}

	right_portrait = {
		character = character:992020
		animation = fear
	}

	option = {
		name = germanic_events.0023.a
		set_global_variable = {
			name = gothic_war_cycle_active
			value = yes
		}
		trigger_event = {
			id = germanic_events.0025
			days = 1
		}
		ai_chance = { 
			base = 0
			modifier = {
				AND = {
					has_global_variable = vandalic_war_won
					is_target_in_global_variable_list = {
						name = unavailable_unique_decisions
						target = flag:recall_belisarius
					}
				}
				add = 50
			}
		}
	}
	option = {
		name = germanic_events.0023.b
		set_global_variable = {
			name = gothic_war_cycle_prep
			value = yes
		}
		ai_chance = { 
			base = 50
			modifier = {
				AND = {
					has_global_variable = vandalic_war_won
					is_target_in_global_variable_list = {
						name = unavailable_unique_decisions
						target = flag:recall_belisarius
					}
				}
				add = -50
			}
		}
	}
}
	}

	{
germanic_events.0025 = {
	type = character_event
	title = germanic_events.0025.t
	desc = germanic_events.0025.desc
	theme = realm
	override_icon = { reference = "gfx/interface/icons/event_types/special_rhomaion.dds" }

	left_portrait = {
		character = title:e_byzantium.holder
		animation = personality_bold
	}
	lower_center_portrait = {
		character = scope:commander_2
		animation = personality_bold
	}
	right_portrait = {
		character = scope:commander_1
		animation = personality_bold
	}

	immediate = {
		struggle:italian_struggle = {
            activate_struggle_catalyst = {
                catalyst = catalyst_TFE_major_historical_event_devastation
                character = root
            }
        }
		title:k_ostrogoths.holder = {
			set_scope_as = target_ruler
		}
		if = {
			limit = {
				global_var:belisarius = {
					is_alive = yes
					OR = {
						is_at_war = no
						NOT = {
							any_character_war = {
								using_cb = vandalic_war_cb
							}
						}
					}
					OR = {
						NOT = { exists = title:k_africae.holder }
						NOT = { title:k_africae.holder = global_var:belisarius }
					}
				}
				NOT = { exists = global_var:belisarius_betrayal }
			}
			global_var:belisarius = {
				save_scope_as = commander_1
			}
		}
		else_if = {
			limit = {
				character:armenian_01 = {
					is_alive = yes
				}
				character:armenian_01 = {
					is_courtier_of = root
				}
			}
			character:armenian_01 = {
				save_scope_as = commander_1
			}
		}
		else_if = {
			limit = {
				character:armenian_02 = {
					is_alive = yes
				}
				character:armenian_02 = {
					is_courtier_of = root
				}
			}
			character:armenian_02 = {
				save_scope_as = commander_1
			}
		}
		else = {
			random_courtier = {
				limit = {
					is_adult = yes
					is_male = yes
				}
				save_scope_as = commander_1
			}
		}
		random_courtier = {
			limit = {
				NOT = { THIS = scope:commander_1 }
				is_adult = yes
				is_male = yes
			}
			save_scope_as = commander_2
		}
	}

	option = {
		name = germanic_events.0025.a
		hidden_effect = {
			set_global_variable = {
				name = justinian_gothic_commander
				value = scope:commander_1
			}
			start_gothic_war_effect = yes
		}
		ai_chance = {
			base = 100
		}		
	}

	option = {
		name = germanic_events.0025.b
		hidden_effect = {
			set_global_variable = {
				name = justinian_gothic_commander
				value = scope:commander_2
			}
			start_gothic_war_effect = yes
		}
		ai_chance = {
			base = 0
		}		
	}
}
	}

	{
germanic_events.0028 = {
	scope = none
	hidden = yes

	immediate = {
		title:e_byzantium.holder = {
			save_scope_as = ostrogoth_king
		}
		if = {
			limit = {
				character:992029 = {
					is_alive = yes
					is_landed = no
					age > 15
				}
				title:e_byzantium.holder = {
					any_vassal_or_below = {
						exists = primary_heir
						primary_heir = character:992029
						any_held_title = {
							OR = {
								tier = tier_county
								tier = tier_duchy
							}
							OR = {
								kingdom = title:k_italy
								kingdom = title:k_italia_annonariae
								kingdom = title:k_italia_suburbicariae
							}
						}
					}
				}
			}
			title:e_byzantium.holder = {
				random_vassal_or_below = {
					limit = {
						exists = primary_heir
						primary_heir = character:992029
					}
					depose = yes
				}
			}
		}
		if = {
			limit = {
				character:992029 = {
					is_alive = yes
					is_landed = yes
					top_liege = title:e_byzantium.holder
				}
			}
			character:992029 = { save_scope_as = ostrogoth_king }
			if = {
				limit = {
					character:992029 = {
						OR = {
							has_trait = education_martial_1
							has_trait = education_martial_2
							has_trait = education_martial_3
						}
					}
				}
				character:992029 = {
					remove_trait = education_martial_1
					remove_trait = education_martial_2
					remove_trait = education_martial_3
					add_trait = education_martial_4
				}
			}
		}
		if = {
			limit = {
				scope:ostrogoth_king = title:e_byzantium.holder
			}
			title:e_byzantium.holder = {
				random_vassal_or_below = {
					limit = {
						culture = { has_cultural_pillar = heritage_east_germanic }
						any_held_title = {
							OR = {
								tier = tier_county
								tier = tier_duchy
							}
							OR = {
								kingdom = title:k_italy
								kingdom = title:k_italia_annonariae
								kingdom = title:k_italia_suburbicariae
							}
						}
					}
					weight = {
						base = 1
						modifier = {
							add = 5
							primary_title.tier >= tier_duchy
						}
						modifier = {
							add = martial
						}
						modifier = {
							add = martial
						}
						modifier = {
							add = martial
						}
						modifier = {
							add = martial
						}
						modifier = {
							add = martial
						}
					}
					save_scope_as = ostrogoth_king
				}
			}
		}

		create_title_and_vassal_change = {
			type = created
			save_scope_as = change
			add_claim_on_loss = no
		}
		title:k_ostrogoths = {
			change_title_holder = {
				holder = scope:ostrogoth_king
				change = scope:change
			}
		}
		resolve_title_and_vassal_change = scope:change
		
		title:e_byzantium.holder = {
			save_scope_as = emperor
		}

		title:e_byzantium.holder = {
			every_vassal_or_below = {
				limit = {
					highest_held_title_tier >= tier_county
					is_ai = yes
					culture = { has_cultural_pillar = heritage_east_germanic }
					NOT = { has_title = title:k_ostrogoths }
					any_held_title = {
						OR = {
							tier = tier_county
							tier = tier_duchy
						}
						OR = {
							kingdom = title:k_italy
							kingdom = title:k_italia_annonariae
							kingdom = title:k_italia_suburbicariae
						}
					}
				}
				add_to_list = ostrogoth_vassals_revival
			}
		}

		every_in_list = {
			list = ostrogoth_vassals_revival
			save_scope_as = ostrogoth_vassal_king_test
			every_held_title = {
				limit = {
					tier >= tier_kingdom
					NOT = { this = title:k_ostrogoths }
				}
				scope:ostrogoth_vassal_king_test = { destroy_title = prev }
			}
		}

		every_in_list = {
			list = ostrogoth_vassals_revival
			if = {
				limit = {
					NOT = {
						liege = {
							culture = {
								has_cultural_pillar = heritage_east_germanic
							}
						}
					}
				}
				add_to_list = ostrogoth_vassals_revival_final
			}
		}

		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = title_change
			add_claim_on_loss = yes
		}
		every_in_list = {
			list = ostrogoth_vassals_revival_final
			change_liege = {
				liege = scope:ostrogoth_king
				change = scope:title_change
			}
		}
		resolve_title_and_vassal_change = scope:title_change

		scope:emperor = {
			trigger_event = {
				id = germanic_events.0029
				days = 1
			}
		}
		scope:ostrogoth_king = {
			trigger_event = {
				id = germanic_events.0030
				days = 1
			}
		}
		every_player = {
			limit = {
				OR = {
					is_vassal_of = scope:ostrogoth_king
					is_vassal_of = scope:emperor
				}
				culture = { has_cultural_pillar = heritage_east_germanic }
				NOT = { THIS = scope:ostrogoth_king }
			}
			trigger_event = {
				id = germanic_events.0031
				days = 1
			}
		}
		every_player = {
			limit = {
				OR = {
					is_vassal_or_below_of = scope:ostrogoth_king
					is_vassal_or_below_of = scope:emperor
				}
				culture = { has_cultural_pillar = heritage_east_germanic }
			}
			trigger_event = {
				id = germanic_events.0034
				days = 2
			}
		}
	}
}
	}

	{
germanic_events.0032 = {
	title = germanic_events.0032.t
	desc = germanic_events.0032.desc
	scope = character
	theme = realm
	override_background = {
		reference = corridor_night
	}

	left_portrait = {
		character = title:k_ostrogoths.holder
		animation = anger
	}

	right_portrait = {
		character = character:992020
		animation = personality_bold
	}

	option = {
		name = germanic_events.0032.a
		set_global_variable = {
			name = gothic_war_cycle_active
			value = yes
		}
		root = {
			save_scope_as = emperor
		}
		trigger_event = {
			id = germanic_events.0033
			days = 1
		}
		ai_chance = { 
			base = 0
			modifier = {
				AND = {
					has_global_variable = vandalic_war_won
					is_target_in_global_variable_list = {
						name = unavailable_unique_decisions
						target = flag:recall_belisarius
					}
				}
				add = 50
			}
		}
	}
	option = {
		name = germanic_events.0032.b
		ai_chance = { 
			base = 50
			modifier = {
				AND = {
					has_global_variable = vandalic_war_won
					is_target_in_global_variable_list = {
						name = unavailable_unique_decisions
						target = flag:recall_belisarius
					}
				}
				add = -50
			}
		}
	}
}

germanic_events.0033 = {
	type = character_event
	title = germanic_events.0033.t
	desc = germanic_events.0033.desc
	theme = realm
	override_icon = { reference = "gfx/interface/icons/event_types/special_rhomaion.dds" }

	left_portrait = {
		character = title:e_byzantium.holder
		animation = personality_bold
	}
	lower_center_portrait = {
		character = scope:commander_2
		animation = personality_bold
	}
	right_portrait = {
		character = scope:commander_1
		animation = personality_bold
	}

	immediate = {
		title:k_ostrogoths.holder = {
			set_scope_as = target_ruler
		}
		if = {
			limit = {
				character:armenian_01 = {
					is_alive = yes
				}
				character:armenian_01 = {
					top_liege = scope:emperor
				}
			}
			character:armenian_01 = {
				save_scope_as = commander_1
			}
		}
		else_if = {
			limit = {
				character:belisarius_001 = {
					is_alive = yes
				}
				character:belisarius_001 = {
					top_liege = scope:emperor
					OR = {
						is_at_war = no
						NOT = {
							any_character_war = {
								using_cb = vandalic_war_cb
							}
						}
					}
				}
				NOT = { exists = global_var:belisarius_betrayal }
			}
			character:belisarius_001 = {
				save_scope_as = commander_1
			}
		}
		else_if = {
			limit = {
				character:armenian_02 = {
					is_alive = yes
				}
				character:armenian_02 = {
					top_liege = scope:emperor
				}
			}
			character:armenian_02 = {
				save_scope_as = commander_1
			}
		}
		else = {
			scope:emperor = {
				random_courtier = {
					limit = {
						is_adult = yes
						is_male = yes
						is_landed = no
					}
					save_scope_as = commander_1
				}
			}
		}
		if = {
			limit = {
				NOT = { scope:commander_1 = character:belisarius_001 }
			}
			character:belisarius_001 = {
				save_scope_as = commander_2
			}
		}
		else = {
			random_courtier = {
				limit = {
					NOT = { THIS = scope:commander_1 }
					is_adult = yes
					is_male = yes
				}
				save_scope_as = commander_2
			}
		}
	}

	option = {
		name = germanic_events.0033.a
		hidden_effect = {
			scope:commander_1 = {
				save_scope_as = roman_king
			}
			trigger_event = {
				id = germanic_events.0015
				days = 1
			}
		}
		ai_chance = {
			base = 1
			modifier = {
				add = 100
				scope:commander_1 = {
					is_ai = no
				}
			}
		}		
	}

	option = {
		name = germanic_events.0033.b
		hidden_effect = {
			scope:commander_2 = {
				save_scope_as = roman_king
			}
			trigger_event = {
				id = germanic_events.0015
				days = 1
			}
		}
		ai_chance = {
			base = 1
			modifier = {
				add = 100
				scope:commander_2 = {
					is_ai = no
				}
			}
		}		
	}
}
	}
}

"common/script_values/TFE_values.txt" = {
	{
	every_county_in_region = {
		region = world_europe_west_britannia
		limit = {
			holder.top_liege = { britannia_character_involved_in_struggle_trigger = no }
		}
		add = 1
	}
	}

	{
	if = {
		limit = {
			AND = {
				exists = struggle:eastern_iranian_struggle
				struggle:eastern_iranian_struggle = {
					is_struggle_phase = struggle_TFE_eastern_iranian_phase_development
				}
			}
		}
		multiply = 0.7
	}
	}
}

"events/TFE_flavour_events.txt" = {
	{
TFE_flavour_events.0007 = {
	title = TFE_flavour_events.0007.t
	desc = TFE_flavour_events.0007.desc
	scope = character
	theme = martial
	trigger = {
		character:cenmar_01 = {
			is_alive = yes
		}
	}
	override_background = {
		reference = throne_room
	}
	left_portrait = {
		character = root
		animation = rage
	}
	right_portrait = {
		character = character:cenmar_01
		animation = worry
	}
	option = {
		name = TFE_flavour_events.0007.a
		character:cenmar_01 = {
			death = {
				death_reason = death_defenestration
				killer = root
			}
		}
		add_dread = 10
		add_prestige = -100
		stress_impact = {
			vengeful = minor_stress_impact_loss
			sadistic = minor_stress_impact_loss
			compassionate = minor_stress_impact_gain
		}
	}
	option = {
		name = TFE_flavour_events.0007.b
		add_prestige = 100
		stress_impact = {
			vengeful = minor_stress_impact_gain
			sadistic = minor_stress_impact_gain
			compassionate = minor_stress_impact_loss
		}
		remove_courtier_or_guest = character:cenmar_01
	}
}
	}

	{
TFE_flavour_events.0051 = {
	hidden = yes
	scope = none

	immediate = {
		if = {
			limit = {
				character:vandals_013 = {
					is_alive = yes
					is_landed = yes
					is_vassal_or_below_of = scope:defender
				}
			}
			scope:war = {
				add_defender = character:vandals_013
			}
		}
		if = {
			limit = {
				character:vandals_146 = {
					is_alive = yes
					is_landed = yes
					is_vassal_or_below_of = scope:defender
				}
			}
			scope:war = {
				add_attacker = character:vandals_146
			}
		}
		
	}
}
	}
}

"common/buildings/TFE_special_buildings.txt" = {
	{
palace_khawarnaq = {
	construction_time = slow_construction_time

	type_icon = "aljaferia.dds"

	can_construct_potential = {
		always = yes
	}

	can_construct = {
		always = yes
	}

	character_modifier = {
		vassal_opinion = 5
		monthly_prestige_gain_per_happy_powerful_vassal_add = 0.05
		monthly_dynasty_prestige_mult = 0.05
	}
	county_modifier = {
		tax_mult = 0.1
		development_growth_factor = 0.05
	}
	ai_value = {
		base = 100
		ai_tier_1_building_modifier = yes
	}
	on_complete = {
		county_controller = {
			trigger_event = TFE_flavour_events.0007
		}
	}
	cost_gold = expensive_building_tier_3_cost
	type = special
	flag = travel_point_of_interest_wonder
}
	}
}

"events/tfe_title_events.txt" = {
	# The event about the division of the Roman Empire should not mention Diocletian.
	{
	immediate = {
		character:145241 = {
			save_scope_as = diocletian
		}
	}
	}

	# from error.log: [event.cpp:201]: character is not a valid entry at file: events/tfe_title_events.txt line: 1525 (tfe_title_event.0009) (valid: character_event, court_event, activity_event, letter_event )
	{
# De jure drift Dniester and Dnieper towards Hunnic Empire
tfe_title_event.0009 = {
	type = character
	hidden = yes
	immediate = {
		# 15 years of drift progress for both titles
		title:k_ruthenia = {
			change_de_jure_drift_progress = {
				target = title:e_hunnic_empire
				value = 180
			}
		}
		title:k_galicia-volhynia = {
			change_de_jure_drift_progress = {
				target = title:e_hunnic_empire
				value = 180
			}
		}
	}
}
	}

	{
#	Conduct the reformation
tfe_title_event.0010 = {
	type = character_event
	title = tfe_title_event.0010.t
	desc = tfe_title_event.0010.desc
	theme = realm
	left_portrait =	{
		character = scope:founder
		animation = personality_bold
	}

	immediate = {
		play_music_cue = "mx_cue_epic_sacral_moment"
		restore_holy_roman_empire_decision_scripted_effect = yes
		create_artifact_reichskrone_effect = { OWNER = this }
	}

	#Renovatio Imperii!
	option = {
		name = tfe_title_event.0010.a
		give_nickname = nick_the_great
		add_prestige_experience = monumental_fame_gain
		every_vassal = {
			add_opinion = {
				modifier = reformed_holy_roman_empire_opinion
				target = root
			}
			custom = restore_holy_roman_empire_decision_effects_vassal_opinion.tt
		}
		ai_chance = {	#When taken, the AI should always pick this.
			base = 100
		}
	}
	
	##No Germany please, we're Byzantine.
	#option = {
	#	name = tfe_title_event.0010.b
	#	ai_chance = {	#When taken, the AI should always go for the decision.
	#		base = 0
	#	}
	#}
}
	}
}

"events/dharma_dravidian.txt" = {
	{
dharma_dravidian.008 = {
	type = character_event
	theme = war
	title = gothic_wars_0012.t
	desc = gothic_wars_0013.desc

	left_portrait = {
		character = scope:old_acclaimed_knight
		animation = rage 
	}
	right_portrait = {
		character = ROOT
		animation = fear
	}
lower_right_portrait = character:900962
	option = {
		name = gothic_wars_0013.a
	}
}
	}
}

"events/steppe_events.txt" = {
	{
steppe.6666 = {
	scope = none
	hidden = yes

	immediate = {
		debug_log = "Attila spawns!"
		debug_log_date = yes
		spawn_attila_character_effect = yes
		set_global_variable = {
			name = attila_spawn
			value = yes
		}
		title:e_hunnic_empire.holder = {
			save_scope_as = khan
		}
		scope:attila = {
			copy_inheritable_appearance_from = character:990000
			add_trait = the_hun
			change_age = -3
			give_nickname = nick_the_hun
			set_character_faith = scope:khan.faith
			set_culture = scope:khan.culture
			if = {
				limit = {
					scope:khan = {
						gender = male
					}
				}
				set_father = scope:khan
				set_house = scope:khan.house
			}
			if = {
				limit = {
					scope:khan = {
						gender = female
					}
				}
				set_mother = scope:khan
				set_house = scope:khan.house
			}
			scope:khan = {
				set_designated_heir = scope:attila
				add_courtier = scope:attila
			}
			#Doesn't work
			#add_martial_skill = 10
			#add_diplomacy_skill = 5
			#add_intrigue_skill = 5
			#add_stewardship_skill = 5
			#add_prowess_skill = 10
		}
		every_player = {
			trigger_event = {
				id = steppe.0011
			}
		}	
	}


}
	}
}

"events/tfe_culture_events.txt" = {
	{
		modifier = {
			add = 2
			OR = {
				this = character:996002  # Odoacer
				this = character:992016  # Theodoric
			}
		}
	}
}

"common/culture/name_lists/TFE_easter_egg.txt" = {
	{
		NÃ¤cken
	}
}

"common\scripted_modifiers\00_faction_modifiers.txt" = {
	{
	# Keep it while the Calip is alive
	modifier = {
		add = -1000
		$FACTION_TARGET$ = {
			this = character:73683
			any_held_title = {
				this = title:k_andalusia
			}
		}
		has_game_rule = dissolution_after_caliph_death
	}
	}
}

"common/on_action/senate_on_actions.txt" = {
	{
on_game_start = {
	on_actions = {
		on_senate_start_italy
	}
	on_actions = {
		on_senate_start_eastern
	}
	
}

on_senate_start_italy = {
	effect = {
		set_global_variable = {
			name = italian_senate_dismantle
			value = flag:no
		}
		set_global_variable = {
			name = eastern_senate_dismantle
			value = flag:no
		}
		set_global_variable = {
			name = office_events_eastern
			value = flag:yes
		}
		set_global_variable = {
			name = office_events_italy
			value = flag:yes
		}
		while = {
			count = 6
			create_character = {
				culture = title:c_roma.culture
				gender = male
				age = {35 50}
				dynasty = generate
				trait = low_senator
				faith = title:c_roma.holder.top_liege.faith
				
				employer = title:c_roma.holder.top_liege
				save_scope_as = senator
			}
			scope:senator = { 
				add_to_global_variable_list = {
					name = low_senate_italy
					target = THIS
				}
				add_to_global_variable_list = {
					name = all_senate_italy
					target = THIS
				}
				if = {
					limit = {
						title:c_roma.holder.top_liege.primary_title = {
							is_titular = no
						}
					}
					add_pressed_claim = title:c_roma.holder.top_liege.primary_title
				}
				decide_senate_idea = yes
				if = {
					limit = {
						NOT = {
							any_held_title = { is_noble_family_title = yes }
						}
						liege = { government_allows = administrative }
					}
					create_noble_family_effect = yes
					domicile ?= { set_up_domicile_estate_effect = yes }
					if = {
						if = { limit = { liege = { has_government = administrative_government } } change_government = administrative_government }
						if = { limit = { liege = { has_government = autocratic_government_ep3 } } change_government = autocratic_government_ep3 }
						if = { limit = { liege = { has_government = imperial_government } } change_government = imperial_government }
						if = { limit = { liege = { has_government = autocratic_government } } change_government = autocratic_government }
						if = { limit = { liege = { has_government = imperial_cult_government } } change_government = imperial_cult_government }
					}
				}
			}
		}
		while = {
			count = 10
			create_character = {
				culture = title:c_roma.culture
				gender = male
				age = {35 50}
				dynasty = generate
				trait = senator
				faith = title:c_roma.holder.top_liege.faith
				
				employer = title:c_roma.holder.top_liege
				save_scope_as = senator
			}
			scope:senator = { 
				add_to_global_variable_list = {
					name = senate_italy
					target = THIS
				}
				add_to_global_variable_list = {
					name = all_senate_italy
					target = THIS
				}
				if = {
					limit = {
						title:c_roma.holder.top_liege.primary_title = {
							is_titular = no
						}
					}
					add_pressed_claim = title:c_roma.holder.top_liege.primary_title
				}
				decide_senate_idea = yes
				if = {
					limit = {
						NOT = {
							any_held_title = { is_noble_family_title = yes }
						}
						liege = { government_allows = administrative }
					}
					create_noble_family_effect = yes
					domicile ?= { set_up_domicile_estate_effect = yes }
					if = {
						if = { limit = { liege = { has_government = administrative_government } } change_government = administrative_government }
						if = { limit = { liege = { has_government = autocratic_government_ep3 } } change_government = autocratic_government_ep3 }
						if = { limit = { liege = { has_government = imperial_government } } change_government = imperial_government }
						if = { limit = { liege = { has_government = autocratic_government } } change_government = autocratic_government }
						if = { limit = { liege = { has_government = imperial_cult_government } } change_government = imperial_cult_government }
					}
				}
			}
			
		}
		while = {
			count = 5
			create_character = {
				culture = title:c_roma.culture
				gender = male
				age = {35 50}
				dynasty = generate
				trait = high_senator
				faith = title:c_roma.holder.top_liege.faith
				
				employer = title:c_roma.holder.top_liege
				save_scope_as = senator
			}
			scope:senator = { 
				add_to_global_variable_list = {
					name = high_senate_italy
					target = THIS
				}
				add_to_global_variable_list = {
					name = all_senate_italy
					target = THIS
				}
				if = {
					limit = {
						title:c_roma.holder.top_liege.primary_title = {
							is_titular = no
						}
					}
					add_pressed_claim = title:c_roma.holder.top_liege.primary_title
				}
				decide_senate_idea = yes
				if = {
					limit = {
						NOT = {
							any_held_title = { is_noble_family_title = yes }
						}
						liege = { government_allows = administrative }
					}
					create_noble_family_effect = yes
					domicile ?= { set_up_domicile_estate_effect = yes }
					if = {
						if = { limit = { liege = { has_government = administrative_government } } change_government = administrative_government }
						if = { limit = { liege = { has_government = autocratic_government_ep3 } } change_government = autocratic_government_ep3 }
						if = { limit = { liege = { has_government = imperial_government } } change_government = imperial_government }
						if = { limit = { liege = { has_government = autocratic_government } } change_government = autocratic_government }
						if = { limit = { liege = { has_government = imperial_cult_government } } change_government = imperial_cult_government }
					}
				}
			}
			
		}
		every_in_global_list = {
			variable  = low_senate_italy
			random_list = {
				33 = {
					add_to_global_variable_list = {
						name = aristocratic_senate_italy
						target = THIS
					}
				}
				33 = {
					add_to_global_variable_list = {
						name = populist_senate_italy
						target = THIS
					}
				}
				33 = {
					add_to_global_variable_list = {
						name = traditionalist_senate_italy
						target = THIS
					}
				}
			}
		}
		every_in_global_list = {
			variable  = senate_italy
			random_list = {
				33 = {
					add_to_global_variable_list = {
						name = aristocratic_senate_italy
						target = THIS
					}
				}
				33 = {
					add_to_global_variable_list = {
						name = populist_senate_italy
						target = THIS
					}
				}
				33 = {
					add_to_global_variable_list = {
						name = traditionalist_senate_italy
						target = THIS
					}
				}
			}
		}
		every_in_global_list = {
			variable  = high_senate_italy
			random_list = {
				33 = {
					add_to_global_variable_list = {
						name = aristocratic_senate_italy
						target = THIS
					}
				}
				33 = {
					add_to_global_variable_list = {
						name = populist_senate_italy
						target = THIS
					}
				}
				33 = {
					add_to_global_variable_list = {
						name = traditionalist_senate_italy
						target = THIS
					}
				}
			}
		}
		set_global_variable = {
			name = aristocratic_senate_italy_gold
			value = 1000
		}
		set_global_variable = {
			name = populist_senate_italy_gold
			value = 1000
		}
		set_global_variable = {
			name = traditionalist_senate_italy_gold
			value = 1000
		}
		set_global_variable = {
			name = italy_senate_admin
			value = flag:taxing_rights
		}
		set_global_variable = {
			name = italy_senate_military
			value = flag:exclusion
		}
		set_global_variable = {
			name = italy_senate_legistlation
			value = flag:regular
		}
		set_global_variable = {
			name = italy_senate_tasks
			value = flag:none
		}
		title:c_roma.holder.top_liege = {
			add_character_modifier = taxing_rights_senate_admin
			add_character_modifier = exclusion_senate_mil
			add_character_modifier = regular_senate_legislation
		}
	}
	on_actions = {
		delay = { days = { 365 420 } }
		on_senate_yearly
	}
	on_actions = {
		delay = { months = { 60 80 } }
		on_senate_lol_italy
	}
	on_actions = {
		delay = { years = 20 }
		on_senate_20_years
	}
	on_actions = {
		delay = { months = 1 }
		on_senate_monthly_income
	}
}
on_senate_start_eastern = {
	effect = {
		while = {
			count = 6
			create_character = {
				culture = title:c_byzantion.holder.top_liege.culture
				gender = male
				age = {35 50}
				dynasty = generate
				trait = low_senator
				faith = title:c_byzantion.holder.top_liege.faith
				
				employer = title:c_byzantion.holder.top_liege
				save_scope_as = senator
			}
			scope:senator = { 
				add_to_global_variable_list = {
					name = low_senate_eastern
					target = THIS
				}
				add_to_global_variable_list = {
					name = all_senate_eastern
					target = THIS
				}
				if = {
					limit = {
						title:c_byzantion.holder.top_liege.primary_title = {
							is_titular = no
						}
					}
					add_pressed_claim = title:c_byzantion.holder.top_liege.primary_title
				}
				decide_senate_idea = yes
				if = {
					limit = {
						NOT = {
							any_held_title = { is_noble_family_title = yes }
						}
						liege = { government_allows = administrative }
					}
					create_noble_family_effect = yes
					domicile ?= { set_up_domicile_estate_effect = yes }
					if = {
						if = { limit = { liege = { has_government = administrative_government } } change_government = administrative_government }
						if = { limit = { liege = { has_government = autocratic_government_ep3 } } change_government = autocratic_government_ep3 }
						if = { limit = { liege = { has_government = imperial_government } } change_government = imperial_government }
						if = { limit = { liege = { has_government = autocratic_government } } change_government = autocratic_government }
						if = { limit = { liege = { has_government = imperial_cult_government } } change_government = imperial_cult_government }
					}
				}
			}
		}
		while = {
			count = 10
			create_character = {
				culture = title:c_byzantion.holder.top_liege.culture
				gender = male
				age = {35 50}
				dynasty = generate
				trait = senator
				faith = title:c_byzantion.holder.top_liege.faith
				
				employer = title:c_byzantion.holder.top_liege
				save_scope_as = senator
			}
			scope:senator = { 
				add_to_global_variable_list = {
					name = senate_eastern
					target = THIS
				}
				add_to_global_variable_list = {
					name = all_senate_eastern
					target = THIS
				}
				if = {
					limit = {
						title:c_byzantion.holder.top_liege.primary_title = {
							is_titular = no
						}
					}
					add_pressed_claim = title:c_byzantion.holder.top_liege.primary_title
				}
				decide_senate_idea = yes
				if = {
					limit = {
						NOT = {
							any_held_title = { is_noble_family_title = yes }
						}
						liege = { government_allows = administrative }
					}
					create_noble_family_effect = yes
					domicile ?= { set_up_domicile_estate_effect = yes }
					if = {
						if = { limit = { liege = { has_government = administrative_government } } change_government = administrative_government }
						if = { limit = { liege = { has_government = autocratic_government_ep3 } } change_government = autocratic_government_ep3 }
						if = { limit = { liege = { has_government = imperial_government } } change_government = imperial_government }
						if = { limit = { liege = { has_government = autocratic_government } } change_government = autocratic_government }
						if = { limit = { liege = { has_government = imperial_cult_government } } change_government = imperial_cult_government }
					}
				}
			}
			
		}
		while = {
			count = 5
			create_character = {
				culture = title:c_byzantion.holder.top_liege.culture
				gender = male
				age = {35 50}
				dynasty = generate
				trait = high_senator
				faith = title:c_byzantion.holder.top_liege.faith
				
				employer = title:c_byzantion.holder.top_liege
				save_scope_as = senator
			}
			scope:senator = { 
				add_to_global_variable_list = {
					name = high_senate_eastern
					target = THIS
				}
				add_to_global_variable_list = {
					name = all_senate_eastern
					target = THIS
				}
				if = {
					limit = {
						title:c_byzantion.holder.top_liege.primary_title = {
							is_titular = no
						}
					}
					add_pressed_claim = title:c_byzantion.holder.top_liege.primary_title
				}
				decide_senate_idea = yes
				if = {
					limit = {
						NOT = {
							any_held_title = { is_noble_family_title = yes }
						}
						liege = { government_allows = administrative }
					}
					create_noble_family_effect = yes
					domicile ?= { set_up_domicile_estate_effect = yes }
					if = {
						if = { limit = { liege = { has_government = administrative_government } } change_government = administrative_government }
						if = { limit = { liege = { has_government = autocratic_government_ep3 } } change_government = autocratic_government_ep3 }
						if = { limit = { liege = { has_government = imperial_government } } change_government = imperial_government }
						if = { limit = { liege = { has_government = autocratic_government } } change_government = autocratic_government }
						if = { limit = { liege = { has_government = imperial_cult_government } } change_government = imperial_cult_government }
					}
				}
			}
			
		}
		every_in_global_list = {
			variable  = low_senate_eastern
			random_list = {
				33 = {
					add_to_global_variable_list = {
						name = aristocratic_senate_eastern
						target = THIS
					}
				}
				33 = {
					add_to_global_variable_list = {
						name = populist_senate_eastern
						target = THIS
					}
				}
				33 = {
					add_to_global_variable_list = {
						name = traditionalist_senate_eastern
						target = THIS
					}
				}
			}
		}
		every_in_global_list = {
			variable  = senate_eastern
			random_list = {
				33 = {
					add_to_global_variable_list = {
						name = aristocratic_senate_eastern
						target = THIS
					}
				}
				33 = {
					add_to_global_variable_list = {
						name = populist_senate_eastern
						target = THIS
					}
				}
				33 = {
					add_to_global_variable_list = {
						name = traditionalist_senate_eastern
						target = THIS
					}
				}
			}
		}
		every_in_global_list = {
			variable  = high_senate_eastern
			random_list = {
				33 = {
					add_to_global_variable_list = {
						name = aristocratic_senate_eastern
						target = THIS
					}
				}
				33 = {
					add_to_global_variable_list = {
						name = populist_senate_eastern
						target = THIS
					}
				}
				33 = {
					add_to_global_variable_list = {
						name = traditionalist_senate_eastern
						target = THIS
					}
				}
			}
		}
		set_global_variable = {
			name = aristocratic_senate_eastern_gold
			value = 1000
		}
		set_global_variable = {
			name = populist_senate_eastern_gold
			value = 1000
		}
		set_global_variable = {
			name = traditionalist_senate_eastern_gold
			value = 1000
		}
		set_global_variable = {
			name = eastern_senate_admin
			value = flag:taxing_rights
		}
		set_global_variable = {
			name = eastern_senate_military
			value = flag:exclusion
		}
		set_global_variable = {
			name = eastern_senate_legistlation
			value = flag:regular
		}
		set_global_variable = {
			name = eastern_senate_tasks
			value = flag:none
		}
		title:c_byzantion.holder.top_liege = {
			add_character_modifier = taxing_rights_senate_admin
			add_character_modifier = exclusion_senate_mil
			add_character_modifier = regular_senate_legislation
		}
	}
	on_actions = {
		delay = { days = { 365 420 } }
		on_senate_yearly_eastern
	}
	on_actions = {
		delay = { years = 20 }
		on_senate_20_years_eastern
	}
	on_actions = {
		delay = { months = { 70 90 } }
		on_senate_lol_eastern
	}
}

on_senate_yearly = {
	effect = {
		every_in_global_list = {
			variable  = all_senate_italy
			remove_variable = loyalist_senate
			remove_variable = disloyal_senate
			remove_variable = pragmatic_senate
			remove_variable = gloryhound_senate
			decide_senate_idea = yes
		}
		title:c_roma.holder.top_liege = {
			if = {
				limit = {
					access_to_italian_senate = yes
				}
				if = {
					limit = {
						global_var:italy_senate_admin = flag:minimum
						NOT = {
							has_character_modifier = minumum_senate_admin
						}
					}
					add_character_modifier = minumum_senate_admin
				}
				else_if = {
					limit = {
						global_var:italy_senate_admin = flag:taxing_rights
						NOT = {
							has_character_modifier = taxing_rights_senate_admin
						}
					}
					add_character_modifier = taxing_rights_senate_admin
				}
				else_if = {
					limit = {
						global_var:italy_senate_admin = flag:absolute
						NOT = {
							has_character_modifier = absolute_senate_admin
						}
					}
					add_character_modifier = absolute_senate_admin
				}
	
				if = {
					limit = {
						global_var:italy_senate_military = flag:exclusion
						NOT = {
							has_character_modifier = exclusion_senate_mil
						}
					}
					add_character_modifier = exclusion_senate_mil
				}
				else_if = {
					limit = {
						global_var:italy_senate_military = flag:regular
						NOT = {
							has_character_modifier = regular_senate_mil
						}
					}
					add_character_modifier = regular_senate_mil
				}
				else_if = {
					limit = {
						global_var:italy_senate_military = flag:retinue
						NOT = {
							has_character_modifier = retinue_senate_mil
						}
					}
					add_character_modifier = retinue_senate_mil
				}
	
				if = {
					limit = {
						global_var:italy_senate_legistlation = flag:no_legislation
						NOT = {
							has_character_modifier = no_senate_legislation
						}
					}
					add_character_modifier = no_senate_legislation
				}
				else_if = {
					limit = {
						global_var:italy_senate_legistlation = flag:regular
						NOT = {
							has_character_modifier = regular_senate_legislation
						}
					}
					add_character_modifier = regular_senate_legislation
				}
				else_if = {
					limit = {
						global_var:italy_senate_legistlation = flag:absolute
						NOT = {
							has_character_modifier = absolute_senate_legislation
						}
					}
					add_character_modifier = absolute_senate_legislation
				}
			}
		}
	}
	on_actions = {
		delay = { days = { 365 420 } }
		on_senate_yearly
	}
}
on_senate_yearly_eastern = {
	effect = {
		every_in_global_list = {
			variable  = all_senate_eastern
			remove_variable = loyalist_senate
			remove_variable = disloyal_senate
			remove_variable = pragmatic_senate
			remove_variable = gloryhound_senate
			decide_senate_idea = yes
		}
		title:c_byzantion.holder.top_liege = {
			if = {
				limit = {
					access_to_eastern_senate = yes
				}
				if = {
					limit = {
						global_var:eastern_senate_admin = flag:minimum
						NOT = {
							has_character_modifier = minumum_senate_admin
						}
					}
					add_character_modifier = minumum_senate_admin
				}
				else_if = {
					limit = {
						global_var:eastern_senate_admin = flag:taxing_rights
						NOT = {
							has_character_modifier = taxing_rights_senate_admin
						}
					}
					add_character_modifier = taxing_rights_senate_admin
				}
				else_if = {
					limit = {
						global_var:eastern_senate_admin = flag:absolute
						NOT = {
							has_character_modifier = absolute_senate_admin
						}
					}
					add_character_modifier = absolute_senate_admin
				}
	
				if = {
					limit = {
						global_var:eastern_senate_military = flag:exclusion
						NOT = {
							has_character_modifier = exclusion_senate_mil
						}
					}
					add_character_modifier = exclusion_senate_mil
				}
				else_if = {
					limit = {
						global_var:eastern_senate_military = flag:regular
						NOT = {
							has_character_modifier = regular_senate_mil
						}
					}
					add_character_modifier = regular_senate_mil
				}
				else_if = {
					limit = {
						global_var:eastern_senate_military = flag:retinue
						NOT = {
							has_character_modifier = retinue_senate_mil
						}
					}
					add_character_modifier = retinue_senate_mil
				}
	
				if = {
					limit = {
						global_var:eastern_senate_legistlation = flag:no_legislation
						NOT = {
							has_character_modifier = no_senate_legislation
						}
					}
					add_character_modifier = no_senate_legislation
				}
				else_if = {
					limit = {
						global_var:eastern_senate_legistlation = flag:regular
						NOT = {
							has_character_modifier = regular_senate_legislation
						}
					}
					add_character_modifier = regular_senate_legislation
				}
				else_if = {
					limit = {
						global_var:eastern_senate_legistlation = flag:absolute
						NOT = {
							has_character_modifier = absolute_senate_legislation
						}
					}
					add_character_modifier = absolute_senate_legislation
				}
			}
		}
	}
	on_actions = {
		delay = { days = { 365 420 } }
		on_senate_yearly_eastern
	}
}

on_title_gain = {
	on_actions = { senate_on_title_gain }
	on_actions = { senate_on_title_gain_eastern }
}

senate_on_title_gain = {
	effect = {
		if = {
			limit = {
				is_target_in_global_variable_list = {
					name = all_senate_italy
					target = THIS
				}
				scope:title = { is_noble_family_title = no }
			}
			if = {
				limit = {
					has_trait = low_senator
				}
				remove_trait = low_senator
				add_trait = former_senator
				if = {
					limit = {
						has_claim_on = title:c_roma.holder.top_liege.primary_title
					}
					remove_claim = title:c_roma.holder.top_liege.primary_title
				}
				remove_list_global_variable = {
					name = low_senate_italy
					target = THIS
				}
				remove_list_global_variable = {
					name = all_senate_italy
					target = THIS
				}
				remove_list_global_variable = {
					name = aristocratic_senate_italy
					target = THIS
				}
				remove_list_global_variable = {
					name = populist_senate_italy
					target = THIS
				}
				remove_list_global_variable = {
					name = traditionalist_senate_italy
					target = THIS
				}
				if = {
					limit = {
						title:c_roma.holder.top_liege = {
							any_courtier = {
								has_trait = training_senator
								age >= 35
							}
						}
					}
					title:c_roma.holder.top_liege = {
						random_courtier = {
							limit = {
								has_trait = training_senator
								age >= 35
							}
							remove_trait =training_senator
							add_trait = low_senator 
							add_to_global_variable_list = {
								name = low_senate_italy
								target = THIS
							}
							add_to_global_variable_list = {
								name = all_senate_italy
								target = THIS
							}
							if = {
								limit = {
									title:c_roma.holder.top_liege.primary_title = {
										is_titular = no
									}
								}
								add_pressed_claim = title:c_roma.holder.top_liege.primary_title
							}
							decide_senate_party = yes
							decide_senate_idea = yes
						}
					}
				}
				else = {
					create_character = {
						culture = title:c_roma.culture
						gender = male
						age = {35 50}
						dynasty = generate
						trait = low_senator
						faith = title:c_roma.holder.top_liege.faith
						
						employer = title:c_roma.holder.top_liege
						save_scope_as = senator
					}
					scope:senator = { 
						add_to_global_variable_list = {
							name = low_senate_italy
							target = THIS
						}
						add_to_global_variable_list = {
							name = all_senate_italy
							target = THIS
						}
						if = {
							limit = {
								title:c_roma.holder.top_liege.primary_title = {
									is_titular = no
								}
							}
							add_pressed_claim = title:c_roma.holder.top_liege.primary_title
						}
						decide_senate_party = yes
						decide_senate_idea = yes
					}
				}
			}
			else_if = {
				limit = {
					has_trait = senator
				}
				remove_trait = senator
				add_trait = former_senator
				if = {
					limit = {
						has_claim_on = title:c_roma.holder.top_liege.primary_title
					}
					remove_claim = title:c_roma.holder.top_liege.primary_title
				}
				remove_list_global_variable = {
					name = senate_italy
					target = THIS
				}
				remove_list_global_variable = {
					name = all_senate_italy
					target = THIS
				}
				remove_list_global_variable = {
					name = aristocratic_senate_italy
					target = THIS
				}
				remove_list_global_variable = {
					name = populist_senate_italy
					target = THIS
				}
				remove_list_global_variable = {
					name = traditionalist_senate_italy
					target = THIS
				}
				random_in_global_list = {
					variable  = low_senate_italy
					remove_trait = low_senator
					add_trait = senator
					create_character = {
						culture = title:c_roma.culture
						gender = male
						age = {35 50}
						dynasty = generate
						trait = low_senator
						faith = title:c_roma.holder.top_liege.faith
						
						employer = title:c_roma.holder.top_liege
						save_scope_as = senator
					}
					scope:senator = { 
						add_to_global_variable_list = {
							name = low_senate_italy
							target = THIS
						}
						add_to_global_variable_list = {
							name = all_senate_italy
							target = THIS
						}
						if = {
							limit = {
								title:c_roma.holder.top_liege.primary_title = {
									is_titular = no
								}
							}
							add_pressed_claim = title:c_roma.holder.top_liege.primary_title
						}
						decide_senate_party = yes
						decide_senate_idea = yes
					}
					remove_list_global_variable = {
						name = low_senate_italy
						target = THIS
					}
					add_to_global_variable_list = {
						name = senate_italy
						target = THIS
					}
				}
			}
			else_if = {
				limit = {
					has_trait = high_senator
				}
				remove_trait = high_senator
				add_trait = former_senator
				if = {
					limit = {
						has_claim_on = title:c_roma.holder.top_liege.primary_title
					}
					remove_claim = title:c_roma.holder.top_liege.primary_title
				}
				remove_list_global_variable = {
					name = high_senate_italy
					target = THIS
				}
				remove_list_global_variable = {
					name = all_senate_italy
					target = THIS
				}
				remove_list_global_variable = {
					name = aristocratic_senate_italy
					target = THIS
				}
				remove_list_global_variable = {
					name = populist_senate_italy
					target = THIS
				}
				remove_list_global_variable = {
					name = traditionalist_senate_italy
					target = THIS
				}
				random_in_global_list = {
					variable  = senate_italy
					remove_trait = senator
					add_trait = high_senator
					remove_list_global_variable = {
						name = senate_italy
						target = THIS
					}
					add_to_global_variable_list = {
						name = high_senate_italy
						target = THIS
					}
					random_in_global_list = {
						variable  = low_senate_italy
						remove_trait = low_senator
						add_trait = senator
						create_character = {
							culture = title:c_roma.culture
							gender = male
							age = {35 50}
							dynasty = generate
							trait = low_senator
							faith = title:c_roma.holder.top_liege.faith
							
							employer = title:c_roma.holder.top_liege
							save_scope_as = senator
						}
						scope:senator = { 
							add_to_global_variable_list = {
								name = low_senate_italy
								target = THIS
							}
							add_to_global_variable_list = {
								name = all_senate_italy
								target = THIS
							}
							if = {
								limit = {
									title:c_roma.holder.top_liege.primary_title = {
										is_titular = no
									}
								}
								add_pressed_claim = title:c_roma.holder.top_liege.primary_title
							}
							decide_senate_party = yes
							decide_senate_idea = yes
						}
						remove_list_global_variable = {
							name = low_senate_italy
							target = THIS
						}
						add_to_global_variable_list = {
							name = senate_italy
							target = THIS
						}
					}
				}
			}
		}
	}
}
senate_on_title_gain_eastern = {
	effect = {
		if = {
			limit = {
				is_target_in_global_variable_list = {
					name = all_senate_eastern
					target = THIS
				}
				scope:title = { is_noble_family_title = no }
			}
			if = {
				limit = {
					has_trait = low_senator
				}
				remove_trait = low_senator
				add_trait = former_senator
				if = {
					limit = {
						has_claim_on = title:c_byzantion.holder.top_liege.primary_title
					}
					remove_claim = title:c_byzantion.holder.top_liege.primary_title
				}
				remove_list_global_variable = {
					name = low_senate_eastern
					target = THIS
				}
				remove_list_global_variable = {
					name = all_senate_eastern
					target = THIS
				}
				remove_list_global_variable = {
					name = aristocratic_senate_eastern
					target = THIS
				}
				remove_list_global_variable = {
					name = populist_senate_eastern
					target = THIS
				}
				remove_list_global_variable = {
					name = traditionalist_senate_eastern
					target = THIS
				}
				if = {
					limit = {
						title:c_byzantion.holder.top_liege = {
							any_courtier = {
								has_trait = training_senator
								age >= 35
							}
						}
					}
					title:c_byzantion.holder.top_liege = {
						random_courtier = {
							limit = {
								has_trait = training_senator
								age >= 35
							}
							remove_trait =training_senator
							add_trait = low_senator 
							add_to_global_variable_list = {
								name = low_senate_eastern
								target = THIS
							}
							add_to_global_variable_list = {
								name = all_senate_eastern
								target = THIS
							}
							if = {
								limit = {
									title:c_byzantion.holder.top_liege.primary_title = {
										is_titular = no
									}
								}
								add_pressed_claim = title:c_byzantion.holder.top_liege.primary_title
							}
							decide_senate_party = yes
							decide_senate_idea = yes
						}
					}
				}
				else = {
					create_character = {
						culture = title:c_byzantion.culture
						gender = male
						age = {35 50}
						dynasty = generate
						trait = low_senator
						faith = title:c_byzantion.holder.top_liege.faith
						
						employer = title:c_byzantion.holder.top_liege
						save_scope_as = senator
					}
					scope:senator = { 
						add_to_global_variable_list = {
							name = low_senate_eastern
							target = THIS
						}
						add_to_global_variable_list = {
							name = all_senate_eastern
							target = THIS
						}
						if = {
							limit = {
								title:c_byzantion.holder.top_liege.primary_title = {
									is_titular = no
								}
							}
							add_pressed_claim = title:c_byzantion.holder.top_liege.primary_title
						}
						decide_senate_party = yes
						decide_senate_idea = yes
					}
				}
			}
			else_if = {
				limit = {
					has_trait = senator
				}
				remove_trait = senator
				add_trait = former_senator
				if = {
					limit = {
						has_claim_on = title:c_byzantion.holder.top_liege.primary_title
					}
					remove_claim = title:c_byzantion.holder.top_liege.primary_title
				}
				remove_list_global_variable = {
					name = senate_eastern
					target = THIS
				}
				remove_list_global_variable = {
					name = all_senate_eastern
					target = THIS
				}
				remove_list_global_variable = {
					name = aristocratic_senate_eastern
					target = THIS
				}
				remove_list_global_variable = {
					name = populist_senate_eastern
					target = THIS
				}
				remove_list_global_variable = {
					name = traditionalist_senate_eastern
					target = THIS
				}
				random_in_global_list = {
					variable  = low_senate_eastern
					remove_trait = low_senator
					add_trait = senator
					create_character = {
						culture = title:c_byzantion.culture
						gender = male
						age = {35 50}
						dynasty = generate
						trait = low_senator
						faith = title:c_byzantion.holder.top_liege.faith
						
						employer = title:c_byzantion.holder.top_liege
						save_scope_as = senator
					}
					scope:senator = { 
						add_to_global_variable_list = {
							name = low_senate_eastern
							target = THIS
						}
						add_to_global_variable_list = {
							name = all_senate_eastern
							target = THIS
						}
						if = {
							limit = {
								title:c_byzantion.holder.top_liege.primary_title = {
									is_titular = no
								}
							}
							add_pressed_claim = title:c_byzantion.holder.top_liege.primary_title
						}
						decide_senate_party = yes
						decide_senate_idea = yes
					}
					remove_list_global_variable = {
						name = low_senate_eastern
						target = THIS
					}
					add_to_global_variable_list = {
						name = senate_eastern
						target = THIS
					}
				}
			}
			else_if = {
				limit = {
					has_trait = high_senator
				}
				remove_trait = high_senator
				add_trait = former_senator
				if = {
					limit = {
						has_claim_on = title:c_byzantion.holder.top_liege.primary_title
					}
					remove_claim = title:c_byzantion.holder.top_liege.primary_title
				}
				remove_list_global_variable = {
					name = high_senate_eastern
					target = THIS
				}
				remove_list_global_variable = {
					name = all_senate_eastern
					target = THIS
				}
				remove_list_global_variable = {
					name = aristocratic_senate_eastern
					target = THIS
				}
				remove_list_global_variable = {
					name = populist_senate_eastern
					target = THIS
				}
				remove_list_global_variable = {
					name = traditionalist_senate_eastern
					target = THIS
				}
				random_in_global_list = {
					variable  = senate_eastern
					remove_trait = senator
					add_trait = high_senator
					remove_list_global_variable = {
						name = senate_eastern
						target = THIS
					}
					add_to_global_variable_list = {
						name = high_senate_eastern
						target = THIS
					}
					random_in_global_list = {
						variable  = low_senate_eastern
						remove_trait = low_senator
						add_trait = senator
						create_character = {
							culture = title:c_byzantion.culture
							gender = male
							age = {35 50}
							dynasty = generate
							trait = low_senator
							faith = title:c_byzantion.holder.top_liege.faith
							
							employer = title:c_byzantion.holder.top_liege
							save_scope_as = senator
						}
						scope:senator = { 
							add_to_global_variable_list = {
								name = low_senate_eastern
								target = THIS
							}
							add_to_global_variable_list = {
								name = all_senate_eastern
								target = THIS
							}
							if = {
								limit = {
									title:c_byzantion.holder.top_liege.primary_title = {
										is_titular = no
									}
								}
								add_pressed_claim = title:c_byzantion.holder.top_liege.primary_title
							}
							decide_senate_party = yes
							decide_senate_idea = yes
						}
						remove_list_global_variable = {
							name = low_senate_eastern
							target = THIS
						}
						add_to_global_variable_list = {
							name = senate_eastern
							target = THIS
						}
					}
				}
			}
		}
	}
}

#senate use money
on_senate_20_years = {
	effect = {
		if = {
			limit = {
				global_var:italy_senate_admin = flag:minimum
				title:c_roma.holder.top_liege = {
					access_to_italian_senate = yes
				}
			}
			title:c_roma.holder.top_liege.primary_title = {
				random_in_de_facto_hierarchy = {
					limit = {
						tier = tier_duchy
						global_var:aristocratic_senate_italy_gold > distribute_bread_price
					}
					weight = {
						base = 10
						modifier = {
							add = 100
							trigger_if = {
								limit = {
									is_title_created = yes
								}
								OR = {
									holder = {
										has_character_flag = bribed_aristocrats_italy
									}
									holder = {
										any_liege_or_above = {
											NOT = {
												highest_held_title_tier = tier_empire
											}
											has_character_flag = bribed_aristocrats_italy
										}
									}
								}
							}
						}
					}
					change_global_variable = {
						name = aristocratic_senate_italy_gold
						subtract = distribute_bread_price
					}
					every_in_de_jure_hierarchy = {
						limit = {
							tier = tier_county
						}
						add_county_modifier = {
							modifier = distribute_bread_modifier
							years = 10
						}
					}
				}
				random_in_de_facto_hierarchy = {
					limit = {
						tier = tier_duchy
						global_var:populist_senate_italy_gold > distribute_bread_price
					}
					weight = {
						base = 10
						modifier = {
							add = 100
							trigger_if = {
								limit = {
									is_title_created = yes
								}
								OR = {
									holder = {
										has_character_flag = bribed_populists_italy
									}
									holder = {
										any_liege_or_above = {
											NOT = {
												highest_held_title_tier = tier_empire
											}
											has_character_flag = bribed_populists_italy
										}
									}
								}
							}
						}
					}
					change_global_variable = {
						name = populist_senate_italy_gold
						subtract = distribute_bread_price
					}
					every_in_de_jure_hierarchy = {
						limit = {
							tier = tier_county
						}
						add_county_modifier = {
							modifier = distribute_bread_modifier
							years = 10
						}
					}
				}
				random_in_de_facto_hierarchy = {
					limit = {
						tier = tier_duchy
						global_var:traditionalist_senate_italy_gold > distribute_bread_price
					}
					weight = {
						base = 10
						modifier = {
							add = 100
							trigger_if = {
								limit = {
									is_title_created = yes
								}
								OR = {
									holder = {
										has_character_flag = bribed_traditionalist_italy
									}
									holder = {
										any_liege_or_above = {
											NOT = {
												highest_held_title_tier = tier_empire
											}
											has_character_flag = bribed_traditionalist_italy
										}
									}
								}
							}
						}
					}
					change_global_variable = {
						name = traditionalist_senate_italy_gold
						subtract = distribute_bread_price
					}
					every_in_de_jure_hierarchy = {
						limit = {
							tier = tier_county
						}
						add_county_modifier = {
							modifier = distribute_bread_modifier
							years = 10
						}
					}
				}
			}
		}
		else_if = {
			limit = {
				global_var:italy_senate_admin = flag:taxing_rights
				title:c_roma.holder.top_liege = {
					access_to_italian_senate = yes
				}
			}
			title:c_roma.holder.top_liege.primary_title = {
				random_in_de_facto_hierarchy = {
					limit = {
						tier = tier_kingdom
						global_var:aristocratic_senate_italy_gold > distribute_bread_price
					}
					weight = {
						base = 10
						modifier = {
							add = 100
							trigger_if = {
								limit = {
									is_title_created = yes
								}
								OR = {
									holder = {
										has_character_flag = bribed_aristocrats_italy
									}
									holder = {
										any_liege_or_above = {
											NOT = {
												highest_held_title_tier = tier_empire
											}
											has_character_flag = bribed_aristocrats_italy
										}
									}
								}
							}
						}
					}
					change_global_variable = {
						name = aristocratic_senate_italy_gold
						subtract = distribute_bread_price
					}
					every_in_de_jure_hierarchy = {
						limit = {
							tier = tier_county
						}
						add_county_modifier = {
							modifier = distribute_bread_modifier
							years = 10
						}
					}
				}
				random_in_de_facto_hierarchy = {
					limit = {
						tier = tier_kingdom
						global_var:populist_senate_italy_gold > distribute_bread_price
					}
					weight = {
						base = 10
						modifier = {
							add = 100
							trigger_if = {
								limit = {
									is_title_created = yes
								}
								OR = {
									holder = {
										has_character_flag = bribed_populists_italy
									}
									holder = {
										any_liege_or_above = {
											NOT = {
												highest_held_title_tier = tier_empire
											}
											has_character_flag = bribed_populists_italy
										}
									}
								}
							}
						}
					}
					change_global_variable = {
						name = populist_senate_italy_gold
						subtract = distribute_bread_price
					}
					every_in_de_jure_hierarchy = {
						limit = {
							tier = tier_county
						}
						add_county_modifier = {
							modifier = distribute_bread_modifier
							years = 10
						}
					}
				}
				random_in_de_facto_hierarchy = {
					limit = {
						tier = tier_kingdom
						global_var:traditionalist_senate_italy_gold > distribute_bread_price
					}
					weight = {
						base = 10
						modifier = {
							add = 100
							trigger_if = {
								limit = {
									is_title_created = yes
								}
								OR = {
									holder = {
										has_character_flag = bribed_traditionalist_italy
									}
									holder = {
										any_liege_or_above = {
											NOT = {
												highest_held_title_tier = tier_empire
											}
											has_character_flag = bribed_traditionalist_italy
										}
									}
								}
							}
						}
					}
					change_global_variable = {
						name = traditionalist_senate_italy_gold
						subtract = distribute_bread_price
					}
					every_in_de_jure_hierarchy = {
						limit = {
							tier = tier_county
						}
						add_county_modifier = {
							modifier = distribute_bread_modifier
							years = 10
						}
					}
				}
			}
		}
		else_if = {
			limit = {
				global_var:italy_senate_admin = flag:absolute
				title:c_roma.holder.top_liege = {
					access_to_italian_senate = yes
				}
			}
			title:c_roma.holder.top_liege.primary_title = {
				if = {
					limit = {
						global_var:aristocratic_senate_italy_gold > distribute_bread_price
					}
					change_global_variable = {
						name = aristocratic_senate_italy_gold
						subtract = distribute_bread_price
					}
					every_in_de_facto_hierarchy = {
						limit = {
							tier = tier_county
						}
						add_county_modifier = {
							modifier = distribute_bread_modifier
							years = 10
						}
					}
				}
				else_if = {
					random_in_de_facto_hierarchy = {
						limit = {
							tier = tier_kingdom
							global_var:aristocratic_senate_italy_gold > distribute_bread_price
						}
						weight = {
							base = 10
							modifier = {
								add = 100
								trigger_if = {
									limit = {
										is_title_created = yes
									}
									OR = {
										holder = {
											has_character_flag = bribed_aristocrats_italy
										}
										holder = {
											any_liege_or_above = {
												NOT = {
													highest_held_title_tier = tier_empire
												}
												has_character_flag = bribed_aristocrats_italy
											}
										}
									}
								}
							}
						}
						change_global_variable = {
							name = aristocratic_senate_italy_gold
							subtract = distribute_bread_price
						}
						every_in_de_jure_hierarchy = {
							limit = {
								tier = tier_county
							}
							add_county_modifier = {
								modifier = distribute_bread_modifier
								years = 10
							}
						}
					}
				}
				if = {
					limit = {
						global_var:populist_senate_italy_gold > distribute_bread_price
					}
					change_global_variable = {
						name = populist_senate_italy_gold
						subtract = distribute_bread_price
					}
					every_in_de_facto_hierarchy = {
						limit = {
							tier = tier_county
						}
						add_county_modifier = {
							modifier = distribute_bread_modifier
							years = 10
						}
					}
				}
				else_if = {
					random_in_de_facto_hierarchy = {
						limit = {
							tier = tier_kingdom
							global_var:populist_senate_italy_gold > distribute_bread_price
						}
						weight = {
							base = 10
							modifier = {
								add = 100
								trigger_if = {
									limit = {
										is_title_created = yes
									}
									OR = {
										holder = {
											has_character_flag = bribed_populists_italy
										}
										holder = {
											any_liege_or_above = {
												NOT = {
													highest_held_title_tier = tier_empire
												}
												has_character_flag = bribed_populists_italy
											}
										}
									}
								}
							}
						}
						change_global_variable = {
							name = populist_senate_italy_gold
							subtract = distribute_bread_price
						}
						every_in_de_jure_hierarchy = {
							limit = {
								tier = tier_county
							}
							add_county_modifier = {
								modifier = distribute_bread_modifier
								years = 10
							}
						}
					}
				}
				if = {
					limit = {
						global_var:traditionalist_senate_italy_gold > distribute_bread_price
					}
					change_global_variable = {
						name = traditionalist_senate_italy_gold
						subtract = distribute_bread_price
					}
					every_in_de_facto_hierarchy = {
						limit = {
							tier = tier_county
						}
						add_county_modifier = {
							modifier = distribute_bread_modifier
							years = 10
						}
					}
				}
				else_if = {
					random_in_de_facto_hierarchy = {
						limit = {
							tier = tier_kingdom
							global_var:traditionalist_senate_italy_gold > distribute_bread_price
						}
						weight = {
							base = 10
							modifier = {
								add = 100
								trigger_if = {
									limit = {
										is_title_created = yes
									}
									OR = {
										holder = {
											has_character_flag = bribed_traditionalist_italy
										}
										holder = {
											any_liege_or_above = {
												NOT = {
													highest_held_title_tier = tier_empire
												}
												has_character_flag = bribed_traditionalist_italy
											}
										}
									}
								}
							}
						}
						change_global_variable = {
							name = traditionalist_senate_italy_gold
							subtract = distribute_bread_price
						}
						every_in_de_jure_hierarchy = {
							limit = {
								tier = tier_county
							}
							add_county_modifier = {
								modifier = distribute_bread_modifier
								years = 10
							}
						}
					}
				}
			}
		}
		if = {
			limit = {
				NOT = {
					game_start_date = 532.2.1
				}
			}
			random_list = {
				1 = {
					modifier = {
						add = {
							value = 5
						}
						global_var:italy_senate_admin = flag:taxing_rights
						title:c_roma.holder.top_liege = {
							access_to_italian_senate = yes
						}
						OR = {
							global_var:traditionalist_senate_italy_gold > standard_activity_cost
							global_var:aristocratic_senate_italy_gold > standard_activity_cost
							global_var:populist_senate_italy_gold > standard_activity_cost
						}
					}
					modifier = {
						add = {
							value = 20
						}
						global_var:italy_senate_admin = flag:absolute
						title:c_roma.holder.top_liege = {
							access_to_italian_senate = yes
						}
						OR = {
							global_var:traditionalist_senate_italy_gold > standard_activity_cost
							global_var:aristocratic_senate_italy_gold > standard_activity_cost
							global_var:populist_senate_italy_gold > standard_activity_cost
						}
					}
					title:c_roma.holder.top_liege = {
						random_vassal_or_below = {
							limit = {
								NOT = {
									any_owned_story = {
										story_type = story_sponsor_gladiator_games_decision
									}
								}
							}
							weight = {
								base = 10
								modifier = {
									add = italy_aristocratic_size
									has_character_flag = bribed_aristocrats_italy
								}
								modifier = {
									add = italy_populist_size
									has_character_flag = bribed_populists_italy
								}
								modifier = {
									add = italy_traditionalist_size
									has_character_flag = bribed_traditionalist_italy
								}
							}
							trigger_event = sponsor_gladiatorial_games.0015
						}
					}
					if = {
						limit = {
							global_var:traditionalist_senate_italy_gold > standard_activity_cost
						}
						change_global_variable = {
							name = traditionalist_senate_italy_gold
							subtract = standard_activity_cost
						}
					}
					else_if = {
						limit = {
							global_var:aristocratic_senate_italy_gold > standard_activity_cost
						}
						change_global_variable = {
							name = aristocratic_senate_italy_gold
							subtract = standard_activity_cost
						}
					}
					else_if = {
						limit = {
							global_var:populist_senate_italy_gold > standard_activity_cost
						}
						change_global_variable = {
							name = populist_senate_italy_gold
							subtract = standard_activity_cost
						}
					}
				}
	
				9 = {
	
				}
			}
		}
	}
	on_actions = {
		delay = { years = 20 }
		on_senate_20_years
	}
}
on_senate_20_years_eastern = {
	effect = {
		if = {
			limit = {
				global_var:eastern_senate_admin = flag:minimum
				title:c_byzantion.holder.top_liege = {
					access_to_eastern_senate = yes
				}
			}
			title:c_byzantion.holder.top_liege.primary_title = {
				random_in_de_facto_hierarchy = {
					limit = {
						tier = tier_duchy
						global_var:aristocratic_senate_eastern_gold > distribute_bread_price
					}
					weight = {
						base = 10
						modifier = {
							add = 100
							trigger_if = {
								limit = {
									is_title_created = yes
								}
								OR = {
									holder = {
										has_character_flag = bribed_aristocrats_eastern
									}
									holder = {
										any_liege_or_above = {
											NOT = {
												highest_held_title_tier = tier_empire
											}
											has_character_flag = bribed_aristocrats_eastern
										}
									}
								}
							}
						}
					}
					change_global_variable = {
						name = aristocratic_senate_eastern_gold
						subtract = distribute_bread_price
					}
					every_in_de_jure_hierarchy = {
						limit = {
							tier = tier_county
						}
						add_county_modifier = {
							modifier = distribute_bread_modifier
							years = 10
						}
					}
				}
				random_in_de_facto_hierarchy = {
					limit = {
						tier = tier_duchy
						global_var:populist_senate_eastern_gold > distribute_bread_price
					}
					weight = {
						base = 10
						modifier = {
							add = 100
							trigger_if = {
								limit = {
									is_title_created = yes
								}
								OR = {
									holder = {
										has_character_flag = bribed_populists_eastern
									}
									holder = {
										any_liege_or_above = {
											NOT = {
												highest_held_title_tier = tier_empire
											}
											has_character_flag = bribed_populists_eastern
										}
									}
								}
							}
						}
					}
					change_global_variable = {
						name = populist_senate_eastern_gold
						subtract = distribute_bread_price
					}
					every_in_de_jure_hierarchy = {
						limit = {
							tier = tier_county
						}
						add_county_modifier = {
							modifier = distribute_bread_modifier
							years = 10
						}
					}
				}
				random_in_de_facto_hierarchy = {
					limit = {
						tier = tier_duchy
						global_var:traditionalist_senate_eastern_gold > distribute_bread_price
					}
					weight = {
						base = 10
						modifier = {
							add = 100
							trigger_if = {
								limit = {
									is_title_created = yes
								}
								OR = {
									holder = {
										has_character_flag = bribed_traditionalist_eastern
									}
									holder = {
										any_liege_or_above = {
											NOT = {
												highest_held_title_tier = tier_empire
											}
											has_character_flag = bribed_traditionalist_eastern
										}
									}
								}
							}
						}
					}
					change_global_variable = {
						name = traditionalist_senate_eastern_gold
						subtract = distribute_bread_price
					}
					every_in_de_jure_hierarchy = {
						limit = {
							tier = tier_county
						}
						add_county_modifier = {
							modifier = distribute_bread_modifier
							years = 10
						}
					}
				}
			}
		}
		else_if = {
			limit = {
				global_var:eastern_senate_admin = flag:taxing_rights
				title:c_byzantion.holder.top_liege = {
					access_to_eastern_senate = yes
				}
			}
			title:c_byzantion.holder.top_liege.primary_title = {
				random_in_de_facto_hierarchy = {
					limit = {
						tier = tier_kingdom
						global_var:aristocratic_senate_eastern_gold > distribute_bread_price
					}
					weight = {
						base = 10
						modifier = {
							add = 100
							trigger_if = {
								limit = {
									is_title_created = yes
								}
								OR = {
									holder = {
										has_character_flag = bribed_aristocrats_eastern
									}
									holder = {
										any_liege_or_above = {
											NOT = {
												highest_held_title_tier = tier_empire
											}
											has_character_flag = bribed_aristocrats_eastern
										}
									}
								}
							}
						}
					}
					change_global_variable = {
						name = aristocratic_senate_eastern_gold
						subtract = distribute_bread_price
					}
					every_in_de_jure_hierarchy = {
						limit = {
							tier = tier_county
						}
						add_county_modifier = {
							modifier = distribute_bread_modifier
							years = 10
						}
					}
				}
				random_in_de_facto_hierarchy = {
					limit = {
						tier = tier_kingdom
						global_var:populist_senate_eastern_gold > distribute_bread_price
					}
					weight = {
						base = 10
						modifier = {
							add = 100
							trigger_if = {
								limit = {
									is_title_created = yes
								}
								OR = {
									holder = {
										has_character_flag = bribed_populists_eastern
									}
									holder = {
										any_liege_or_above = {
											NOT = {
												highest_held_title_tier = tier_empire
											}
											has_character_flag = bribed_populists_eastern
										}
									}
								}
							}
						}
					}
					change_global_variable = {
						name = populist_senate_eastern_gold
						subtract = distribute_bread_price
					}
					every_in_de_jure_hierarchy = {
						limit = {
							tier = tier_county
						}
						add_county_modifier = {
							modifier = distribute_bread_modifier
							years = 10
						}
					}
				}
				random_in_de_facto_hierarchy = {
					limit = {
						tier = tier_kingdom
						global_var:traditionalist_senate_eastern_gold > distribute_bread_price
					}
					weight = {
						base = 10
						modifier = {
							add = 100
							trigger_if = {
								limit = {
									is_title_created = yes
								}
								OR = {
									holder = {
										has_character_flag = bribed_traditionalist_eastern
									}
									holder = {
										any_liege_or_above = {
											NOT = {
												highest_held_title_tier = tier_empire
											}
											has_character_flag = bribed_traditionalist_eastern
										}
									}
								}
							}
						}
					}
					change_global_variable = {
						name = traditionalist_senate_eastern_gold
						subtract = distribute_bread_price
					}
					every_in_de_jure_hierarchy = {
						limit = {
							tier = tier_county
						}
						add_county_modifier = {
							modifier = distribute_bread_modifier
							years = 10
						}
					}
				}
			}
		}
		else_if = {
			limit = {
				global_var:eastern_senate_admin = flag:absolute
				title:c_byzantion.holder.top_liege = {
					access_to_eastern_senate = yes
				}
			}
			title:c_byzantion.holder.top_liege.primary_title = {
				if = {
					limit = {
						global_var:aristocratic_senate_eastern_gold > distribute_bread_price
					}
					change_global_variable = {
						name = aristocratic_senate_eastern_gold
						subtract = distribute_bread_price
					}
					every_in_de_facto_hierarchy = {
						limit = {
							tier = tier_county
						}
						add_county_modifier = {
							modifier = distribute_bread_modifier
							years = 10
						}
					}
				}
				else_if = {
					random_in_de_facto_hierarchy = {
						limit = {
							tier = tier_kingdom
							global_var:aristocratic_senate_eastern_gold > distribute_bread_price
						}
						weight = {
							base = 10
							modifier = {
								add = 100
								trigger_if = {
									limit = {
										is_title_created = yes
									}
									OR = {
										holder = {
											has_character_flag = bribed_aristocrats_eastern
										}
										holder = {
											any_liege_or_above = {
												NOT = {
													highest_held_title_tier = tier_empire
												}
												has_character_flag = bribed_aristocrats_eastern
											}
										}
									}
								}
							}
						}
						change_global_variable = {
							name = aristocratic_senate_eastern_gold
							subtract = distribute_bread_price
						}
						every_in_de_jure_hierarchy = {
							limit = {
								tier = tier_county
							}
							add_county_modifier = {
								modifier = distribute_bread_modifier
								years = 10
							}
						}
					}
				}
				if = {
					limit = {
						global_var:populist_senate_eastern_gold > distribute_bread_price
					}
					change_global_variable = {
						name = populist_senate_eastern_gold
						subtract = distribute_bread_price
					}
					every_in_de_facto_hierarchy = {
						limit = {
							tier = tier_county
						}
						add_county_modifier = {
							modifier = distribute_bread_modifier
							years = 10
						}
					}
				}
				else_if = {
					random_in_de_facto_hierarchy = {
						limit = {
							tier = tier_kingdom
							global_var:populist_senate_eastern_gold > distribute_bread_price
						}
						weight = {
							base = 10
							modifier = {
								add = 100
								trigger_if = {
									limit = {
										is_title_created = yes
									}
									OR = {
										holder = {
											has_character_flag = bribed_populists_eastern
										}
										holder = {
											any_liege_or_above = {
												NOT = {
													highest_held_title_tier = tier_empire
												}
												has_character_flag = bribed_populists_eastern
											}
										}
									}
								}
							}
						}
						change_global_variable = {
							name = populist_senate_eastern_gold
							subtract = distribute_bread_price
						}
						every_in_de_jure_hierarchy = {
							limit = {
								tier = tier_county
							}
							add_county_modifier = {
								modifier = distribute_bread_modifier
								years = 10
							}
						}
					}
				}
				if = {
					limit = {
						global_var:traditionalist_senate_eastern_gold > distribute_bread_price
					}
					change_global_variable = {
						name = traditionalist_senate_eastern_gold
						subtract = distribute_bread_price
					}
					every_in_de_facto_hierarchy = {
						limit = {
							tier = tier_county
						}
						add_county_modifier = {
							modifier = distribute_bread_modifier
							years = 10
						}
					}
				}
				else_if = {
					random_in_de_facto_hierarchy = {
						limit = {
							tier = tier_kingdom
							global_var:traditionalist_senate_eastern_gold > distribute_bread_price
						}
						weight = {
							base = 10
							modifier = {
								add = 100
								trigger_if = {
									limit = {
										is_title_created = yes
									}
									OR = {
										holder = {
											has_character_flag = bribed_traditionalist_eastern
										}
										holder = {
											any_liege_or_above = {
												NOT = {
													highest_held_title_tier = tier_empire
												}
												has_character_flag = bribed_traditionalist_eastern
											}
										}
									}
								}
							}
						}
						change_global_variable = {
							name = traditionalist_senate_eastern_gold
							subtract = distribute_bread_price
						}
						every_in_de_jure_hierarchy = {
							limit = {
								tier = tier_county
							}
							add_county_modifier = {
								modifier = distribute_bread_modifier
								years = 10
							}
						}
					}
				}
			}
		}
		if = {
			limit = {
				NOT = {
					game_start_date = 532.2.1
				}
			}
			random_list = {
				1 = {
					modifier = {
						add = {
							value = 5
						}
						global_var:eastern_senate_admin = flag:taxing_rights
						title:c_byzantion.holder.top_liege = {
							access_to_eastern_senate = yes
						}
						OR = {
							global_var:traditionalist_senate_eastern_gold > standard_activity_cost
							global_var:aristocratic_senate_eastern_gold > standard_activity_cost
							global_var:populist_senate_eastern_gold > standard_activity_cost
						}
					}
					modifier = {
						add = {
							value = 20
						}
						global_var:eastern_senate_admin = flag:absolute
						title:c_byzantion.holder.top_liege = {
							access_to_eastern_senate = yes
						}
						OR = {
							global_var:traditionalist_senate_eastern_gold > standard_activity_cost
							global_var:aristocratic_senate_eastern_gold > standard_activity_cost
							global_var:populist_senate_eastern_gold > standard_activity_cost
						}
					}
					title:c_byzantion.holder.top_liege = {
						random_vassal_or_below = {
							limit = {
								NOT = {
									any_owned_story = {
										story_type = story_sponsor_gladiator_games_decision
									}
								}
							}
							weight = {
								base = 10
								modifier = {
									add = eastern_aristocratic_size
									has_character_flag = bribed_aristocrats_eastern
								}
								modifier = {
									add = eastern_populist_size
									has_character_flag = bribed_populists_eastern
								}
								modifier = {
									add = eastern_traditionalist_size
									has_character_flag = bribed_traditionalist_eastern
								}
							}
							trigger_event = sponsor_gladiatorial_games.0015
						}
					}
					if = {
						limit = {
							global_var:traditionalist_senate_eastern_gold > standard_activity_cost
						}
						change_global_variable = {
							name = traditionalist_senate_eastern_gold
							subtract = standard_activity_cost
						}
					}
					else_if = {
						limit = {
							global_var:aristocratic_senate_eastern_gold > standard_activity_cost
						}
						change_global_variable = {
							name = aristocratic_senate_eastern_gold
							subtract = standard_activity_cost
						}
					}
					else_if = {
						limit = {
							global_var:populist_senate_eastern_gold > standard_activity_cost
						}
						change_global_variable = {
							name = populist_senate_eastern_gold
							subtract = standard_activity_cost
						}
					}
				}

				9 = {

				}
			}
		}
	}
	on_actions = {
		delay = { years = 20 }
		on_senate_20_years_eastern
	}
}

on_senate_lol_italy = {
	effect = {
		if = {
			limit = {
				title:c_roma.holder.top_liege = {
					access_to_italian_senate = yes
				}
			}
			if = {
				limit = {
					OR = {
						senate_italy_one_party_revolting = yes
						senate_italy_two_party_revolting = yes
						senate_italy_all_party_revolting = yes
					}
				}
				title:c_roma.holder.top_liege = {
					trigger_event = {
						id = senate.0010
						days = {90 180}
					}
				}
			}
			if = {
				limit = {
					OR = {
						senate_italy_aristocratic_disloyal = yes
						senate_italy_populist_disloyal = yes
						senate_italy_traditionalist_disloyal = yes
					}
				}
				title:c_roma.holder.top_liege = {
					random_list = {
						10 = {
							trigger_event = {
								id = senate.0011
								days = {100 300}
							}
						}
						10 = {
							trigger_event = {
								id = senate.0012
								days = {100 300}
							}
						}
						10 = {
							trigger_event = {
								id = senate.0013
								days = {100 300}
							}
						}
						10 = {
							trigger_event = {
								id = senate.0014
								days = {100 300}
							}
						}
						5 = {
							trigger_event = {
								id = senate.0015
								days = {100 300}
							}
						}
					}
				}
			}
			if = {
				limit = {
					OR = {
						senate_italy_aristocratic_indifferent = yes
						senate_italy_populist_indifferent = yes
						senate_italy_traditionalist_indifferent = yes
					}
				}
				title:c_roma.holder.top_liege = {
					random_list = {
						10 = {
							trigger_event = {
								id = senate.0016
								days = {100 300}
							}
						}
						10 = {
							trigger_event = {
								id = senate.0017
								days = {100 300}
							}
						}
						10 = {
							trigger_event = {
								id = senate.0018
								days = {100 300}
							}
						}
						10 = {
							trigger_event = {
								id = senate.0019
								days = {100 300}
							}
						}
						5 = {
							trigger_event = {
								id = senate.0020
								days = {100 300}
							}
						}
					}
				}
			}
			if = {
				limit = {
					OR = {
						senate_italy_aristocratic_loyal = yes
						senate_italy_populist_loyal = yes
						senate_italy_traditionalist_loyal = yes
					}
				}
				title:c_roma.holder.top_liege = {
					random_list = {
						10 = {
							trigger = {
								trigger_if = {
									limit = {
										access_to_italian_senate = yes
									}
									OR = {
										AND = {
											OR = {
												senate_italy_aristocratic_loyal = yes
												senate_italy_aristocratic_supportive = yes
											}
											global_var:aristocratic_senate_italy_gold >= TFE_games_predicted_cost_half
										}
										AND = {
											OR = {
												senate_italy_populist_loyal = yes
												senate_italy_populist_supportive = yes
											}
											global_var:populist_senate_italy_gold >= TFE_games_predicted_cost_half
										}
										AND = {
											OR = {
												senate_italy_traditionalist_loyal = yes
												senate_italy_traditionalist_supportive = yes
											}
											global_var:traditionalist_senate_italy_gold >= TFE_games_predicted_cost_half
										}
									}
								}
								trigger_else_if = {
									limit = {
										access_to_eastern_senate = yes
									}
									OR = {
										AND = {
											OR = {
												senate_eastern_aristocratic_loyal = yes
												senate_eastern_aristocratic_supportive = yes
											}
											global_var:aristocratic_senate_eastern_gold >= TFE_games_predicted_cost_half
										}
										AND = {
											OR = {
												senate_eastern_populist_loyal = yes
												senate_eastern_populist_supportive = yes
											}
											global_var:populist_senate_eastern_gold >= TFE_games_predicted_cost_half
										}
										AND = {
											OR = {
												senate_eastern_traditionalist_loyal = yes
												senate_eastern_traditionalist_supportive = yes
											}
											global_var:traditionalist_senate_eastern_gold >= TFE_games_predicted_cost_half
										}
									}
								}
							}
							trigger_event = {
								id = senate.0021
								days = {100 300}
							}
						}
						10 = {
							trigger = {
								trigger_if = {
									limit = {
										access_to_italian_senate = yes
									}
									OR = {
										AND = {
											OR = {
												senate_italy_aristocratic_loyal = yes
												senate_italy_aristocratic_supportive = yes
											}
											global_var:aristocratic_senate_italy_gold >= root.capital_county.duchy.distribute_bread_price
										}
										AND = {
											OR = {
												senate_italy_populist_loyal = yes
												senate_italy_populist_supportive = yes
											}
											global_var:populist_senate_italy_gold >= root.capital_county.duchy.distribute_bread_price
										}
										AND = {
											OR = {
												senate_italy_traditionalist_loyal = yes
												senate_italy_traditionalist_supportive = yes
											}
											global_var:traditionalist_senate_italy_gold >= root.capital_county.duchy.distribute_bread_price
										}
									}
								}
								trigger_else_if = {
									limit = {
										access_to_eastern_senate = yes
									}
									OR = {
										AND = {
											OR = {
												senate_eastern_aristocratic_loyal = yes
												senate_eastern_aristocratic_supportive = yes
											}
											global_var:aristocratic_senate_eastern_gold >= root.capital_county.duchy.distribute_bread_price
										}
										AND = {
											OR = {
												senate_eastern_populist_loyal = yes
												senate_eastern_populist_supportive = yes
											}
											global_var:populist_senate_eastern_gold >= root.capital_county.duchy.distribute_bread_price
										}
										AND = {
											OR = {
												senate_eastern_traditionalist_loyal = yes
												senate_eastern_traditionalist_supportive = yes
											}
											global_var:traditionalist_senate_eastern_gold >= root.capital_county.duchy.distribute_bread_price
										}
									}
								}
							}
							trigger_event = {
								id = senate.0022
								days = {100 300}
							}
						}
						10 = {
							trigger_event = {
								id = senate.0023
								days = {100 300}
							}
						}
						10 = {
							trigger_event = {
								id = senate.0024
								days = {100 300}
							}
						}
						5 = {
							trigger_event = {
								id = senate.0025
								days = {100 300}
							}
						}
					}
				}
			}
			if = {
				limit = {
					OR = {
						senate_italy_aristocratic_supportive = yes
						senate_italy_populist_supportive = yes
						senate_italy_traditionalist_supportive = yes
					}
				}
				title:c_roma.holder.top_liege = {
					random_list = {
						10 = {
							trigger = {
								trigger_if = {
									limit = {
										access_to_italian_senate = yes
									}
									OR = {
										AND = {
											OR = {
												senate_italy_aristocratic_loyal = yes
												senate_italy_aristocratic_supportive = yes
											}
											global_var:aristocratic_senate_italy_gold >= 400
										}
										AND = {
											OR = {
												senate_italy_populist_loyal = yes
												senate_italy_populist_supportive = yes
											}
											global_var:populist_senate_italy_gold >= 400
										}
										AND = {
											OR = {
												senate_italy_traditionalist_loyal = yes
												senate_italy_traditionalist_supportive = yes
											}
											global_var:traditionalist_senate_italy_gold >= 400
										}
									}
								}
								trigger_else_if = {
									limit = {
										access_to_eastern_senate = yes
									}
									OR = {
										AND = {
											OR = {
												senate_eastern_aristocratic_loyal = yes
												senate_eastern_aristocratic_supportive = yes
											}
											global_var:aristocratic_senate_eastern_gold >= 400
										}
										AND = {
											OR = {
												senate_eastern_populist_loyal = yes
												senate_eastern_populist_supportive = yes
											}
											global_var:populist_senate_eastern_gold >= 400
										}
										AND = {
											OR = {
												senate_eastern_traditionalist_loyal = yes
												senate_eastern_traditionalist_supportive = yes
											}
											global_var:traditionalist_senate_eastern_gold >= 400
										}
									}
								}
							}
							trigger_event = {
								id = senate.0026
								days = {100 300}
							}
						}
						10 = {
							trigger_event = {
								id = senate.0027
								days = {100 300}
							}
						}
						10 = {
							trigger = {
								trigger_if = {
									limit = {
										access_to_italian_senate = yes
									}
									OR = {
										AND = {
											OR = {
												senate_italy_aristocratic_loyal = yes
												senate_italy_aristocratic_supportive = yes
											}
											global_var:aristocratic_senate_italy_gold >= TFE_games_predicted_cost
										}
										AND = {
											OR = {
												senate_italy_populist_loyal = yes
												senate_italy_populist_supportive = yes
											}
											global_var:populist_senate_italy_gold >= TFE_games_predicted_cost
										}
										AND = {
											OR = {
												senate_italy_traditionalist_loyal = yes
												senate_italy_traditionalist_supportive = yes
											}
											global_var:traditionalist_senate_italy_gold >= TFE_games_predicted_cost
										}
									}
								}
								trigger_else_if = {
									limit = {
										access_to_eastern_senate = yes
									}
									OR = {
										AND = {
											OR = {
												senate_eastern_aristocratic_loyal = yes
												senate_eastern_aristocratic_supportive = yes
											}
											global_var:aristocratic_senate_eastern_gold >= TFE_games_predicted_cost
										}
										AND = {
											OR = {
												senate_eastern_populist_loyal = yes
												senate_eastern_populist_supportive = yes
											}
											global_var:populist_senate_eastern_gold >= TFE_games_predicted_cost
										}
										AND = {
											OR = {
												senate_eastern_traditionalist_loyal = yes
												senate_eastern_traditionalist_supportive = yes
											}
											global_var:traditionalist_senate_eastern_gold >= TFE_games_predicted_cost
										}
									}
								}
							}
							trigger_event = {
								id = senate.0028
								days = {100 300}
							}
						}
						10 = {
							trigger_event = {
								id = senate.0029
								days = {100 300}
							}
						}
						10 = {
							trigger_event = {
								id = senate.0030
								days = {100 300}
							}
						}
					}
				}
			}
		}
	}
	on_actions = {
		delay = { months = { 90 120 } }
		on_senate_lol_italy
	}
}

on_senate_lol_eastern = {
	effect = {
		if = {
			limit = {
				title:c_byzantion.holder.top_liege = {
					access_to_eastern_senate = yes
				}
			}
			if = {
				limit = {
					OR = {
						senate_eastern_one_party_revolting = yes
						senate_eastern_two_party_revolting = yes
						senate_eastern_all_party_revolting = yes
					}
				}
				title:c_byzantion.holder.top_liege = {
					trigger_event = {
						id = senate.0010
						days = {90 180}
					}
				}
			}
			if = {
				limit = {
					OR = {
						senate_eastern_aristocratic_disloyal = yes
						senate_eastern_populist_disloyal = yes
						senate_eastern_traditionalist_disloyal = yes
					}
				}
				title:c_byzantion.holder.top_liege = {
					random_list = {
						10 = {
							trigger_event = {
								id = senate.0011
								days = {100 300}
							}
						}
						10 = {
							trigger_event = {
								id = senate.0012
								days = {100 300}
							}
						}
						10 = {
							trigger_event = {
								id = senate.0013
								days = {100 300}
							}
						}
						10 = {
							trigger_event = {
								id = senate.0014
								days = {100 300}
							}
						}
						5 = {
							trigger_event = {
								id = senate.0015
								days = {100 300}
							}
						}
					}
				}
			}
			if = {
				limit = {
					OR = {
						senate_eastern_aristocratic_indifferent = yes
						senate_eastern_populist_indifferent = yes
						senate_eastern_traditionalist_indifferent = yes
					}
				}
				title:c_byzantion.holder.top_liege = {
					random_list = {
						10 = {
							trigger_event = {
								id = senate.0016
								days = {100 300}
							}
						}
						10 = {
							trigger_event = {
								id = senate.0017
								days = {100 300}
							}
						}
						10 = {
							trigger_event = {
								id = senate.0018
								days = {100 300}
							}
						}
						10 = {
							trigger_event = {
								id = senate.0019
								days = {100 300}
							}
						}
						5 = {
							trigger_event = {
								id = senate.0020
								days = {100 300}
							}
						}
					}
				}
			}
			if = {
				limit = {
					OR = {
						senate_eastern_aristocratic_loyal = yes
						senate_eastern_populist_loyal = yes
						senate_eastern_traditionalist_loyal = yes
					}
				}
				title:c_byzantion.holder.top_liege = {
					random_list = {
						10 = {
							trigger = {
								trigger_if = {
									limit = {
										access_to_italian_senate = yes
									}
									OR = {
										AND = {
											OR = {
												senate_italy_aristocratic_loyal = yes
												senate_italy_aristocratic_supportive = yes
											}
											global_var:aristocratic_senate_italy_gold >= half_activity_mny
										}
										AND = {
											OR = {
												senate_italy_populist_loyal = yes
												senate_italy_populist_supportive = yes
											}
											global_var:populist_senate_italy_gold >= half_activity_mny
										}
										AND = {
											OR = {
												senate_italy_traditionalist_loyal = yes
												senate_italy_traditionalist_supportive = yes
											}
											global_var:traditionalist_senate_italy_gold >= half_activity_mny
										}
									}
								}
								trigger_else_if = {
									limit = {
										access_to_eastern_senate = yes
									}
									OR = {
										AND = {
											OR = {
												senate_eastern_aristocratic_loyal = yes
												senate_eastern_aristocratic_supportive = yes
											}
											global_var:aristocratic_senate_eastern_gold >= half_activity_mny
										}
										AND = {
											OR = {
												senate_eastern_populist_loyal = yes
												senate_eastern_populist_supportive = yes
											}
											global_var:populist_senate_eastern_gold >= half_activity_mny
										}
										AND = {
											OR = {
												senate_eastern_traditionalist_loyal = yes
												senate_eastern_traditionalist_supportive = yes
											}
											global_var:traditionalist_senate_eastern_gold >= half_activity_mny
										}
									}
								}
							}
							trigger_event = {
								id = senate.0021
								days = {100 300}
							}
						}
						10 = {
							trigger = {
								trigger_if = {
									limit = {
										access_to_italian_senate = yes
									}
									OR = {
										AND = {
											OR = {
												senate_italy_aristocratic_loyal = yes
												senate_italy_aristocratic_supportive = yes
											}
											global_var:aristocratic_senate_italy_gold >= root.capital_county.duchy.distribute_bread_price
										}
										AND = {
											OR = {
												senate_italy_populist_loyal = yes
												senate_italy_populist_supportive = yes
											}
											global_var:populist_senate_italy_gold >= root.capital_county.duchy.distribute_bread_price
										}
										AND = {
											OR = {
												senate_italy_traditionalist_loyal = yes
												senate_italy_traditionalist_supportive = yes
											}
											global_var:traditionalist_senate_italy_gold >= root.capital_county.duchy.distribute_bread_price
										}
									}
								}
								trigger_else_if = {
									limit = {
										access_to_eastern_senate = yes
									}
									OR = {
										AND = {
											OR = {
												senate_eastern_aristocratic_loyal = yes
												senate_eastern_aristocratic_supportive = yes
											}
											global_var:aristocratic_senate_eastern_gold >= root.capital_county.duchy.distribute_bread_price
										}
										AND = {
											OR = {
												senate_eastern_populist_loyal = yes
												senate_eastern_populist_supportive = yes
											}
											global_var:populist_senate_eastern_gold >= root.capital_county.duchy.distribute_bread_price
										}
										AND = {
											OR = {
												senate_eastern_traditionalist_loyal = yes
												senate_eastern_traditionalist_supportive = yes
											}
											global_var:traditionalist_senate_eastern_gold >= root.capital_county.duchy.distribute_bread_price
										}
									}
								}
							}
							trigger_event = {
								id = senate.0022
								days = {100 300}
							}
						}
						10 = {
							trigger_event = {
								id = senate.0023
								days = {100 300}
							}
						}
						10 = {
							trigger_event = {
								id = senate.0024
								days = {100 300}
							}
						}
						5 = {
							trigger_event = {
								id = senate.0025
								days = {100 300}
							}
						}
					}
				}
			}
			if = {
				limit = {
					OR = {
						senate_eastern_aristocratic_supportive = yes
						senate_eastern_populist_supportive = yes
						senate_eastern_traditionalist_supportive = yes
					}
				}
				title:c_byzantion.holder.top_liege = {
					random_list = {
						10 = {
							trigger = {
								trigger_if = {
									limit = {
										access_to_eastern_senate = yes
									}
									OR = {
										AND = {
											OR = {
												senate_eastern_aristocratic_loyal = yes
												senate_eastern_aristocratic_supportive = yes
											}
											global_var:aristocratic_senate_eastern_gold >= 400
										}
										AND = {
											OR = {
												senate_eastern_populist_loyal = yes
												senate_eastern_populist_supportive = yes
											}
											global_var:populist_senate_eastern_gold >= 400
										}
										AND = {
											OR = {
												senate_eastern_traditionalist_loyal = yes
												senate_eastern_traditionalist_supportive = yes
											}
											global_var:traditionalist_senate_eastern_gold >= 400
										}
									}
								}
								trigger_else_if = {
									limit = {
										access_to_eastern_senate = yes
									}
									OR = {
										AND = {
											OR = {
												senate_eastern_aristocratic_loyal = yes
												senate_eastern_aristocratic_supportive = yes
											}
											global_var:aristocratic_senate_eastern_gold >= 400
										}
										AND = {
											OR = {
												senate_eastern_populist_loyal = yes
												senate_eastern_populist_supportive = yes
											}
											global_var:populist_senate_eastern_gold >= 400
										}
										AND = {
											OR = {
												senate_eastern_traditionalist_loyal = yes
												senate_eastern_traditionalist_supportive = yes
											}
											global_var:traditionalist_senate_eastern_gold >= 400
										}
									}
								}
							}
							trigger_event = {
								id = senate.0026
								days = {100 300}
							}
						}
						10 = {
							trigger_event = {
								id = senate.0027
								days = {100 300}
							}
						}
						10 = {
							trigger = {
								trigger_if = {
									limit = {
										access_to_italian_senate = yes
									}
									OR = {
										AND = {
											OR = {
												senate_italy_aristocratic_loyal = yes
												senate_italy_aristocratic_supportive = yes
											}
											global_var:aristocratic_senate_italy_gold >= TFE_games_predicted_cost
										}
										AND = {
											OR = {
												senate_italy_populist_loyal = yes
												senate_italy_populist_supportive = yes
											}
											global_var:populist_senate_italy_gold >= TFE_games_predicted_cost
										}
										AND = {
											OR = {
												senate_italy_traditionalist_loyal = yes
												senate_italy_traditionalist_supportive = yes
											}
											global_var:traditionalist_senate_italy_gold >= TFE_games_predicted_cost
										}
									}
								}
								trigger_else_if = {
									limit = {
										access_to_eastern_senate = yes
									}
									OR = {
										AND = {
											OR = {
												senate_eastern_aristocratic_loyal = yes
												senate_eastern_aristocratic_supportive = yes
											}
											global_var:aristocratic_senate_eastern_gold >= TFE_games_predicted_cost
										}
										AND = {
											OR = {
												senate_eastern_populist_loyal = yes
												senate_eastern_populist_supportive = yes
											}
											global_var:populist_senate_eastern_gold >= TFE_games_predicted_cost
										}
										AND = {
											OR = {
												senate_eastern_traditionalist_loyal = yes
												senate_eastern_traditionalist_supportive = yes
											}
											global_var:traditionalist_senate_eastern_gold >= TFE_games_predicted_cost
										}
									}
								}
							}
							trigger_event = {
								id = senate.0028
								days = {100 300}
							}
						}
						10 = {
							trigger_event = {
								id = senate.0029
								days = {100 300}
							}
						}
						10 = {
							trigger_event = {
								id = senate.0030
								days = {100 300}
							}
						}
					}
				}
			}
		}
	}
	on_actions = {
		delay = { months = { 90 120 } }
		on_senate_lol_eastern
	}
}

on_senate_monthly_income = {
	effect = {
		change_global_variable = {
			name = aristocratic_senate_italy_gold
			add = 10
		}
		change_global_variable = {
			name = populist_senate_italy_gold
			add = 10
		}
		change_global_variable = {
			name = traditionalist_senate_italy_gold
			add = 10
		}
		change_global_variable = {
			name = aristocratic_senate_eastern_gold
			add = 10
		}
		change_global_variable = {
			name = populist_senate_eastern_gold
			add = 10
		}
		change_global_variable = {
			name = traditionalist_senate_eastern_gold
			add = 10
		}
	}
	on_actions = {
		delay = { months = 1 }
		on_senate_monthly_income
	}
}
	}
}


"common/on_action/senate_tasks_on_actions.txt" = {
	{
on_game_start = {
	on_actions = {
		on_senate_tasks
	}
	on_actions = {
		on_senate_tasks_eastern
	}
	on_actions = {
		on_senate_tasks_2_years
	}
	on_actions = {
		on_senate_tasks_2_years_eastern
	}
}

on_senate_tasks = {
	effect = {
		if = {
			limit = {
				global_var:italy_senate_tasks = flag:none
			}
			title:c_roma.holder.top_liege = {
				if = {
					limit = {
						access_to_italian_senate = yes
					}
					decide_new_task = yes
				}
			}
			title:c_roma.holder.top_liege = {
				if = {
					limit = {
						global_var:italy_senate_tasks = flag:conquer
						
					}
					trigger_event = senate.0005
				}
			}

		}
	}
	on_actions = {
		delay = { days = { 3650 3750 } }
		on_senate_tasks
	}
}
on_senate_tasks_2_years = {
	effect = {
		if = {
			limit = {
				AND = {
					global_var:italy_senate_tasks = flag:conquer
					global_var:italy_senate_conquer = {
						is_alive = no
					}
					title:c_roma.holder.top_liege = {
						access_to_italian_senate = yes
					}
				}
			}
			title:c_roma.holder.top_liege = {
				trigger_event = senate.0005
			}
		}
		else_if = {
			limit = {
				AND = {
					global_var:italy_senate_tasks = flag:convert_culture
					global_var:italy_senate_convert_culture_county = {
						culture = holder.top_liege.culture
					}
					title:c_roma.holder.top_liege = {
						access_to_italian_senate = yes
					}
				}
			}
			title:c_roma.holder.top_liege = {
				trigger_event = senate.0001
			}
			set_global_variable = {
				name = italy_senate_tasks
				value = flag:none
			}
		}
		else_if = {
			limit = {
				AND = {
					global_var:italy_senate_tasks = flag:convert_faith
					global_var:italy_senate_convert_faith_county = {
						faith = holder.top_liege.faith
					}
					title:c_roma.holder.top_liege = {
						access_to_italian_senate = yes
					}
				}
			}
			title:c_roma.holder.top_liege = {
				trigger_event = senate.0002
			}
			set_global_variable = {
				name = italy_senate_tasks
				value = flag:none
			}
		}
	}
	on_actions = {
		delay = { years = 2 }
		on_senate_tasks_2_years
	}
}

on_senate_tasks_eastern = {
	effect = {
		if = {
			limit = {
				global_var:eastern_senate_tasks = flag:none
			}
			title:c_byzantion.holder.top_liege = {
				if = {
					limit = {
						access_to_eastern_senate = yes
					}
					decide_new_task_eastern = yes
				}
			}
			title:c_byzantion.holder.top_liege = {
				if = {
					limit = {
						global_var:eastern_senate_tasks = flag:conquer
						
					}
					trigger_event = {
						id = senate.0007
						days = 1
					}
				}
			}

		}
	}
	on_actions = {
		delay = { days = { 3650 3750 } }
		on_senate_tasks_eastern
	}
}
on_senate_tasks_2_years_eastern = {
	effect = {
		if = {
			limit = {
				AND = {
					global_var:eastern_senate_tasks = flag:conquer
					global_var:eastern_senate_conquer = {
						is_alive = no
					}
					title:c_byzantion.holder.top_liege = {
						access_to_eastern_senate = yes
					}
				}
			}
			title:c_byzantion.holder.top_liege = {
				trigger_event = senate.0007
			}
		}
		else_if = {
			limit = {
				AND = {
					global_var:eastern_senate_tasks = flag:convert_culture
					global_var:eastern_senate_convert_culture_county = {
						culture = holder.top_liege.culture
					}
					title:c_byzantion.holder.top_liege = {
						access_to_eastern_senate = yes
					}
				}
			}
			title:c_byzantion.holder.top_liege = {
				trigger_event = senate.0001
			}
			set_global_variable = {
				name = eastern_senate_tasks
				value = flag:none
			}
		}
		else_if = {
			limit = {
				AND = {
					global_var:eastern_senate_tasks = flag:convert_faith
					global_var:eastern_senate_convert_faith_county = {
						faith = holder.top_liege.faith
					}
					title:c_byzantion.holder.top_liege = {
						access_to_eastern_senate = yes
					}
				}
			}
			title:c_byzantion.holder.top_liege = {
				trigger_event = senate.0002
			}
			set_global_variable = {
				name = eastern_senate_tasks
				value = flag:none
			}
		}
	}
	on_actions = {
		delay = { years = 2 }
		on_senate_tasks_2_years_eastern
	}
}
	}
}

"common/scripted_effects/00_ep1_inspiration_effects.txt" = {
	{
							10 = { #Recreate if lost
								modifier = {
									OR = {
										scope:adventurer.adventure_inspiration_average_skill_value >= high_inspiration_skill
										AND = {
											exists = scope:inspiration_owner.var:artifact_quality
											scope:inspiration_owner.var:artifact_quality > high_adventurer_epic_quality_level #Cumulative event choices
										}
									}
									add = 5
								}
								trigger = {
									NOT = {
										any_artifact = {
											has_variable = charlamagne_throne
										}
									}
									game_start_date >= 700
									scope:location ?= {
										OR = {
											geographical_region = custom_carolingian_francia
											geographical_region = custom_carolingian_germany
											geographical_region = custom_lotharingia
											geographical_region = custom_northern_italy
										}
									}
								}
								create_artifact_throne_charlemagne_effect = { OWNER = root }
							}
	}

	{
							10 = { #Head of St Edmund
								modifier = {
									OR = {
										scope:adventurer.adventure_inspiration_average_skill_value >= high_inspiration_skill
										AND = {
											exists = scope:inspiration_owner.var:artifact_quality
											scope:inspiration_owner.var:artifact_quality > high_adventurer_epic_quality_level #Cumulative event choices
										}
									}
									add = 5
								}
								trigger = {
									NOT = {
										any_artifact = {
											has_variable = edmund_head
										}
										game_start_date >= 800
									}
									scope:location ?= {
										OR = {
											geographical_region = world_europe_west_britannia
											geographical_region = world_europe_north
										}
									}
								}
								create_artifact_edmund_head_effect = { OWNER = root }
							}
	}

	{
							10 = { #Curtana
								modifier = {
									OR = {
										scope:adventurer.adventure_inspiration_average_skill_value >= high_inspiration_skill
										AND = {
											exists = scope:inspiration_owner.var:artifact_quality
											scope:inspiration_owner.var:artifact_quality > high_adventurer_epic_quality_level #Cumulative event choices
										}
									}
									add = 5
								}
								trigger = {
									any_artifact = {
										count < 1
										has_variable = curtana
									}
									scope:location ?= {
										OR = { 
											geographical_region = world_europe_west
											geographical_region = world_europe_south
										}
									}
								}
								create_artifact_curtana_effect = { OWNER = ROOT }
							}
	}

	{
							10 = {
								modifier = {
									OR = {
										scope:adventurer.adventure_inspiration_average_skill_value >= high_inspiration_skill
										AND = {
											exists = scope:inspiration_owner.var:artifact_quality
											scope:inspiration_owner.var:artifact_quality > high_adventurer_epic_quality_level #Cumulative event choices
										}
									}
									add = 5
								}
								trigger = {
									NOT = {
										any_artifact = {
											has_variable = crown_of_justinian
										}
									}
									game_start_date >= 500
									scope:location ?= {
										OR = {
											geographical_region = custom_eastern_roman_empire
											culture = { has_cultural_pillar = heritage_byzantine }
										}
									}
								}
								create_artifact_pedestal_justinian_effect = { OWNER = root }
							}
	}

	{
							10 = { #Recreate if lost
								modifier = {
									OR = {
										scope:adventurer.adventure_inspiration_average_skill_value >= high_inspiration_skill
										AND = {
											exists = scope:inspiration_owner.var:artifact_quality
											scope:inspiration_owner.var:artifact_quality > high_adventurer_epic_quality_level #Cumulative event choices
										}
									}
									add = 5
								}
								trigger = {
									NOT = {
										any_artifact = {
											has_variable = charlamagne_throne
										}
									}
									game_start_date >= 700
									scope:location ?= {
										OR = {
											geographical_region = custom_carolingian_francia
											geographical_region = custom_carolingian_germany
											geographical_region = custom_lotharingia
											geographical_region = custom_northern_italy
										}
									}
								}
								create_artifact_throne_charlemagne_effect = { OWNER = root }
							}
	}

	{
							10 = {
								modifier = {
									OR = {
										scope:adventurer.adventure_inspiration_average_skill_value >= high_inspiration_skill
										AND = {
											exists = scope:inspiration_owner.var:artifact_quality
											scope:inspiration_owner.var:artifact_quality > high_adventurer_epic_quality_level #Cumulative event choices
										}
									}
									add = 5
								}
								trigger = {
									NOT = {
										any_artifact = {
											has_variable = sword_attila
										}
										game_start_date <= 400
									}
									scope:location ?= {
										OR = {
											geographical_region = custom_south_slavia
											geographical_region = custom_carpathia
											geographical_region = ghw_region_crimea
											geographical_region = custom_bavaria
										}
									}
								}
								create_artifact_wall_sword_attila_effect = { OWNER = root }
							}
	}

	{
							10 = {
								modifier = {
									OR = {
										scope:adventurer.adventure_inspiration_average_skill_value >= high_inspiration_skill
										AND = {
											exists = scope:inspiration_owner.var:artifact_quality
											scope:inspiration_owner.var:artifact_quality > high_adventurer_epic_quality_level #Cumulative event choices
										}
									}
									add = 5
								}
								trigger = {
									NOT = {
										any_artifact = {
											has_variable = throne_scone
										}
									}
									current_year >= 500
									scope:location ?= {
										geographical_region = world_europe_west_britannia
									}
								}
								create_artifact_throne_scone_effect = { OWNER = root }
							}
	}
}

"common/character_interactions/00_war.txt" = {
	{
		modifier = {
			trigger = {
				OR = {
					scope:war = {
						using_cb = gothic_duchy_conquest_cb
					}
					scope:war = {
						using_cb = gothic_war_regular_cb
					}
					scope:war = {
						using_cb = cb_gothic_wars_amalasuntha
					}
				}
			}
			add = -1000
			
			desc = "GOTHIC_WAR_NO_PEACE"
		}
	}
}

"common/decisions/80_major_decisions_middle_europe.txt" = {
	{
#############################
# Refound HRE 				#
# by Ewan Cowhig Croft		#
#############################
restore_holy_roman_empire_decision = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_dynasty_house.dds"
	}
	decision_group_type = major

	ai_check_interval = 12

	desc = restore_holy_roman_empire_decision_desc
	selection_tooltip = restore_holy_roman_empire_decision_tooltip

	is_shown = {
		always = no
	}

	is_valid = {
		#Standard requirements.
		is_independent_ruler = yes
		trigger_if = {
			limit = {
				is_ai = no
			}
			prestige_level >= high_prestige_level
		}
		#Title ownership conditions.
		OR = { #Gotta be King of a core Carolingian Kingdom.
			has_title = title:k_east_francia
			has_title = title:k_bavaria
			has_title = title:k_france
			has_title = title:k_italy
			has_title = title:k_lotharingia
			any_vassal = {
				OR = {
					has_title = title:k_east_francia
					has_title = title:k_bavaria
					has_title = title:k_france
					has_title = title:k_italy
					has_title = title:k_lotharingia
				}
			}
		}
		trigger_if = {
			limit = {
				is_ai = no
			}
			custom_description = {	#And have some additional royal dignity for good measure.
				text = decision_refound_hre_own_three_kingdoms.tt
				any_held_title = {
					tier = tier_kingdom
					count >= 3
				}
			}
		}
		sub_realm_size >= 120	#Plus your various kingdoms should be ruling something.
		#HoF preference conditions.
		trigger_if = {
			limit = {
				is_ai = no
			}
			OR = {
				faith.religious_head = {	#And they have to actually like you enough to want to invest you.
					opinion = {
						target = root
						value >= high_positive_opinion
					}
				}
				root = { has_strong_usable_hook = faith.religious_head }	#Or you have a strong hook on them that you can actually use.
				root = { has_weak_hook = faith.religious_head }	#Or a regular hook, to be fair, provided you meet the other criteria.
			}
		}
	}

	is_valid_showing_failures_only = {
		is_available_adult = yes
		faith.religious_head = { is_available_adult = yes }
		NOR = {
			has_trait = excommunicated
			is_at_war_with = faith.religious_head
		}
	}

	effect = {
		show_as_tooltip = {
			restore_holy_roman_empire_decision_scripted_effect = yes
		}
		gain_heroic_legend_seed_tooltip_effect = yes
		save_scope_as = founder
		faith.religious_head = { save_scope_as = founder_hof }
		if = {
			limit = {
				faith.religious_head = { is_playable_character = yes }
			}
			faith.religious_head.capital_province = { save_scope_as = ceremony_locale }
		}
		else = {
			capital_province = { save_scope_as = ceremony_locale }
		}
		trigger_event = {
			id = middle_europe_decisions.0015
		}
		#Notify other players.
		every_player = {
			limit = {
				NOT = { this = root }
				is_within_diplo_range = { CHARACTER = root }
			}
			trigger_event = middle_europe_decisions.0016
		}
		if = {
			limit = {
				is_ai = no
				NOT = { exists = global_var:restore_holy_roman_empire_decision  }
			}
			set_global_variable = {
				name = restore_holy_roman_empire_decision
				value = root
			}
		}
		# Assign Dynamic Prince-Electors
		hidden_effect = {
			if = {
				limit = { has_global_variable_list = hre_elector_list }
				clear_global_variable_list = hre_elector_list
			}
			while = {
				count = 7
				random_vassal = {
					limit = {
						capital_province.empire = title:e_hre # must be de-jure vassal of empire
						OR = { # prince-bishopric or duchy
							AND = {
								government_has_flag = government_is_theocracy
								primary_title.tier >= tier_county
							}
							primary_title.tier >= tier_duchy
						}
						NOT = { # not already selected
							is_target_in_global_variable_list = {
								name = hre_elector_list
								target = primary_title
							}
						}
					}
					weight = {
						modifier = { # major vassals heavily weighted
							factor = 10
							is_powerful_vassal = yes
						}
						modifier = { # same culture as emperor preferred
							factor = 4
							culture = root.culture
						}
						modifier = { # we don't mind going outside Germania, but prefer it
							factor = 1.5
							trigger = { exists = primary_title.title_province }
							primary_title.title_province.barony = {
								OR = {
									target_is_de_jure_liege_or_above = title:k_bavaria
									target_is_de_jure_liege_or_above = title:k_bohemia
									target_is_de_jure_liege_or_above = title:k_east_francia
									target_is_de_jure_liege_or_above = title:k_frisia
									target_is_de_jure_liege_or_above = title:k_lotharingia
									target_is_de_jure_liege_or_above = title:k_pomerania
								}
							}
						}
						modifier = { # we want at least 3 theocracies ideally
							factor = 10
							any_in_global_list = {
								variable = hre_elector_list
								count < 3
								holder = { government_has_flag = government_is_theocracy }
							}
							government_has_flag = government_is_theocracy
						}
						modifier = { # 3 is enough theocracies unless we can't find feudal
							factor = 0.1
							any_in_global_list = {
								variable = hre_elector_list
								count >= 3
								holder = { government_has_flag = government_is_theocracy }
							}
							government_has_flag = government_is_theocracy
						}
					}
					add_to_global_variable_list = {
						name = hre_elector_list
						target = primary_title
					}
				}
			}
			hre_elector_list_save_effect = yes # saves list scopes to title as variables for tooltip
		}
	}

	cost = {
		gold = {
			if = {
				limit = {
					is_ai = no
				}
				add = 500
			}
		}
		piety = 200
	}

	ai_potential = {
		is_independent_ruler = yes
		highest_held_title_tier >= tier_kingdom
	}

	ai_will_do = {
		base = 100

		modifier = { # We don't want a solo-France to form the HRE
			factor = 0
			NOR = {
				has_title = title:k_east_francia
				has_title = title:k_bavaria
				has_title = title:k_italy
				has_title = title:k_lotharingia
				any_vassal = {
					OR = {
						has_title = title:k_east_francia
						has_title = title:k_bavaria
						has_title = title:k_italy
						has_title = title:k_lotharingia
					}
				}
			}
		}
	}
}
	}

	# Uses k_sorbia which is not in TFE as of the 'After the Pharaohs' update.
	{
######################################
# Establish the Electorate of Saxony #
# by James Beaumont			 		 #
######################################

establish_the_electorate_of_saxony_decision = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_found_kingdom.dds"
	}
	decision_group_type = major

	ai_check_interval = 120

	desc = establish_the_electorate_of_saxony_decision_desc
	selection_tooltip = establish_the_electorate_of_saxony_decision_tooltip

	is_shown = {
		# Temporarily disabled due to stability issues in the HRE.
		always = no
		# Can't form Saxony if Saxony already formed.
		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:flag_formed_saxony
			}
		}
		# Is in the HRE or is the Emperor
		OR = {
			liege = title:e_hre.holder
			has_primary_title = title:e_hre
		}
	}

	is_valid = {
		OR = {
			has_primary_title = title:e_hre
			# Avoid some funky tooltips.
			AND = {
				highest_held_title_tier <= tier_kingdom
				top_liege = { has_title = title:e_hre }
			}
		}
		custom_tooltip = {
			text = polabia_held_or_nonexistent.tt
			OR = {
				has_title = title:k_sorbia
				NOT = { exists = title:k_sorbia.holder }
			}
		}
		completely_controls = title:d_meissen
		completely_controls = title:d_lausitz
		completely_controls = title:d_anhalt
		completely_controls = title:d_thuringia
		# Most of the Kingdom of Polabia is at least somewhat pro-HRE
		custom_tooltip = {
			text = polabia_must_be_hre_culture_tt
			any_county_in_region = {
				region = custom_polabia
				# At least half.
				count >= 12
				OR = {
					culture = root.culture
					culture = title:e_hre.holder.culture
				}
			}
		}
	}

	effect = {
		hidden_effect = {
			add_to_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:flag_formed_saxony
			}
			save_scope_as = founder
			title:e_hre.holder = { save_scope_as = hre_emperor_scope }
			trigger_event =  middle_europe_decisions.0017
		}
		show_as_tooltip = {
			create_kingdom_of_saxony_effect = { CHARACTER = root }
		}
		if = {
			limit = { has_title = title:e_hre }
			custom_tooltip = middle_europe_decision.0017.tt
		}
	}

	cost = { gold = 200 }

	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 100
	}
}
	}
}

"common/struggle\struggles/tfe_eastern_iranian_struggle.txt" = {
	{
eastern_iranian_struggle = {
	# has_fp2_dlc_trigger = yes  #TODO_CD_AN Request support for dlc locking on struggles

	##################################################
	# Setup
	##################################################
	cultures = {
		# Iranian
		persian
		parthian
		khwarezmian
		old_ferghanan
		ferghanan

		# Serindian
        sogdian
		bactrian
		pactyan
		hephthalite
		wusun # Add for 476 and after
		xionite
		yuezhi
		saka

		# Indo-Aryan
		kashmiri
		nuristani
		burusho

		# Sarmatian
		kangju

		# Turkic
		avar
		kangar

		# Semitic
		assyrian

	}	

	faiths = {

		# Zoroastrian
		mazdayasna
		gayomarthianism
		khurmazta
		mazdakism

		# Dualism
		manichean
		#mandeaism
		#quqite

		# Christian
		nicene # Should be disabled after 476
		marcionite
		bardaisanism
		# Christian faiths below become involved once they are spawned
		nestorian

		# Zun
		zun_pagan

		# Dezawist
		nuristani_pagan

		# Tengri
		tengri_pagan

		# Buddhism
		mahayana
		pudgalavada
		dharmaguptaka
		sarvastivada
		mahasanghika
		vajrayana

		# Hinduism
		shaivism
		vaishnavism
		
		# Greco-Roman
		#roman_pagan
		#hellenic_pagan

		# Judaism
		malabarism

	}
	regions = { 
		TFE_eastern_iranian_struggle_region
	}

	# A culture or faith becomes involved if 50% of the total number of counties belonging to it are inside the struggle region.
	involvement_prerequisite_percentage = 0.5

	on_start = {
		# Starting Events
		trigger_event = { on_action = tfe_eastern_iranian_struggle_starting_events }
	}

	on_change_phase = {

		# Set up AI Intent
		trigger_event = eastern_iranian_struggle.0003
	}
	
	# Root = the current struggle
	# scope:character = the character which has joined the struggle
 	on_join = {
		if = {
			limit = {
				is_ai = no
			}

			trigger_event = eastern_iranian_struggle.0501
		}
		else = {
			# assign an intent to the freshly joined character
			trigger_event = eastern_iranian_struggle.0004
		}
 	}  

	##################################################
	# Phases
	##################################################
	start_phase = struggle_TFE_eastern_iranian_phase_expansion	
	
	phase_list = {

		# Opportunity Phase represents complacency after a long period of coexistence during Conciliation; people are comfortable that things are good and so actors with ill-intent can get away with things once again.
		struggle_TFE_eastern_iranian_phase_expansion = {
			##################################################
			# General Set-Up

			background = "gfx/interface/illustrations/struggle_backgrounds/struggle_opportunity_middle_east.dds"
			
			future_phases = {
				struggle_TFE_eastern_iranian_phase_hostility = {						
					catalysts = {
						catalyst_passing_of_time = minimal_struggle_catalyst_gain
						catalyst_gain_claim_on_title = minor_struggle_catalyst_gain
						catalyst_win_any_war_within_the_region = minor_struggle_catalyst_gain # Good
						catalyst_new_building_in_castle = minor_struggle_catalyst_gain # How to do AI?
						catalyst_becomes_rival_with_involved = major_struggle_catalyst_gain # Good
						catalyst_using_a_hook_on_very_important_character = medium_struggle_catalyst_gain # good
						catalyst_unnatural_death_important_character = medium_struggle_catalyst_gain
						catalyst_usurp_title = major_struggle_catalyst_gain # good
						catalyst_forced_conversion = medium_struggle_catalyst_gain
						catalyst_reveal_secret_important = major_struggle_catalyst_gain
						catalyst_broke_truce_against_important_character = massive_struggle_catalyst_gain # Cannot motivate the AI to do that without code support
						catalyst_tfe_declared_war = major_struggle_catalyst_gain
					}
				}
				struggle_TFE_eastern_iranian_phase_development = {
					catalysts = {
						catalyst_improve_development_vassal_diff_faith_culture = minimal_struggle_catalyst_gain # How to do AI?
						catalyst_gift_independent_ruler = minor_struggle_catalyst_gain # AI done
						catalyst_became_friend_lover_with_character = minor_struggle_catalyst_gain
						catalyst_learned_new_language_important = minor_struggle_catalyst_gain # AI done
						catalyst_new_building_in_city = minor_struggle_catalyst_gain # How to do AI?
						catalyst_sign_truce_outside_war = minor_struggle_catalyst_gain # will need update when addding truce through wards
						catalyst_formed_interreligious_alliance_with_important_character = minor_struggle_catalyst_gain
						catalyst_ransom_important = medium_struggle_catalyst_gain
						catalyst_grant_privilege_to_diff_faith_culture_vassal = medium_struggle_catalyst_gain
						catalyst_invite_diff_faith_culture_to_feast = medium_struggle_catalyst_gain
						catalyst_independence_from_non_dejure_vassal = major_struggle_catalyst_gain
						catalyst_grant_land_local_noble = major_struggle_catalyst_gain
						catalyst_became_best_friend_soulmate_with_very_important_character = major_struggle_catalyst_gain # AI done
						catalyst_convert_local_culture_faith = major_struggle_catalyst_gain
						catalyst_release_important = massive_struggle_catalyst_gain
					}
				}
			}

			war_effects = {
				###### Common

				# Nothing

				###### Involved
				involved_parameters = {
					claims_in_region_cost_prestige_not_gold_for_involved_parties = yes
					involved_or_interloper_wars_in_struggle_region_cheaper_prestige_costs = yes
					unlocks_border_raid_casus_belli = yes
					unlocks_contract_assistance_interaction = yes
					unlocks_bargain_fealty_interaction = yes
					more_nomadic_migration_armies = yes
					cheaper_nomadic_migrations_within_struggle_region = yes
				}

				involved_character_modifier = {
					mercenary_hire_cost_mult = -0.3
					ai_war_chance = 0.25
					ai_war_cooldown = -0.25
				}

				###### Interlopers
				interloper_parameters = {
					involved_or_interloper_wars_in_struggle_region_cheaper_prestige_costs = yes
				}

				###### Uninvolved

				# Nothing
			}

			faith_effects = {
				###### Common
				common_parameters = {
					cheaper_to_convert_to_struggle_faith = yes
					county_faith_conversion_in_region_proceeds_faster = yes
					#holy_wars_in_region_cannot_be_declared = yes
				}

				###### Involved
				involved_parameters = {
					interfaith_marriages_available_between_involved_characters = yes
				}

				###### Interlopers

				# Nothing

				###### Uninvolved

				# Nothing

			}

			culture_effects = {
				###### Common
				common_parameters = {
					cheaper_to_convert_to_struggle_culture = yes
				}

				###### Involved
				involved_parameters = {
					learning_languages_gives_prestige = yes
					granting_title_to_local_noble_gives_prestige = yes
					gain_acceptance_when_developing_other_culture_county = yes
				}

				###### Interlopers

				# Nothing

				###### Uninvolved

				# Nothing
			}

			other_effects = {
				###### Common

				# Nothing


				###### Involved
				involved_parameters = {
					unlocks_buy_claim_for_all = yes
					unlocks_demand_payments_for_all = yes
					unlocks_abduct_for_all = yes
					unlocks_fabricate_hooks_for_all = yes
					unlocks_claim_throne_for_all = yes
					unlocks_incite_revolts_interaction = yes
					struggle_unlocks_befriend_schemes_for_everyone = yes
					unlocks_epic_commission_for_independent_rulers = yes
					unlocks_truce_purchasing_interaction = yes
					unlocks_sell_minor_title_for_kings_and_higher = yes
				}

				###### Interlopers
				interloper_parameters = {
					
				}

				interloper_character_modifier = {
					county_opinion_add = -5
					#tax_mult = -0.1
				}

				###### Uninvolved
				uninvolved_parameters = {
					
				}

				uninvolved_county_modifier = {
					county_opinion_add = -10
					#tax_mult = -0.15
				}

			}

			#We are listing all available decision to give players insights on how they can end the Struggle
			ending_decisions = {
				struggle_eastern_iranian_ending_domination_decision
				struggle_eastern_iranian_ending_silk_road_decision
				struggle_eastern_iranian_ending_compromise_decision
			 }
		}

		# The Hostility phase accounts for the more brutal & fundamentalist side of the struggle; intolerance and violence break out even in stable areas & resentments over slights real or imagined escalate dramatically.
		# Should we add a transition to Opportunity? A smaller deescalation than going to compromise
		struggle_TFE_eastern_iranian_phase_hostility = {
			##################################################
			# General Set-Up

			background = "gfx/interface/illustrations/struggle_backgrounds/struggle_opportunity_middle_east.dds"

			future_phases = {
				struggle_TFE_eastern_iranian_phase_compromise = {
					catalysts = {
						catalyst_passing_of_time = minimal_struggle_catalyst_gain
						catalyst_improve_development_vassal_diff_faith_culture = minimal_struggle_catalyst_gain
						catalyst_gift_independent_ruler = minor_struggle_catalyst_gain
						catalyst_became_friend_lover_with_character = minor_struggle_catalyst_gain
						catalyst_learned_new_language_important = minor_struggle_catalyst_gain
						catalyst_new_building_in_city = minor_struggle_catalyst_gain
						catalyst_sign_truce_outside_war = minor_struggle_catalyst_gain
						catalyst_formed_interreligious_alliance_with_important_character = minor_struggle_catalyst_gain
						catalyst_ransom_important = medium_struggle_catalyst_gain
						catalyst_grant_privilege_to_diff_faith_culture_vassal = medium_struggle_catalyst_gain
						catalyst_invite_diff_faith_culture_to_feast = medium_struggle_catalyst_gain
						catalyst_independence_from_non_dejure_vassal = major_struggle_catalyst_gain
						catalyst_grant_land_local_noble = major_struggle_catalyst_gain
						catalyst_became_best_friend_soulmate_with_very_important_character = major_struggle_catalyst_gain
						catalyst_convert_local_culture_faith = major_struggle_catalyst_gain
						catalyst_release_important = massive_struggle_catalyst_gain
					}
				}
			}

			war_effects = {
				###### Common
				
				# Nothing

				##### Involved
				involved_parameters = {
					struggle_cb_cost_minor = yes
					truces_by_involved_or_interlopers_within_region_shorter = yes
					involved_or_interloper_wars_in_struggle_region_cheaper_piety_costs = yes
					involved_or_interloper_wars_in_struggle_region_cheaper_costs = yes
					unlocks_border_raid_casus_belli = yes
					unlocks_forced_vassalization_casus_belli = yes
				}

				involved_character_modifier = {
					same_culture_mercenary_hire_cost_mult = -0.3
					ai_war_chance = 1
					ai_war_cooldown = -0.5
					army_pursuit_mult = 0.2
					army_siege_value_mult = 0.2
					enemy_hard_casualty_modifier = 0.5
					advantage = 5 # gives the upper hand against outsiders
				}

				###### Interlopers
				interloper_parameters = {
					truces_by_involved_or_interlopers_within_region_shorter = yes
					involved_or_interloper_wars_in_struggle_region_cheaper_piety_costs = yes
					involved_or_interloper_wars_in_struggle_region_cheaper_costs = yes
				}

				interloper_character_modifier = {
					enemy_hard_casualty_modifier = 0.5
				}

				###### Uninvolved
				uninvolved_parameters = {
					#claims_in_region_more_expensive_to_press_for_uninvolved = yes
				}

			}

			faith_effects = {
				###### Common
				common_parameters = {
					county_faith_conversion_in_region_proceeds_slower = yes
					#holy_wars_in_region_cannot_be_declared = yes # not sure if relevant?
				}

				###### Involved
				involved_parameters = {
					#holy_order_can_be_created_by_dukes = yes
					interfaith_marriages_available_between_involved_characters = yes
					interfaith_marriages_between_involved_characters_costs_piety = yes
				}

				involved_character_modifier = {
					levy_reinforcement_rate_same_faith = 0.5
					domain_tax_different_faith_mult = 0.25
					#holy_order_hire_cost_mult = -0.25

					opinion_of_different_faith = -10
				}

				###### Interlopers
				interloper_character_modifier = {
					#holy_order_hire_cost_mult = -0.25
				}

				###### Uninvolved

				# Nothing
			}

			culture_effects = {

				###### Common
				common_parameters = {
					county_culture_conversion_in_region_proceeds_slower = yes
				}

				###### Involved
				involved_character_modifier = {
					opinion_of_different_culture = -10

					cultural_head_fascination_mult = -0.5
					cultural_head_acceptance_gain_mult = -0.5
				}
				###### Interlopers
				interloper_character_modifier = {
					cultural_head_fascination_mult = -0.25
					cultural_head_acceptance_gain_mult = -0.25
				}
				###### Uninvolved

				# Nothing
			}

			other_effects = {
				###### Common
				
				# Nothing

				###### Involved
				involved_parameters = {
					# struggle_vips_and_culture_faith_heads_may_develop_spontaneous_negative_relations = yes
					powerful_vassal_can_claim_liege_titles = yes
					unlocks_claim_throne_for_powerful_vassals = yes
					unlocks_truce_purchasing_interaction = yes
					unlocks_expedite_scheme_decision = yes
				}

				involved_character_modifier = {
					max_hostile_schemes_add = 1
				}

				involved_county_modifier = {
					development_growth_factor = -0.3
					tax_mult = -0.1
				}

				###### Interlopers
				interloper_parameters = {
					
				}

				interloper_county_modifier = {
					county_opinion_add = -5
					tax_mult = -0.30
					development_growth_factor = -0.4
				}

				###### Uninvolved
				uninvolved_parameters = {
					
				}

				uninvolved_county_modifier = {
					county_opinion_add = -10
					tax_mult = -0.75

					development_growth_factor = -0.5
				}
			}

			##################################################
			# Ending

			#We are listing all available decision to give players insights on how they can end the Struggle
			ending_decisions = {
				struggle_eastern_iranian_ending_domination_decision
				struggle_eastern_iranian_ending_silk_road_decision
				struggle_eastern_iranian_ending_compromise_decision
			 }
		}

		# Compromise happens either when Hostility has gone on so long that people are sick of it, or else when Hostility has been narrowly avoided after a bout of Tension and folks're relieved; shared trauma and too much violence encourage people to calm down and live and let live.
		struggle_TFE_eastern_iranian_phase_compromise = {
			##################################################
			# General Set-Up

			background = "gfx/interface/illustrations/struggle_backgrounds/struggle_opportunity_middle_east.dds"

			future_phases = {
				struggle_TFE_eastern_iranian_phase_expansion = {
					catalysts = {
						catalyst_passing_of_time = minimal_struggle_catalyst_gain
						catalyst_gain_claim_on_title = minor_struggle_catalyst_gain
						catalyst_win_any_war_within_the_region = minor_struggle_catalyst_gain # Good
						catalyst_new_building_in_castle = minor_struggle_catalyst_gain # Good
						catalyst_becomes_rival_with_involved = major_struggle_catalyst_gain # Good
						catalyst_using_a_hook_on_very_important_character = medium_struggle_catalyst_gain # good
						catalyst_unnatural_death_important_character = medium_struggle_catalyst_gain
						catalyst_usurp_title = major_struggle_catalyst_gain # good
						catalyst_forced_conversion = medium_struggle_catalyst_gain
						catalyst_reveal_secret_important = major_struggle_catalyst_gain
						catalyst_broke_truce_against_important_character = massive_struggle_catalyst_gain # Cannot motivate the AI to do that without code support
						catalyst_tfe_declared_war = major_struggle_catalyst_gain
					}
				}
			}

			war_effects = {
				###### Common
				common_parameters = {
					struggle_clash_restricted_to_single_county = yes
				}

				###### Involved
				involved_parameters = {
					white_peace_acceptance_between_involved_or_interloper_with_region_easier = yes
					truces_by_involved_or_interlopers_within_region_longer = yes
					struggle_cheaper_buy_truce = yes
					unlocks_enforce_truces_interaction = yes
					struggle_cb_cost_major = yes
					involved_or_interloper_diff_faith_wars_in_struggle_region_more_expensive_prestige_costs = yes
					apply_truce_when_sending_ward = yes
					invasion_conquest_war_cannot_be_declared = yes
				}

				involved_character_modifier = {
					ai_war_chance = -0.25
					ai_war_cooldown = 0.25

					levy_reinforcement_rate_friendly_territory = 0.5
					levy_reinforcement_rate_same_faith = 0.5
					garrison_size = 0.25
					defender_advantage = 5
				}
				###### Interlopers
				interloper_parameters = {
					white_peace_acceptance_between_involved_or_interloper_with_region_easier = yes
					truces_by_involved_or_interlopers_within_region_longer = yes
					involved_or_interloper_diff_faith_wars_in_struggle_region_more_expensive_prestige_costs = yes
				}

				interloper_county_modifier = {
					monthly_county_control_change_at_war_add = -0.01
					monthly_county_control_change_at_war_mult = -0.25

					defender_holding_advantage = -5
				}

				###### Uninvolved
				uninvolved_county_modifier = {
					monthly_county_control_change_at_war_add = -0.02
					monthly_county_control_change_at_war_mult = -0.5

					defender_holding_advantage = -10
				}
			}

			faith_effects = {
				###### Common
				common_parameters = {
					holy_wars_in_region_cannot_be_declared = yes
					county_faith_conversion_in_region_proceeds_slower = yes
				}

				###### Involved
				involved_parameters = {
					interfaith_marriages_available_between_involved_characters = yes
					piety_from_new_alliance = yes
					completing_building_in_temple_gives_piety = yes
					release_prisoner_diff_faith_gives_prestige = yes
					same_faith_friend_piety_gain = yes
				}

				involved_character_modifier = {
					opinion_of_different_faith = 10
				}

				###### Interlopers
				interloper_character_modifier = {
					opinion_of_different_faith = 10
				}

				###### Uninvolved

				# Nothing
			}

			culture_effects = {
				###### Common
				common_parameters = {
					county_culture_conversion_in_region_proceeds_faster = yes
				}

				###### Involved
				involved_parameters = {
					release_prisoner_diff_culture_gives_prestige = yes
				}

				involved_character_modifier = {
					cultural_head_acceptance_gain_mult = 0.5
					opinion_of_different_culture = 10
					max_learn_language_schemes_add = 1
				}

				###### Interlopers
				interloper_character_modifier = {
					opinion_of_different_culture = 5
					max_learn_language_schemes_add = 1
				}

				###### Uninvolved

				# Nothing
			}

			other_effects = {
				###### Common

				# Nothing

				###### Involved

				involved_parameters = {
					completing_building_in_castle_gives_development = yes
					granting_independence_to_non_dejure_gives_renown = yes
					struggle_grant_titles_diff_faith_culture_gives_prestige = yes
				}

				involved_county_modifier = {
					castle_holding_build_gold_cost = -0.25
					castle_holding_holding_build_gold_cost = -0.25
				}

				###### Interlopers
				interloper_character_modifier = {
					county_opinion_add = -5
					tax_mult = -0.25
				}

				###### Uninvolved
				uninvolved_county_modifier = {
					county_opinion_add = -10
					tax_mult = -0.5
				}
			}

			##################################################
			# Ending

			#We are listing all available decision to give players insights on how they can end the Struggle
			ending_decisions = {
				struggle_eastern_iranian_ending_domination_decision
				struggle_eastern_iranian_ending_silk_road_decision
				struggle_eastern_iranian_ending_compromise_decision
			 }
		}

		# During Conciliation Phase, things have gotten so amicable that societies outside the Struggle often find relations difficult to parse; interfaith marriages & myriad cultural changes are common.
		# We s
		struggle_TFE_eastern_iranian_phase_development = {
			##################################################
			# General Set-Up

			background = "gfx/interface/illustrations/struggle_backgrounds/struggle_opportunity_middle_east.dds"

			future_phases = {
				struggle_TFE_eastern_iranian_phase_compromise = {
					catalysts = {
						catalyst_passing_of_time = minimal_struggle_catalyst_gain
						catalyst_gain_claim_on_title = minor_struggle_catalyst_gain
						catalyst_win_any_war_within_the_region = minor_struggle_catalyst_gain # Good
						catalyst_new_building_in_castle = minor_struggle_catalyst_gain # Good
						catalyst_becomes_rival_with_involved = major_struggle_catalyst_gain # Good
						catalyst_using_a_hook_on_very_important_character = medium_struggle_catalyst_gain # good
						#- Host a Feast when having at least two different-faith vassals
						catalyst_unnatural_death_important_character = medium_struggle_catalyst_gain
						catalyst_usurp_title = major_struggle_catalyst_gain # good
						catalyst_forced_conversion = medium_struggle_catalyst_gain
						catalyst_reveal_secret_important = major_struggle_catalyst_gain
						catalyst_broke_truce_against_important_character = massive_struggle_catalyst_gain # Cannot motivate the AI to do that without code support
					}
				}
			}

			war_effects = {
				###### Common
				common_parameters = {
					invasion_conquest_war_cannot_be_declared = yes
					struggle_clash_restricted_to_single_county = yes
				}

				###### Involved

				involved_parameters = {
					struggle_cb_cost_major = yes
					struggle_cheaper_buy_truce = yes
					truces_by_involved_or_interlopers_within_region_longer = yes
				}

				involved_character_modifier = {
					ai_war_chance = -0.5
					ai_war_cooldown = 0.5
				}

				involved_county_modifier = {
					monthly_county_control_change_at_war_add = -0.01
					monthly_county_control_change_at_war_mult = -0.10
				}

				###### Interlopers
				interloper_parameters = {
					truces_by_involved_or_interlopers_within_region_longer = yes
				}

				interloper_county_modifier = {
					monthly_county_control_change_at_war_add = -0.02
					monthly_county_control_change_at_war_mult = -0.25
				}

				###### Uninvolved
				uninvolved_county_modifier = {
					monthly_county_control_change_at_war_add = -0.05
					monthly_county_control_change_at_war_mult = -0.5
				}
			}

			faith_effects = {
				###### Common
				
				# Nothing

				###### Involved
				involved_character_modifier = {
					opinion_of_different_faith = 20
					different_faith_county_opinion_mult = -0.5
					opinion_of_different_faith_liege = 10
				}

				involved_parameters = {
					truces_by_involved_or_interlopers_within_region_longer = yes
					county_conversion_disabled_for_involved_faiths_within_region = yes
					interfaith_marriages_available_between_involved_characters = yes
					interfaith_marriages_between_involved_characters_gives_piety = yes
					release_prisoner_diff_faith_gives_prestige = yes
					learning_languages_gives_piety = yes
					holy_wars_in_region_cannot_be_declared = yes
				}

				###### Interlopers

				# Nothing

				###### Uninvolved

				# Nothing
			}

			culture_effects = {
				###### Common
				
				# Nothing

				###### Involved
				involved_parameters = {
					easier_culture_hybridising_for_involved_and_interlopers = yes
					release_prisoner_diff_culture_gives_prestige = yes
				}

				involved_character_modifier = {
					cultural_head_acceptance_gain_mult = 0.2
					opinion_of_different_culture = 20
					learn_language_scheme_phase_duration_add = major_scheme_phase_duration_bonus_value
					owned_personal_scheme_success_chance_add = 10
					cultural_head_fascination_mult = 0.25
				}

				###### Interlopers
				interloper_parameters = {
					easier_culture_hybridising_for_involved_and_interlopers = yes
				}

				###### Uninvolved

				# Nothing
			}

			other_effects = {
				###### Common
				all_county_modifier = {
					development_growth_factor = 0.3
				}

				###### Involved
				involved_parameters = {
					# struggle_vips_and_culture_faith_heads_may_develop_spontaneous_positive_or_negative_relations = yes
					struggle_unlocks_befriend_schemes_for_everyone = yes
					struggle_prestige_from_feast = yes
					struggle_gifts_involved_diff_faith_culture_leads_to_friendship = yes
					struggle_grant_titles_diff_faith_culture_to_leads_to_friendship = yes
					struggle_cannot_execute_involved_prisoners  = yes
					struggle_becoming_friend_gives_prestige = yes
					involved_form_alliances_with_each_other_easier = yes
					struggle_agents_less_likely_to_join_schemes = yes
					struggle_cheaper_urbanize_silk_road_decision = yes
				}

				involved_county_modifier = {
					county_opinion_add = 20
					build_speed = -0.25
					tax_mult = 0.1
					city_holding_holding_build_gold_cost = -0.25
					city_holding_build_gold_cost = -0.25
				}

				involved_character_modifier = {
					befriend_scheme_phase_duration_add = massive_scheme_phase_duration_bonus_value
					enemy_hostile_scheme_phase_duration_add = medium_scheme_phase_duration_malus_value
					max_personal_schemes_add = 1
				}

				###### Interlopers
				interloper_character_modifier = {
					county_opinion_add = 10
					build_speed = -0.05

					tax_mult = 0.05
				}

				###### Uninvolved

				# Really hard for them to stay here
				uninvolved_county_modifier = {
					tax_mult = 0.02
					#county_opinion_add = -50
					#garrison_size = -0.1
					#supply_limit_mult = -0.1
				}
			}

			##################################################
			# Ending

			#We are listing all available decision to give players insights on how they can end the Struggle
			ending_decisions = {
				struggle_eastern_iranian_ending_domination_decision
				struggle_eastern_iranian_ending_silk_road_decision
				struggle_eastern_iranian_ending_compromise_decision
			 }
		}
	}

	# AI should gift
}
	}
}

"events/eastern_iranian_struggle_events/tfe_eastern_iranian_struggle_events.txt" = {
	{
namespace = eastern_iranian_struggle

### SYSTEM EVENTS #################################################################
## # Parameter Events
## # Other Events
### EVENT LIST ####################################################################
###################################################################################

# Setting AI Intent
eastern_iranian_struggle.0003 = {
	hidden = yes
	scope = none
	scope = struggle

	trigger = { # Should not need this, but, redundancy check! -h
		exists = struggle:eastern_iranian_struggle
		struggle:eastern_iranian_struggle = { any_involved_ruler = { count > 0 } } # For when the conflict is ongoing but nobody is left to fight it
	}

	immediate = {
		# prepare needed variables; they will be destroyed at the end of the immediate
		set_variable = {
			name = agents_for_escalation
			value = 0
		}
		set_variable = {
			name = agents_for_deescalation
			value = 0
		}

		# Go through the characters to distribute them between the potential transitions
		struggle:eastern_iranian_struggle = {
			every_involved_ruler = {
				limit = { is_alive = yes }
				#######################
				# Play cue track
				######################
				if = {
					limit = { is_ai = no }
					play_music_cue = "mx_Struggle_Opening"
				}

				#######################
				# Check existing flags
				######################
				if = {
					limit = { has_character_flag = agenda_towards_escalation }
					change_variable = {
						name = agents_for_escalation
						add = 1
					}
				}
				else_if = {
					limit = { has_character_flag = agenda_towards_deescalation }
					change_variable = {
						name = agents_for_deescalation
						add = 1
					}
				}
				else = { # Set a flag
				
					#############################
					# Current Phase: EXPANSION
					#############################
					if = {
						limit = { root = { is_struggle_phase = struggle_TFE_eastern_iranian_phase_expansion } }
						random_list = {
							# Working towards hostility
							# It should be for characters looking for direct conflicts and domination, with the will and ability to expand their realms
							100 = {
								# Odds modifiers
								eastern_iranian_struggle_set_ai_agenda_common_modifiers = {
									PHASE = hostility
									INTENT = escalation
								}

								# Apply effects
								eastern_iranian_struggle_apply_ai_agenda_effect = {
									INTENT = escalation
								}
							}
							# Working towards development
							100 = {
								# Odds modifiers
								eastern_iranian_struggle_set_ai_agenda_common_modifiers = {
									PHASE = development
									INTENT = deescalation
								}

								# Apply effects
								eastern_iranian_struggle_apply_ai_agenda_effect = {
									INTENT = deescalation
								}
							}
						}
					}

					#############################
					# Current Phase: DEVELOPMENT
					#############################
					if = {
						limit = { root = { is_struggle_phase = struggle_TFE_eastern_iranian_phase_development } }
						random_list = {
							# Working towards compromise
							# It should be for characters looking for direct conflicts and domination, with the will and ability to expand their realms
							100 = {
								# Odds modifiers
								eastern_iranian_struggle_set_ai_agenda_common_modifiers = {
									PHASE = compromise
									INTENT = escalation
								}

								# Apply effects
								eastern_iranian_struggle_apply_ai_agenda_effect = {
									INTENT = escalation
								}
							}
						}
					}
					#############################
					# Current Phase: Hostility
					#############################
					if = {
						limit = { root = { is_struggle_phase = struggle_TFE_eastern_iranian_phase_hostility } }
						random_list = {
							# Working towards Compromise
							100 = {
								# Odds modifiers
								eastern_iranian_struggle_set_ai_agenda_common_modifiers = {
									PHASE = compromise
									INTENT = deescalation
								}

								# Apply effects
								eastern_iranian_struggle_apply_ai_agenda_effect = {
									INTENT = deescalation
								}
							}
						}
					}

					#############################
					# Current Phase: Compromise
					#############################
					if = {
						limit = { root = { is_struggle_phase = struggle_TFE_eastern_iranian_phase_compromise } }
						random_list = {
							# Working towards expansion
							100 = {
								# Odds modifiers
								eastern_iranian_struggle_set_ai_agenda_common_modifiers = {
									PHASE = expansion
									INTENT = escalation
								}

								# Apply effects
								eastern_iranian_struggle_apply_ai_agenda_effect = {
									INTENT = escalation
								}
							}
						}
					}
				}
			}
		}

		# Clean variables
		remove_variable = agents_for_escalation
		remove_variable = agents_for_deescalation
	}
}

# Set AI Intent on join
eastern_iranian_struggle.0004 = {
	hidden = yes
	scope = none

	immediate = {
		set_variable = {
			name = agents_for_escalation
			value = 0
		}
		set_variable = {
			name = agents_for_deescalation
			value = 0
		}

		############################
		# Update the variables
		############################
		every_character_struggle = {
			every_involved_ruler = {
				limit = { is_alive = yes }
				if = {
					limit = { has_character_flag = agenda_towards_escalation }
					root = {
						change_variable = {
							name = agents_for_escalation
							add = 1
						}
					}
				}
				else_if = {
					limit = { has_character_flag = agenda_towards_deescalation }
					root = {
						change_variable = {
							name = agents_for_deescalation
							add = 1
						}
					}
				}
			}
		}

		if = {
			limit = {
				NOR = {
					has_character_flag = agenda_towards_escalation
					has_character_flag = agenda_towards_deescalation
				}
			}

			#############################
			# Current Phase: EXPANSION
			#############################
			if = {
				limit = { any_character_struggle = { AND = { is_struggle_type = eastern_iranian_struggle is_struggle_phase = struggle_TFE_eastern_iranian_phase_expansion } } }
				random_list = {
					# Working towards hostility
					# It should be for characters looking for direct conflicts and domination, with the will and ability to expand their realms
					100 = {
						# Odds modifiers
						eastern_iranian_struggle_set_ai_agenda_common_modifiers = {
							PHASE = hostility
							INTENT = escalation
						}

						# Apply effects
						eastern_iranian_struggle_apply_ai_agenda_effect = {
							INTENT = escalation
						}
					}
					# Working towards development
					100 = {
						# Odds modifiers
						eastern_iranian_struggle_set_ai_agenda_common_modifiers = {
							PHASE = development
							INTENT = deescalation
						}

						# Apply effects
						eastern_iranian_struggle_apply_ai_agenda_effect = {
							INTENT = deescalation
						}
					}
				}
			}

			#############################
			# Current Phase: DEVELOPMENT
			#############################
			if = {
				limit = { any_character_struggle = { AND = { is_struggle_type = eastern_iranian_struggle is_struggle_phase = struggle_TFE_eastern_iranian_phase_development } } }
				random_list = {
					# Working towards compromise
					# It should be for characters looking for direct conflicts and domination, with the will and ability to expand their realms
					100 = {
						# Odds modifiers
						eastern_iranian_struggle_set_ai_agenda_common_modifiers = {
							PHASE = compromise
							INTENT = escalation
						}

						# Apply effects
						eastern_iranian_struggle_apply_ai_agenda_effect = {
							INTENT = escalation
						}
					}
				}
			}
			#############################
			# Current Phase: Hostility
			#############################
			if = {
				limit = { any_character_struggle = { AND = { is_struggle_type = eastern_iranian_struggle is_struggle_phase = struggle_TFE_eastern_iranian_phase_hostility } } }
				random_list = {
					# Working towards Compromise
					100 = {
						# Odds modifiers
						eastern_iranian_struggle_set_ai_agenda_common_modifiers = {
							PHASE = compromise
							INTENT = deescalation
						}

						# Apply effects
						eastern_iranian_struggle_apply_ai_agenda_effect = {
							INTENT = deescalation
						}
					}
				}
			}

			#############################
			# Current Phase: Compromise
			#############################
			if = {
				limit = { any_character_struggle = { AND = { is_struggle_type = eastern_iranian_struggle is_struggle_phase = struggle_TFE_eastern_iranian_phase_compromise } } }
				random_list = {
					# Working towards expansion
					100 = {
						# Odds modifiers
						eastern_iranian_struggle_set_ai_agenda_common_modifiers = {
							PHASE = expansion
							INTENT = escalation
						}

						# Apply effects
						eastern_iranian_struggle_apply_ai_agenda_effect = {
							INTENT = escalation
						}
					}
				}
			}
		}

		# Clean variables
		remove_variable = agents_for_escalation
		remove_variable = agents_for_deescalation
	}
}

###################################
# Easten Iranian Struggle Intro Events
# 0501 - 599
###################################
eastern_iranian_struggle.0501 = { # Fullscreen Intro Event
	type = character_event
	window = fullscreen_event
	title = eastern_iranian_struggle.0501.t
	desc = {
		desc = eastern_iranian_struggle.0501.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					any_character_struggle = {
						involvement = involved
						is_struggle_type = eastern_iranian_struggle
					}
				}
				desc = fp2_struggle.0501.desc.involved
			}
			triggered_desc = {
				trigger = {
					any_character_struggle = {
						involvement = interloper
						is_struggle_type = eastern_iranian_struggle
					}
				}
				desc = fp2_struggle.0501.desc.interloper
			}
		}
	}
	theme = realm
	trigger = { # we need to prevent this from firing for all players when a new player joins in MP
		is_ai = no
		NOT = { has_character_flag = eastern_iranian_struggle_intro_event_flag }
		tfe_character_any_involvement_eastern_iranian_struggle_trigger = yes
 	}
	override_background = { reference = TFE_struggle_bg_oasis }
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_animate" }

	widgets = {
		widget = {
 			gui = "event_window_widget_struggle_info"
 			container = "dynamic_content_widget"
 			controller = struggle_info
 			setup_scope = { struggle:eastern_iranian_struggle = { save_scope_as = struggle } }
		}
	}
	immediate = {
		play_music_cue = "mood_alexandria"
		add_character_flag = eastern_iranian_struggle_intro_event_flag
		save_scope_value_as = {
			name = start
			value = yes
		}
	}
	option = {
		name = eastern_iranian_struggle.0501.a
		clicksound = "event:/DLC/FP2/SFX/UI/fp2_struggle_start_select"
	}
}





###################################
# Eastern Iranian Struggle Ending Events
# 1000 - 1099
###################################

# Domination Ending
eastern_iranian_struggle.1000 = { 
	type = character_event
	window = fullscreen_event
	title = eastern_iranian_struggle.1000.t
	desc = eastern_iranian_struggle.1000.desc
	theme = court
	override_background = { reference = TFE_struggle_bg_mena_palace }
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_end_animate" }

	immediate = {

		# Add all involved cultures with counties to a list, for marriage and holy war checks
		TFE_eastern_iranian_struggle_ending_culture_list_effect = yes

		play_music_cue = "mx_Struggle_ending_hostility"

		dynasty = { add_dynasty_prestige = 10000 }
		give_nickname = nick_the_great

		save_scope_as = struggle_ender
	}

	# Conquest victory
	option = {
		name = eastern_iranian_struggle.1000.a
		house = {
			add_house_modifier = {
				modifier = struggle_eastern_iranian_house_offense_modifier
			}
		}		
		stress_impact = {
			compassionate = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
		}
		set_global_variable = {
			name = TFE_struggle_eastern_iranian_conquest_victory
			value = yes
			days = 15 # Clear out eventually, just in case
		}
	}

	# Bulwark victory
	option = {
		name = eastern_iranian_struggle.1000.b
		house = {
			add_house_modifier = {
				modifier = struggle_eastern_iranian_house_defense_modifier
			}
		}
		stress_impact = {
			brave = minor_stress_impact_gain
			arrogant = minor_stress_impact_gain
		}
		set_global_variable = {
			name = TFE_struggle_eastern_iranian_bulwark_victory
			value = yes
			days = 15 # Clear out eventually, just in case
		}
	}

	# Influence victory
	option = {
		name = eastern_iranian_struggle.1000.c
		house = {
			add_house_modifier = {
				modifier = struggle_eastern_iranian_house_political_modifier
			}
		}
		stress_impact = {
			wrathful = minor_stress_impact_gain
			trusting = minor_stress_impact_gain
		}
		set_global_variable = {
			name = TFE_struggle_eastern_iranian_influence_victory
			value = yes
			days = 15 # Clear out eventually, just in case
		}
	}

	after = {
		# End Struggle
		struggle:eastern_iranian_struggle = {
			end_struggle = struggle_eastern_iranian_ending_domination_decision
		}
		# Notify
		every_player = {
			# limit = {
			# 	NOT = { this = root }
			# }
			trigger_event = eastern_iranian_struggle.1001
		}
	}
}




# Integration Ending notification
eastern_iranian_struggle.1001 = { # Fullscreen Intro Event
	type = character_event
	window = fullscreen_event
	title = eastern_iranian_struggle.1001.t
	desc = {
		desc = eastern_iranian_struggle.1001.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					has_global_variable = TFE_struggle_eastern_iranian_conquest_victory
				}
				desc = eastern_iranian_struggle.1001.desc.closing.conquest
			}
			triggered_desc = {
				trigger = {
					has_global_variable = TFE_struggle_eastern_iranian_bulwark_victory
				}
				desc = eastern_iranian_struggle.1001.desc.closing.bulwark
			}
			triggered_desc = {
				trigger = {
					has_global_variable = TFE_struggle_eastern_iranian_influence_victory
				}
				desc = eastern_iranian_struggle.1001.desc.closing.influence
			}
		}
		desc = eastern_iranian_struggle.1001.desc.closing
	}
	theme = court
	override_background = { reference = TFE_struggle_bg_mena_palace }
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_animate" }

	immediate = {
		play_music_cue = "mx_Struggle_ending_hostility"
		scope:struggle_ender = {
			show_as_tooltip = {
				if = {
					limit = {
						has_global_variable = TFE_struggle_eastern_iranian_conquest_victory
					}
					house = {
						add_house_modifier = {
							modifier = struggle_eastern_iranian_house_offense_modifier
						}
					}
				}
				else_if = {
					limit = {
						has_global_variable = TFE_struggle_eastern_iranian_bulwark_victory
					}
					house = {
						add_house_modifier = {
							modifier = struggle_eastern_iranian_house_political_modifier
						}
					}
				}
				else_if = {
					limit = {
						has_global_variable = TFE_struggle_eastern_iranian_influence_victory
					}
					house = {
						add_house_modifier = {
							modifier = struggle_eastern_iranian_house_political_modifier
						}
					}
				}
			}			
		}
	}
	option = {
		name = eastern_iranian_struggle.1001.a
	}
}




# Silk Road Prosperity Ending
eastern_iranian_struggle.1002 = { 
	type = character_event
	window = fullscreen_event
	title = eastern_iranian_struggle.1002.t
	desc = eastern_iranian_struggle.1002.desc
	theme = court
	override_background = { reference = TFE_struggle_bg_eastern_market }
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_end_animate" }

	immediate = {

		# Add all involved cultures with counties to a list, for marriage and holy war checks
		TFE_eastern_iranian_struggle_ending_culture_list_effect = yes

		play_music_cue = "mx_Struggle_ending_conciliation"

		dynasty = { add_dynasty_prestige = 10000 }
		give_nickname = nick_the_great

		save_scope_as = struggle_ender
	}

	# Urbanite victory
	option = {
		name = eastern_iranian_struggle.1002.a
		house = {
			add_house_modifier = {
				modifier = struggle_eastern_iranian_house_urban_modifier
			}
		}		
		stress_impact = {
			compassionate = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
		}
		set_global_variable = {
			name = TFE_struggle_eastern_iranian_urban_victory
			value = yes
			days = 15 # Clear out eventually, just in case
		}
	}

	# Trader victory
	option = {
		name = eastern_iranian_struggle.1002.b
		house = {
			add_house_modifier = {
				modifier = struggle_eastern_iranian_house_trade_modifier
			}
		}
		stress_impact = {
			brave = minor_stress_impact_gain
			arrogant = minor_stress_impact_gain
		}
		set_global_variable = {
			name = TFE_struggle_eastern_iranian_trade_victory
			value = yes
			days = 15 # Clear out eventually, just in case
		}
	}

	# Civilizer victory
	option = {
		name = eastern_iranian_struggle.1002.c
		house = {
			add_house_modifier = {
				modifier = struggle_eastern_iranian_house_culture_modifier
			}
		}
		stress_impact = {
			wrathful = minor_stress_impact_gain
			trusting = minor_stress_impact_gain
		}
		set_global_variable = {
			name = TFE_struggle_eastern_iranian_culture_victory
			value = yes
			days = 15 # Clear out eventually, just in case
		}
	}

	after = {
		# End Struggle
		struggle:eastern_iranian_struggle = {
			end_struggle = struggle_eastern_iranian_ending_silk_road_decision
		}
		# Notify
		every_player = {
			# limit = {
			# 	NOT = { this = root }
			# }
			trigger_event = eastern_iranian_struggle.1003
		}
	}
}




# Silk Road Ending notification
eastern_iranian_struggle.1003 = { # Fullscreen Intro Event
	type = character_event
	window = fullscreen_event
	title = eastern_iranian_struggle.1003.t
	desc = {
		desc = eastern_iranian_struggle.1003.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					has_global_variable = TFE_struggle_eastern_iranian_urban_victory
				}
				desc = eastern_iranian_struggle.1003.desc.closing.urban
			}
			triggered_desc = {
				trigger = {
					has_global_variable = TFE_struggle_eastern_iranian_trade_victory
				}
				desc = eastern_iranian_struggle.1003.desc.closing.trade
			}
			triggered_desc = {
				trigger = {
					has_global_variable = TFE_struggle_eastern_iranian_culture_victory
				}
				desc = eastern_iranian_struggle.1003.desc.closing.culture
			}
		}
		desc = eastern_iranian_struggle.1003.desc.closing
	}
	theme = court
	override_background = { reference = TFE_struggle_bg_eastern_market }
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_animate" }

	immediate = {
		play_music_cue = "mx_Struggle_ending_conciliation"
		scope:struggle_ender = {
			show_as_tooltip = {
				if = {
					limit = {
						has_global_variable = TFE_struggle_eastern_iranian_urban_victory
					}
					house = {
						add_house_modifier = {
							modifier = struggle_eastern_iranian_house_urban_modifier
						}
					}
				}
				else_if = {
					limit = {
						has_global_variable = TFE_struggle_eastern_iranian_trade_victory
					}
					house = {
						add_house_modifier = {
							modifier = struggle_eastern_iranian_house_trade_modifier
						}
					}
				}
				else_if = {
					limit = {
						has_global_variable = TFE_struggle_eastern_iranian_culture_victory
					}
					house = {
						add_house_modifier = {
							modifier = struggle_eastern_iranian_house_culture_modifier
						}
					}
				}
			}			
		}
	}
	option = {
		name = eastern_iranian_struggle.1003.a
	}
}


# Decentralization Ending
eastern_iranian_struggle.1004 = { 
	type = character_event
	window = fullscreen_event
	title = eastern_iranian_struggle.1004.t
	desc = {
		desc = eastern_iranian_struggle.1004.desc
	}
	theme = court
	override_background = { reference = TFE_struggle_bg_oasis }
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_end_animate" }

	immediate = {
		play_music_cue = "mx_Struggle_ending_compromise"

		save_scope_as = struggle_ender

		# Independent/Split De Jure Duchies will become De Jure Kingdoms
		# if = {
		# 	limit = {
		# 		every_county_in_region = {
		# 			region = TFE_eastern_iranian_struggle_region
		# 			any_this_title_or_de_jure_above = {
		# 				fp2_struggle_ending_compromise_independent_duchy_trigger = yes
		# 				# NOT = { this = }
		# 			}
		# 		}
		# 	}
		# 	custom_tooltip = {
		# 		text = tfe_iranian_struggle_compromise_create_new_kingdoms_tt
		# 		persia_struggle_compromise_duchies_to_kingdoms_effect = yes
		# 	}
		# }
		# if = {
		# 	limit = {
		# 		title:e_persia = {
		# 			any_in_de_jure_hierarchy = { fp2_struggle_ending_compromise_independent_duchy_trigger = yes }
		# 		}
		# 	}
		# 	custom_tooltip = {
		# 		text = tfe_iranian_struggle_compromise_create_new_kingdoms_tt
		# 		persia_struggle_compromise_duchies_to_kingdoms_effect = yes
		# 	}
		# }
		# if = {
		# 	limit = {
		# 		title:e_turan = {
		# 			any_in_de_jure_hierarchy = { fp2_struggle_ending_compromise_independent_duchy_trigger = yes }
		# 		}
		# 	}
		# 	custom_tooltip = {
		# 		text = tfe_iranian_struggle_compromise_create_new_kingdoms_tt
		# 		persia_struggle_compromise_duchies_to_kingdoms_effect = yes
		# 	}
		# }
		 # Move duchies to right kingdoms
		# persia_struggle_compromise_transfer_duchies_effect = yes
		#  # Turn kingdoms to empires
		# persia_struggle_compromise_kingdoms_to_empires_effect = yes
		#  # distribute small kingdoms
		# persia_struggle_compromise_distribute_kingdoms_to_neighbouring_empires_effect = yes
		#  # assign the new title to existing characters
		# persia_struggle_compromise_distribute_the_actual_titles = yes

		hidden_effect = {
			TFE_eastern_iranian_struggle_compromise_de_jure_effect = yes
		}

		 # Set up truces
		persia_struggle_compromise_truce_effect = yes

		 ##### Major Effects #####
		fp2_struggle_compromise_ender_effect = yes
		
		 # Tooltips!
		tfe_struggle_eastern_iranian_compromise_tooltip_effect = yes

		 ##### Minor Effects #####
		 # Self-sufficiency modifiers for each independent realm
		tfe_struggle_eastern_iranian_compromise_modifier_rewards_effect = yes
		set_global_variable = {
		 	name = persia_struggle_compromise_ending
		 	value = yes
		}
	}

	# Ok
	option = {
		name = eastern_iranian_struggle.1004.a
		 if = {
		 	limit = {
				any_in_list = {
		 			list = kingdom_empire
					this = root.primary_title
				}
		 	}
		 	custom_tooltip = fp2_struggle.0901.tt
		}
	}

	after = {
		 stress_impact = {
		 	arrogant = medium_stress_impact_gain
		 }
		# End Struggle
		struggle:eastern_iranian_struggle = {
			end_struggle = struggle_eastern_iranian_ending_compromise_decision
		}
		every_player = {
			# limit = {
			#  	NOT = { this = root }
			#  }
			trigger_event = eastern_iranian_struggle.1005
		}
	}
}

eastern_iranian_struggle.1005 = {
	type = character_event
	window = fullscreen_event
	title = eastern_iranian_struggle.1005.t
	desc = {
		first_valid = {
		    triggered_desc = {
		        trigger = { is_in_list = struggle_involvees }
		        desc = eastern_iranian_struggle.1005.opening.involved
		    }
		    desc = eastern_iranian_struggle.1005.opening
		}
		desc = eastern_iranian_struggle.1005.desc
	}
	theme = court
	override_background = { reference = TFE_struggle_bg_oasis }
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_end_animate" }

	immediate = {
		play_music_cue = "mx_Struggle_ending_compromise"
		##### Major Effects #####
		show_as_tooltip = {
			scope:struggle_ender = { fp2_struggle_compromise_ender_effect = yes }
		}
		# Independent/Split De Jure Duchies will become De Jure Kingdoms
		 tfe_struggle_eastern_iranian_compromise_tooltip_effect = yes
		 if = {
		 	limit = { is_in_list = struggle_involvees }
		 	show_as_tooltip = {
		 		fp2_struggle_compromise_modifier_rewards_personal_house_effect = yes
				fp2_struggle_compromise_modifier_rewards_personal_county_effect = yes
		 	}
		 }
	}

	# Ok
	option = {
		name = eastern_iranian_struggle.1005.a
	}
}

eastern_iranian_struggle.2001 = {
	type = character_event
	title = eastern_iranian_struggle.2001.t
	desc = eastern_iranian_struggle.2001.desc
	
	theme = stewardship
	
	left_portrait = {
		character = root
		animation = personality_zealous
	}
	
	option = {
		name = eastern_iranian_struggle.2001.a
		
		remove_short_term_gold = capital_county.urbanize_silk_road_price
		add_prestige = urbanize_silk_road_prestige_bonus_small
		capital_county = {
			add_county_modifier = {
				modifier = urbanize_silk_road_modifier
				years = 10
			}
		}
	}
	
	option = {
		trigger = {
			primary_title.tier >= tier_duchy
			capital_county.duchy = {
				is_title_created = yes
			}
		}
		name = eastern_iranian_struggle.2001.b
		
		remove_short_term_gold = capital_county.urbanize_silk_road_price_duchy
		add_prestige = urbanize_silk_road_prestige_bonus_medium
		capital_county = {
			add_county_modifier = {
				modifier = urbanize_silk_road_modifier
				years = 10
			}
		}
		capital_county = {
			save_temporary_scope_as = current_title
			duchy = {
				every_in_de_jure_hierarchy = {
					limit = {
						tier = tier_county
						title_province = {
							geographical_region = TFE_eastern_iranian_struggle_region
						}
						holder = {
							OR = {
								this = scope:current_title.holder
								is_vassal_or_below_of = scope:current_title.holder
							}
						}
					}
					custom = urbanize_modifier_added_tt
					hidden_effect = {
						add_county_modifier = {
							modifier = urbanize_silk_road_modifier
							years = 10
						}
					}
				}
			}
		}
	}
	
	option = {
		trigger = {
			primary_title.tier >= tier_kingdom
			capital_county.kingdom = {
				is_title_created = yes
			}
		}
		name = eastern_iranian_struggle.2001.c
		
		remove_short_term_gold = capital_county.urbanize_silk_road_price_kingdom
		add_prestige = urbanize_silk_road_prestige_bonus_large
		capital_county = {
			add_county_modifier = {
				modifier = urbanize_silk_road_modifier
				years = 10
			}
		}
		capital_county = {
			save_temporary_scope_as = current_title
			kingdom = {
				every_in_de_jure_hierarchy = {
					limit = {
						tier = tier_county
						title_province = {
							geographical_region = TFE_eastern_iranian_struggle_region
						}
						holder = {
							OR = {
								this = scope:current_title.holder
								is_vassal_or_below_of = scope:current_title.holder
							}
						}
					}
					
					custom = every_owned_county_within_de_jure_capital_kingdom_tt
					custom = urbanize_modifier_added_tt
					hidden_effect = {
						add_county_modifier = {
							modifier = urbanize_silk_road_modifier
							years = 10
						}
					}
				}
			}
		}
	}
	
	option = {
		trigger = {
			primary_title.tier >= tier_empire
			capital_county.empire = {
				is_title_created = yes
			}
		}
		name = eastern_iranian_struggle.2001.d
		
		remove_short_term_gold = capital_county.urbanize_silk_road_price_empire
		add_prestige = urbanize_silk_road_prestige_bonus_huge
		capital_county = {
			add_county_modifier = {
				modifier = urbanize_silk_road_modifier
				years = 10
			}
		}
		capital_county = {
			save_temporary_scope_as = current_title
			empire = {
				every_in_de_jure_hierarchy = {
					limit = {
						tier = tier_county
						title_province = {
							geographical_region = TFE_eastern_iranian_struggle_region
						}					
						holder = {
							OR = {
								this = scope:current_title.holder
								is_vassal_or_below_of = scope:current_title.holder
							}
						}
					}
					
					custom = every_owned_county_within_de_jure_capital_empire_tt
					custom = urbanize_modifier_added_tt
					hidden_effect = {
						add_county_modifier = {
							modifier = urbanize_silk_road_modifier
							years = 10
						}
					}
				}
			}
		}
	}
	
	# Actually, that's quite expensive lmao
	option = {
		name = eastern_iranian_struggle.2001.e
		
		custom_tooltip = eastern_iranian_struggle.2001.e_effect
		remove_decision_cooldown = struggle_eastern_iranian_urbanize_area
	}
}
	}
}

"common/decisions/tfe_struggle_decisions.txt" = {
	# The decision's loc has anachronistic references to Romans and Saxons, and the decision references an undefined event.
	{
establish_the_old_north = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_destiny_goal.dds"
	}
	decision_group_type = major

	ai_check_interval = 30

	is_shown = {
		is_ruler = yes
		is_landed = yes
		AND = {
			exists = struggle:britannia_struggle	
			struggle:britannia_struggle = {
				AND = {
					is_culture_involved_in_struggle = root.culture
				}
			}
		}
		exists = dynasty
		OR = {
			culture = { has_cultural_pillar = heritage_brythonic }
			culture = { has_cultural_pillar = heritage_goidelic }
			culture = { has_cultural_pillar = heritage_celtic }
		}
		capital_county = {
			title_province = { geographical_region = old_north }
		}
		NOT = {  #Can only do it once.
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:established_old_north
			}
		}
		highest_held_title_tier <= tier_duchy
		title:k_old_north = {
			AND = {
				is_titular = yes
				is_title_created = no
			}	
		}
	}

	is_valid = {
		OR = { #Independent or vassal of an Emperor
			is_independent_ruler = yes
			top_liege.primary_title.tier >= tier_empire
		}
		prestige_level >= medium_prestige_level
		has_title = title:d_northumberland
		has_title = title:d_lancaster
		has_title = title:d_lothian
		has_title = title:d_galloway
		completely_controls_region = old_north
	}

	is_valid_showing_failures_only = {
		is_available_adult = yes
	}

	effect = {
		save_scope_as = founder
		show_as_tooltip = { old_north_scripted_effect = yes }
		trigger_event = { id = britannia_struggle.7000 }
		every_player = {
			limit = {
				NOT = { this = scope:founder }
				top_liege = {
					OR = {
						this = scope:founder
						any_neighboring_and_across_water_top_liege_realm_owner = { this = scope:founder }
					}
				}
			}
			trigger_event = britannia_struggle.7001
		}
		hidden_effect = {
			add_to_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:established_old_north
			}
		}
	}
}
	}

	{
###################################################
# 
# EASTERN IRANIAN STRUGGLE ENDINGS
# By cybrxkhan
# 
###################################################


# Domination
struggle_eastern_iranian_ending_domination_decision = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_dehqan.dds"
	}
	extra_picture = "gfx/interface/illustrations/struggle_decisions_buttons/decision_dehqan.dds"
	decision_group_type = major
	
	title = struggle_eastern_iranian_ending_domination_decision
	desc = struggle_eastern_iranian_ending_domination_decision_desc
	selection_tooltip = struggle_eastern_iranian_ending_domination_decision_tooltip
	confirm_click_sound = "event:/DLC/FP2/SFX/UI/fp2_struggle_ending_decision_confirm"
	is_invisible = yes

	sort_order = 80

	is_valid = {
		is_independent_ruler = yes

		custom_tooltip = {
			text = struggle_eastern_iranian_ending_domination_correct_phase_tt
			any_character_struggle = {
				is_struggle_type = eastern_iranian_struggle
				OR = {
					is_struggle_phase = struggle_TFE_eastern_iranian_phase_expansion
					is_struggle_phase = struggle_TFE_eastern_iranian_phase_hostility
				}
			}
		}

		custom_tooltip = {
			text = struggle_ending_decision_correct_involvement_tt
			any_character_struggle = {
				involvement = involved
				is_struggle_type = eastern_iranian_struggle
			}
		}

		prestige_level >= 4
		highest_held_title_tier >= tier_kingdom

		# Control at least 75% of the struggle region
		custom_tooltip = {
			text = struggle_eastern_iranian_ending_domination_region_tt
			struggle_eastern_iranian_ending_domination_percent_region_trigger = yes
		}


		# OR = {
		# 	culture = { has_cultural_pillar = heritage_iranian } # West Iranians
		# 	culture = { has_cultural_pillar = heritage_tocharian } # East Iranians
		# }

		# No other realm controls more than 20% of the region
		custom_tooltip = {
			text = struggle_eastern_iranian_ending_domination_decision_region_tt
			NOT = {
				struggle:eastern_iranian_struggle = {
					any_involved_ruler = {
						NOT = { this = root }
						is_independent_ruler = yes
						exists = primary_title
						primary_title = { is_mercenary_company = no }
						save_temporary_scope_as = eastern_iranian_region_realm
						any_county_in_region = {
							region = TFE_eastern_iranian_struggle_region
							percent > fp2_struggle_hostility_region_percent_decimal_value
							holder.top_liege = scope:eastern_iranian_region_realm
						}
					}
				}
			}
		}

	}

	effect = {
		if = {
			limit = { has_dlc_feature = legends }
			legend_seed_struggle_ending_effect = {
				ENDER = root
				STRUGGLE = eastern_iranian_struggle
			}
		}
		##### Major Effects #####
		show_as_tooltip = {
			dynasty = { add_dynasty_prestige = 10000 }
			give_nickname = nick_the_great
		}
		# Boost to culture and faith conversion
		custom_tooltip = struggle_eastern_iranian_ending_bonus_conversion_tt
		# Choose variation of dominance boost
		custom_description_no_bullet = { text = struggle_eastern_iranian_dominance_modifier_list_tt }

		# Trigger a player facing event as a coda
		trigger_event = eastern_iranian_struggle.1000
	}

	cost = { gold = { value = 200 } }

	ai_check_interval = 120

	ai_potential = { always = yes }

	ai_will_do = { base = 100 }

}


# Silk Road/Prosperity
struggle_eastern_iranian_ending_silk_road_decision = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_mena_palace.dds"
	}
	extra_picture = "gfx/interface/illustrations/struggle_decisions_buttons/decision_mena_palace.dds"
	decision_group_type = major

	title = struggle_eastern_iranian_ending_silk_road_decision
	desc = struggle_eastern_iranian_ending_silk_road_decision_desc
	selection_tooltip = struggle_eastern_iranian_ending_silk_road_decision_tooltip
	confirm_click_sound = "event:/DLC/FP2/SFX/UI/fp2_struggle_ending_decision_confirm"
	is_invisible = yes

	sort_order = 80

	is_valid = {
		is_independent_ruler = yes

		custom_tooltip = {
			text = struggle_eastern_iranian_ending_silk_road_correct_phase_tt
			any_character_struggle = {
				is_struggle_type = eastern_iranian_struggle
				OR = {
					is_struggle_phase = struggle_TFE_eastern_iranian_phase_expansion
					is_struggle_phase = struggle_TFE_eastern_iranian_phase_development
				}
			}
		}

		custom_tooltip = {
			text = struggle_ending_decision_correct_involvement_tt
			any_character_struggle = {
				involvement = involved
				is_struggle_type = eastern_iranian_struggle
			}
		}

		prestige_level >= 4
		highest_held_title_tier >= tier_kingdom

		# Control at least 40% of the struggle region
		custom_tooltip = {
			text = struggle_eastern_iranian_ending_silk_road_region_tt
			struggle_eastern_iranian_ending_silk_road_percent_region_trigger = yes
		}

		# Own at least 5 counties in the struggle region with 80 development, including your capital
		custom_tooltip = {
			text = struggle_eastern_iranian_ending_silk_road_county_req_tt
			capital_county = {
				development_level >= struggle_eastern_iranian_development_req_value
				title_province = { geographical_region = TFE_eastern_iranian_struggle_region }
			}
			any_held_county = {
				count >= struggle_eastern_iranian_development_county_value
				development_level >= struggle_eastern_iranian_development_req_value
				title_province = { geographical_region = TFE_eastern_iranian_struggle_region }
			}
			# capital_county.de_jure_liege.de_jure_liege = {
			# 	any_de_jure_county = {
			# 		percent >= 0.8
			# 		culture = root.culture
			# 		faith = root.faith
			# 	}
			# }
		}


		# OR = {
		# 	culture = { has_cultural_pillar = heritage_iranian } # West Iranians
		# 	culture = { has_cultural_pillar = heritage_tocharian } # East Iranians
		# }

		# No other realm controls more than 20% of the region
		# custom_tooltip = {
		# 	text = struggle_eastern_iranian_ending_total_victory_decision_region_tt
		# 	NOT = {
		# 		struggle:roman_persian_struggle = {
		# 			any_involved_ruler = {
		# 				NOT = { this = root }
		# 				is_independent_ruler = yes
		# 				exists = primary_title
		# 				primary_title = { is_mercenary_company = no }
		# 				save_temporary_scope_as = eastern_iranian_region_realm
		# 				any_county_in_region = {
		# 					region = TFE_eastern_iranian_struggle_region
		# 					percent > fp2_struggle_hostility_region_percent_decimal_value
		# 					holder.top_liege = scope:eastern_iranian_region_realm
		# 				}
		# 			}
		# 		}
		# 	}
		# }

	}

	effect = {
		if = {
			limit = { has_dlc_feature = legends }
			legend_seed_struggle_ending_effect = {
				ENDER = root
				STRUGGLE = eastern_iranian_struggle
			}
		}
		##### Major Effects #####
		show_as_tooltip = {
			dynasty = { add_dynasty_prestige = 10000 }
			give_nickname = nick_the_great
		}
		# Boost to culture and faith conversion
		custom_tooltip = struggle_eastern_iranian_ending_bonus_conversion_tt
		# Choose economic, cultural, or military boost
		custom_description_no_bullet = { text = struggle_eastern_iranian_silk_road_prosperity_modifier_list_tt }

		# Trigger a player facing event as a coda
		trigger_event = eastern_iranian_struggle.1002
	}

	cost = { gold = { value = 200 } }

	ai_check_interval = 120

	ai_potential = { always = yes }

	ai_will_do = { base = 100 }

}


# Decentralized Polities
struggle_eastern_iranian_ending_compromise_decision = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_qanat.dds"
	}
	extra_picture = "gfx/interface/illustrations/struggle_decisions_buttons/decision_qanat.dds"
	decision_group_type = major

	title = struggle_eastern_iranian_ending_compromise_decision
	desc = struggle_eastern_iranian_ending_compromise_decision_desc
	selection_tooltip = struggle_eastern_iranian_ending_compromise_decision_tooltip
	confirm_click_sound = "event:/DLC/FP2/SFX/UI/fp2_struggle_ending_decision_confirm"
	is_invisible = yes

	sort_order = 80

	is_valid = {
		is_independent_ruler = yes

		custom_tooltip = {
			text = struggle_eastern_iranian_ending_compromise_decision_correct_phase_tt
			any_character_struggle = {
				AND = {
					is_struggle_type = eastern_iranian_struggle
					is_struggle_phase = struggle_TFE_eastern_iranian_phase_compromise
				}
			}
		}

		custom_tooltip = {
			text = struggle_ending_decision_correct_involvement_tt
			any_character_struggle = {
				involvement = involved
				is_struggle_type = eastern_iranian_struggle
			}
		}

		OR = {
			# Exalted among Men or higher
			prestige_level >= very_high_prestige_level
			# Hold and completely control a de jure kingdom of Hispania
			custom_tooltip = {
				text = struggle_eastern_iranian_ending_compromise_decision_kingdom_tt
				tfe_struggle_ending_hold_de_jure_kingdom_trigger_persia = yes
			}
		}

		# Control less than 50% of Iberia
		custom_tooltip = {
			text = struggle_eastern_iranian_ending_compromise_decision_region_tt
			tfe_struggle_ending_percent_persia_trigger = yes
		}

		# No one else controls more than 50% of Iberia
		custom_tooltip = {
			text = struggle_eastern_iranian_ending_compromise_decision_other_region_tt
			tfe_struggle_ending_other_percent_persia_trigger = yes
		}

		# No Independent Involved rulers are at war with each other
		custom_tooltip = {
			text = struggle_iberia_ending_compromise_truce_tt
			NOT = {
				struggle:eastern_iranian_struggle = {
					any_involved_ruler = {
						is_independent_ruler = yes
						primary_title = { is_mercenary_company = no }
						any_primary_war_enemy = {
							is_independent_ruler = yes
							any_character_struggle = {
								involvement = involved
								is_struggle_type = eastern_iranian_struggle
							}
							primary_title = { is_mercenary_company = no }
						}
					}
				}
			}
		}

		OR = {
			# Every other involved independent ruler in Eastern Iranian region has at least 60 opinion of you or is strong hooked
			custom_tooltip = {
				text = struggle_eastern_iranian_ending_compromise_decision_opinion_tt
				struggle:eastern_iranian_struggle = {
					NOT = {
						any_involved_ruler = {
							NOT = { this = root }
							is_independent_ruler = yes
							primary_title = { is_holy_order = no }
							primary_title = { is_mercenary_company = no }
							save_temporary_scope_as = this_character
							NOR = {
								root = { has_strong_hook = scope:this_character }
								opinion = {
									target = root
									value >= struggle_iberia_ending_compromise_decision_opinion_value
								}
							}
						}
					}
				}
			}
			# No other independent ruler in Eastern Iranian region is a king or above
			custom_tooltip = {
				text = struggle_eastern_iranian_ending_compromise_decision_independent_tt
				struggle:eastern_iranian_struggle = {
					NOT = {
						any_involved_ruler = {
							NOT = { this = root }
							is_independent_ruler = yes
							primary_title = { is_mercenary_company = no }
							primary_title.tier >= tier_kingdom
						}
					}
				}
			}
			# More than 25% of Eastern Iranian region is controlled by Interloper or Uninvolved rulers
			custom_tooltip = {
				text = struggle_eastern_iranian_ending_compromise_decision_interloper_tt
				any_county_in_region = {
					region = TFE_eastern_iranian_struggle_region
					percent > fp2_struggle_compromise_uninvolved_percent_decimal_value
					holder.top_liege = {
						NOT = {
							any_character_struggle = {
								involvement = involved
								is_struggle_type = eastern_iranian_struggle
							}
						}				
					}
				}
			}
		}
	}

	effect = {
		if = {
			limit = { has_dlc_feature = legends }
			legend_seed_struggle_ending_effect = {
				ENDER = root
				STRUGGLE = eastern_iranian_struggle
			}
		}
		##### Major Effects #####
		# Personal effects for ruler
		show_as_tooltip = { tfe_struggle_compromise_ender_effect = yes }
		# any_county_in_region
		# Independent/Split De Jure Duchies will become De Jure Kingdoms
		# if = {
		# 	limit = {
		# 		every_county_in_region = {
		# 			region = TFE_eastern_iranian_struggle_region
		# 			any_this_title_or_de_jure_above = {
		# 				fp2_struggle_ending_compromise_independent_duchy_trigger = yes
		# 				# NOT = { this = }
		# 			}
		# 		}
		# 	}
		# 	custom_tooltip = tfe_iranian_struggle_compromise_create_new_kingdoms_tt
		# }
		# if = {
		# 	limit = {
		# 		title:e_persia = {
		# 			any_in_de_jure_hierarchy = {
		# 				fp2_struggle_ending_compromise_independent_duchy_trigger = yes
		# 				# NOT = { this = }
		# 			}
		# 		}
		# 	}
		# 	custom_tooltip = tfe_iranian_struggle_compromise_create_new_kingdoms_tt
		# }
		# if = {
		# 	limit = {
		# 		title:e_turan = {
		# 			any_in_de_jure_hierarchy = {
		# 				fp2_struggle_ending_compromise_independent_duchy_trigger = yes
		# 			}
		# 		}
		# 	}
		# 	custom_tooltip = tfe_iranian_struggle_compromise_create_new_kingdoms_tt
		# }
		# Other Tooltips!
		tfe_iranian_struggle_compromise_tooltip_effect = yes

		##### Minor Effects #####
		# Self-sufficiency/defensive modifiers for each independent realm
		show_as_tooltip = { fp2_struggle_compromise_modifier_rewards_effect = yes }

		show_as_tooltip = {
			stress_impact = {
				arrogant = medium_stress_impact_gain
			}
		}


		# Trigger a player facing event as a coda
		trigger_event = eastern_iranian_struggle.1004
	}

	cost = { gold = { value = 150 } }

	ai_check_interval = 120

	ai_potential = { always = yes }

	ai_will_do = { base = 100 }
}

#Eastern Iranian Struggle Silk Road Urbanization Decision (totally not copied from the discord title)
struggle_eastern_iranian_urbanize_area = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_qanat.dds"
	}

	desc = struggle_eastern_iranian_urbanize_area_desc
	selection_tooltip = struggle_eastern_iranian_urbanize_area_tooltip
	ai_check_interval = 0
	cooldown = { years = 15 }

	is_shown = {
		capital_county = {
			title_province = {
				geographical_region = TFE_eastern_iranian_struggle_region
			}
		}
	}

	is_valid_showing_failures_only = {
		is_at_war = no
		is_adult = yes
	}

	effect = {
		# Get some good county opinion, and prevent said counties from joining popular revolts
		# show_as_tooltip = {
		# 	capital_county = {
		# 		add_county_modifier = {
		# 			modifier = urbanize_silk_road_modifier
		# 			years = 10
		# 		}
		# 	}
		# }
		custom_tooltip = struggle_eastern_iranian_urbanize_area_extend_to_county
		if = {
			limit = {
				primary_title.tier >= tier_duchy
				any_held_title = { tier = tier_duchy }
				capital_county.duchy = {
					is_title_created = yes
				}
			}
			custom_tooltip = struggle_eastern_iranian_urbanize_area_extend_to_duchy
		}
		if = {
			limit = {
				primary_title.tier >= tier_kingdom
				any_held_title = { tier = tier_kingdom }
				capital_county.kingdom = {
					is_title_created = yes
				}
			}
			custom_tooltip = struggle_eastern_iranian_urbanize_area_extend_to_kingdom
		}
		if = {
			limit = {
				primary_title.tier >= tier_empire
				any_held_title = { tier = tier_empire }
				capital_county.empire = {
					is_title_created = yes
				}
			}
			custom_tooltip = struggle_eastern_iranian_urbanize_area_extend_to_empire
		}
		
		trigger_event = eastern_iranian_struggle.2001
	}

	ai_will_do = {
		base = 20
	}
}
	}
}

"common/on_action/game_start.txt" = {
	# TFE doesn't have Iceland on the map.
	{
			title:d_iceland = { set_coa = d_iceland_norse }
			title:c_vestisland = { set_coa = c_vestisland_norse }
			title:c_nordrland = { set_coa = c_nordrland_norse }
			title:c_austisland = { set_coa = c_austisland_norse }
			title:c_sudurland = { set_coa = c_sudurland_norse }
	}
}

"common/scripted_modifiers/TFE_marriage_modifier.txt" = {
	{
	#############
	#  HAROLD   #
	#############
	modifier = {
		add = -5000
		years_from_game_start <= 5
		OR = {
			scope:actor = character:122
			scope:recipient = character:122
			scope:secondary_actor = character:122
			scope:secondary_recipient = character:122
		}
		scope:actor = {
			is_ai = yes
		}
		scope:recipient = {
			is_ai = yes
		}
		scope:secondary_actor = {
			is_ai = yes
		}
		scope:secondary_recipient = {
			is_ai = yes
		}
	}
	}
}

"gfx/portraits/portrait_modifiers/01_beards_base.txt" = {
	{
			modifier = {
				add = 666
				exists = this
				exists = character:easteregg_daan_broekhof
				this = character:easteregg_daan_broekhof
			}
            modifier = {
				add = 1000
				exists = this
				has_character_flag = no_beard
			}
	}
}

"common/casus_belli_types/00_migration_wars.txt" = {
	# The converter removes eastern_iranian_struggle
	{
			if = {
				limit = {
					AND = {
						exists = struggle:eastern_iranian_struggle
						struggle:eastern_iranian_struggle = {
							AND = {
								has_struggle_phase_parameter = cheaper_nomadic_migrations_within_struggle_region
								is_culture_involved_in_struggle = scope:attacker.culture
							}
						}
					}
				}
				multiply = {
					value = 0.5
					desc = EASTERN_IRANIAN_STRUGGLE
				}
			}
	}

	# The converter removes eastern_iranian_struggle
	{
			if = {
				limit = {
					OR = {
						AND = {
							exists = struggle:eastern_iranian_struggle
							migration_levies_value >= 10
							struggle:eastern_iranian_struggle = {
								has_struggle_phase_parameter = more_nomadic_migration_armies
							}
							any_in_list = {
								list = target_titles
								title_capital_county.title_province = {
									geographical_region = TFE_eastern_iranian_struggle_region
								}
							}
							has_cultural_tradition = tradition_nomadic_migrations
						}
						AND = {
							exists = struggle:north_indian_struggle
							migration_levies_value >= 10
							struggle:north_indian_struggle = {
								has_struggle_phase_parameter = more_nomadic_migration_armies
							}
							any_in_list = {
								list = target_titles
								title_capital_county.title_province = {
									geographical_region = TFE_north_indian_struggle_region
								}
							}
							has_cultural_tradition = tradition_nomadic_migrations
						}
					}
				}
				spawn_army = {
					name = event_troop_default_name
					levies = migration_army_levies_small
					men_at_arms = {
						type = light_horsemen
						stacks = migration_army_maa_small
					}
					location = scope:attacker.capital_province
					uses_supply = no
					inheritable = yes
				}
			}
	}

	# k_juteland not in TFE as of the 'After the Pharaohs' update
	{
								this = title:k_juteland
	}
	{
							this = title:k_juteland
	}
}

"common/on_action/tfe_struggle_on_actions.txt" = {
	{
tfe_eastern_iranian_struggle_starting_events = {
	events = {
		neutral_struggle.0001
		eastern_iranian_struggle.0003
	}
}
	}
}

"common/script_values/TFE_struggle_values.txt" = {
	{
	struggle:eastern_iranian_struggle = {
		every_involved_ruler = {
			limit = {
				NOT = { this = root }
				is_independent_ruler = yes
				primary_title = {
					is_mercenary_company = no
					is_holy_order = no
					tier >= tier_kingdom
				}
			}
			add = 1
		}
	}
	}

	{
	struggle:eastern_iranian_struggle = {
		every_involved_ruler = {
			limit = {
				NOT = { this = root }
				is_independent_ruler = yes
				primary_title = {
					is_mercenary_company = no
					is_holy_order = no
				}
			}
			add = 1
		}
	}
	}

	{
	struggle:eastern_iranian_struggle = {
		every_involved_ruler = {
			limit = {
				NOT = { this = root }
				is_independent_ruler = yes
				primary_title = { is_holy_order = no }
				primary_title = { is_mercenary_company = no }
				save_temporary_scope_as = this_character
				OR = {
					root = { has_strong_hook = scope:this_character }
					opinion = {
						target = root
						value >= struggle_persia_ending_compromise_decision_opinion_value
					}
				}
			}
			add = 1
		}
	}
	}

	{
	every_county_in_region = {
		region = TFE_eastern_iranian_struggle_region
		limit = {
			holder.top_liege = {
				NOT = {
					any_character_struggle = {
						involvement = involved
						is_struggle_type = eastern_iranian_struggle
					}
				}				
			}
		}
		add = 1
	}
	}

	{
	every_county_in_region = {
		region = TFE_eastern_iranian_struggle_region
		limit = {
			holder.top_liege = {
				NOT = {
					any_character_struggle = {
						involvement = involved
						is_struggle_type = eastern_iranian_struggle
					}
				}				
			}
		}
		add = 1
	}
	}
}

"common/scripted_effects/TFE_eastern_iranian_struggle_scripted_effects.txt" = {
	{
TFE_eastern_iranian_struggle_ending_involved_list_effect = {
	save_scope_as = struggle_ender
	struggle:eastern_iranian_struggle = {
		every_involved_ruler = {
			limit = {
				is_independent_ruler = yes
				primary_title = { is_mercenary_company = no }
			}
			add_to_list = struggle_involvees
		}
	}
	# Add all involved cultures with counties to a list, for war checks
	TFE_eastern_iranian_struggle_ending_culture_list_effect = yes
	# Add all involved faiths with counties to a list, for marriage and holy war checks
	TFE_eastern_iranian_struggle_ending_faith_list_effect = yes
}

# Add all Involved cultures with counties to a list
TFE_eastern_iranian_struggle_ending_culture_list_effect = {
	every_culture_global = {		
		limit = {
			save_temporary_scope_as = this_culture
			struggle:eastern_iranian_struggle = { is_culture_involved_in_struggle = scope:this_culture }
			culture_number_of_counties > 0
		}
		save_scope_as = culture_scope
		add_to_global_variable_list = {
			name = TFE_eastern_iranian_struggle_ending_culture_list
			target = scope:culture_scope
		}
	}
}

# Add all Involved independent rulers to a list
TFE_eastern_iranian_struggle_ending_involved_list_effect = {
	save_scope_as = struggle_ender
	struggle:eastern_iranian_struggle = {
		every_involved_ruler = {
			limit = {
				is_independent_ruler = yes
				primary_title = { is_mercenary_company = no }
			}
			add_to_list = struggle_involvees
		}
	}
	# Add all involved cultures with counties to a list, for war checks
	TFE_eastern_iranian_struggle_ending_culture_list_effect = yes
	# Add all involved faiths with counties to a list, for marriage and holy war checks
	TFE_eastern_iranian_struggle_ending_faith_list_effect = yes
}

# Add all Involved faiths with counties to a list
TFE_eastern_iranian_struggle_ending_faith_list_effect = {
	every_religion_global = {
		limit = {
			any_faith = {
				save_temporary_scope_as = this_faith
				struggle:eastern_iranian_struggle = { is_faith_involved_in_struggle = scope:this_faith }
				num_county_followers > 0
			}
		}
		every_faith = {
			limit = {
				struggle:eastern_iranian_struggle = { is_faith_involved_in_struggle = prev }
				num_county_followers > 0
			}
			save_scope_as = faith_scope
			add_to_global_variable_list = {
				name = TFE_eastern_iranian_struggle_ending_faith_list
				target = scope:faith_scope
			}
		}
	}
}




TFE_eastern_iranian_struggle_compromise_de_jure_effect = {

	# Existing Kingdoms
	# d_khorezm
	if = {
		limit = {
			NOT = {			
				title:k_oghuz_il = {
					target_is_de_jure_liege_or_above = title:e_turan
				}
			}

		}
		title:k_oghuz_il = {
			set_de_jure_liege_title = title:e_turan
		}
	}
	if = {
		limit = {
			exists = title:d_khorezm.holder
			NOT = { exists = title:k_oghuz_il.holder }
			NOT = {
				title:d_khorezm.holder = {
					any_held_title = { tier = tier_kingdom }
				}
			}
		}
		title:d_khorezm.holder = {
			get_title = title:k_oghuz_il
		}
	}

	# d_chah
	if = {
		limit = {
			NOT = {			
				title:k_syr_darya = {
					target_is_de_jure_liege_or_above = title:e_turan
				}
			}

		}
		title:k_syr_darya = {
			set_de_jure_liege_title = title:e_turan
		}
	}
	if = {
		limit = {
			exists = title:d_chah.holder
			NOT = { exists = title:k_syr_darya.holder }
			NOT = {
				title:d_chah.holder = {
					any_held_title = { tier = tier_kingdom }
				}
			}
		}
		title:d_chah.holder = {
			get_title = title:k_syr_darya
		}
	}

	# d_soghd
	if = {
		limit = {
			NOT = {			
				title:k_transoxiana = {
					target_is_de_jure_liege_or_above = title:e_turan
				}
			}

		}
		title:k_transoxiana = {
			set_de_jure_liege_title = title:e_turan
		}
	}
	if = {
		limit = {
			exists = title:d_soghd.holder
			NOT = { exists = title:k_transoxiana.holder }
			NOT = {
				title:d_soghd.holder = {
					any_held_title = { tier = tier_kingdom }
				}
			}
		}
		title:d_soghd.holder = {
			get_title = title:k_transoxiana
		}
	}

	# d_nishapur
	if = {
		limit = {
			NOT = {			
				title:k_khorasan = {
					target_is_de_jure_liege_or_above = title:e_turan
				}
			}

		}
		title:k_khorasan = {
			set_de_jure_liege_title = title:e_turan
		}
	}
	if = {
		limit = {
			exists = title:d_nishapur.holder
			NOT = { exists = title:k_khorasan.holder }
			NOT = {
				title:d_nishapur.holder = {
					any_held_title = { tier = tier_kingdom }
				}
			}
		}
		title:d_nishapur.holder = {
			get_title = title:k_khorasan
		}
	}
	

	# d_kabul
	if = {
		limit = {
			NOT = {			
				title:k_kabulistan = {
					target_is_de_jure_liege_or_above = title:e_turan
				}
			}

		}
		title:k_kabulistan = {
			set_de_jure_liege_title = title:e_turan
		}
	}
	if = {
		limit = {
			exists = title:d_kabul.holder
			NOT = { exists = title:k_kabulistan.holder }
			NOT = {
				title:d_kabul.holder = {
					any_held_title = { tier = tier_kingdom }
				}
			}
		}
		title:d_kabul.holder = {
			get_title = title:k_kabulistan
		}
	}

	# d_gandhara
	if = {
		limit = {
			NOT = {			
				title:k_punjab = {
					target_is_de_jure_liege_or_above = title:e_turan
				}
			}

		}
		title:k_punjab = {
			set_de_jure_liege_title = title:e_turan
		}
	}
	if = {
		limit = {
			exists = title:d_gandhara.holder
			NOT = { exists = title:k_punjab.holder }
			NOT = {
				title:d_gandhara.holder = {
					any_held_title = { tier = tier_kingdom }
				}
			}
		}
		title:d_gandhara.holder = {
			get_title = title:k_punjab
		}
	}

	# d_kasmira
	if = {
		limit = {
			NOT = {			
				title:k_kashmir = {
					target_is_de_jure_liege_or_above = title:e_turan
				}
			}

		}
		title:k_kashmir = {
			set_de_jure_liege_title = title:e_turan
		}
	}
	if = {
		limit = {
			exists = title:d_kasmira.holder
			NOT = { exists = title:k_kashmir.holder }
			NOT = {
				title:d_kasmira.holder = {
					any_held_title = { tier = tier_kingdom }
				}
			}
		}
		title:d_kasmira.holder = {
			get_title = title:k_kashmir
		}
	}
	

	# New Kingdoms
	# d_merv
	title:d_merv = {
		set_de_jure_liege_title = title:k_merv_struggle
	}
	title:k_merv_struggle = {
		set_de_jure_liege_title = title:e_turan
	}
	if = {
		limit = {
			exists = title:d_merv.holder
			NOT = {
				title:d_merv.holder = {
					any_held_title = { tier = tier_kingdom }
				}
			}
		}
		title:d_merv.holder = {
			get_title = title:k_merv_struggle
		}
	}

	# d_ghur
	title:d_ghur = {
		set_de_jure_liege_title = title:k_ghur_struggle
	}
	title:k_ghur_struggle = {
		set_de_jure_liege_title = title:e_turan
	}
	if = {
		limit = {
			exists = title:d_ghur.holder
			NOT = {
				title:d_ghur.holder = {
					any_held_title = { tier = tier_kingdom }
				}
			}
		}
		title:d_ghur.holder = {
			get_title = title:k_ghur_struggle
		}
	}

	# d_herat
	title:d_herat = {
		set_de_jure_liege_title = title:k_herat_struggle
	}
	title:k_herat_struggle = {
		set_de_jure_liege_title = title:e_turan
	}
	if = {
		limit = {
			exists = title:d_herat.holder
			NOT = {
				title:d_herat.holder = {
					any_held_title = { tier = tier_kingdom }
				}
			}
		}
		title:d_herat.holder= {
			get_title = title:k_herat_struggle
		}
	}

	# d_balkh
	title:d_balkh = {
		set_de_jure_liege_title = title:k_balkh_struggle
	}
	title:k_balkh_struggle = {
		set_de_jure_liege_title = title:e_turan
	}
	if = {
		limit = {
			exists = title:d_balkh.holder
			NOT = {
				title:d_balkh.holder = {
					any_held_title = { tier = tier_kingdom }
				}
			}
		}
		title:d_balkh.holder = {
			get_title = title:k_balkh_struggle
		}
	}

	# d_nasa
	title:d_nasa = {
		set_de_jure_liege_title = title:k_nasa_struggle
	}
	title:k_nasa_struggle = {
		set_de_jure_liege_title = title:e_turan
	}
	if = {
		limit = {
			exists = title:d_nasa.holder
			NOT = {
				title:d_nasa.holder = {
					any_held_title = { tier = tier_kingdom }
				}
			}
		}
		title:d_nasa.holder = {
			get_title = title:k_nasa_struggle
		}
	}

	# d_kohestan
	title:d_kohestan = {
		set_de_jure_liege_title = title:k_kohestan_struggle
	}
	title:k_kohestan_struggle = {
		set_de_jure_liege_title = title:e_turan
	}
	if = {
		limit = {
			exists = title:d_kohestan.holder
			NOT = {
				title:d_kohestan.holder = {
					any_held_title = { tier = tier_kingdom }
				}
			}
		}
		title:d_kohestan.holder = {
			get_title = title:k_kohestan_struggle
		}
	}

	# d_badakhshan
	title:d_badakhshan = {
		set_de_jure_liege_title = title:k_badakhshan_struggle
	}
	title:k_badakhshan_struggle = {
		set_de_jure_liege_title = title:e_turan
	}
	if = {
		limit = {
			exists = title:d_badakhshan.holder
			NOT = {
				title:d_badakhshan.holder = {
					any_held_title = { tier = tier_kingdom }
				}
			}
		}
		title:d_badakhshan.holder = {
			get_title = title:k_badakhshan_struggle
		}
	}

	# d_khuttal
	title:d_khuttal = {
		set_de_jure_liege_title = title:k_khuttal_struggle
	}
	title:k_khuttal_struggle = {
		set_de_jure_liege_title = title:e_turan
	}
	if = {
		limit = {
			exists = title:d_khuttal.holder
			NOT = {
				title:d_khuttal.holder = {
					any_held_title = { tier = tier_kingdom }
				}
			}
		}
		title:d_khuttal.holder = {
			get_title = title:k_khuttal_struggle
		}
	}

	# d_osrushana
	title:d_osrushana = {
		set_de_jure_liege_title = title:k_osrushana_struggle
	}
	title:k_osrushana_struggle = {
		set_de_jure_liege_title = title:e_turan
	}
	if = {
		limit = {
			exists = title:d_osrushana.holder
			NOT = {
				title:d_osrushana.holder = {
					any_held_title = { tier = tier_kingdom }
				}
			}
		}
		title:d_osrushana.holder = {
			get_title = title:k_osrushana_struggle
		}
	}

	# d_ferghana
	title:d_ferghana = {
		set_de_jure_liege_title = title:k_ferghana_struggle
	}
	title:k_ferghana_struggle = {
		set_de_jure_liege_title = title:e_turan
	}
	if = {
		limit = {
			exists = title:d_ferghana.holder
			NOT = {
				title:d_ferghana.holder = {
					any_held_title = { tier = tier_kingdom }
				}
			}
		}
		title:d_ferghana.holder = {
			get_title = title:k_ferghana_struggle
		}
	}

	# d_uzboy
	title:d_uzboy = {
		set_de_jure_liege_title = title:k_uzboy_struggle
	}
	title:k_uzboy_struggle = {
		set_de_jure_liege_title = title:e_turan
	}
	if = {
		limit = {
			exists = title:d_uzboy.holder
			NOT = {
				title:d_uzboy.holder = {
					any_held_title = { tier = tier_kingdom }
				}
			}
		}
		title:d_uzboy.holder = {
			get_title = title:k_uzboy_struggle
		}
	}

	# d_zabulistan
	title:d_zabulistan = {
		set_de_jure_liege_title = title:k_zabulistan_struggle
	}
	title:k_zabulistan_struggle = {
		set_de_jure_liege_title = title:e_turan
	}
	if = {
		limit = {
			exists = title:d_zabulistan.holder
			NOT = {
				title:d_zabulistan.holder = {
					any_held_title = { tier = tier_kingdom }
				}
			}
		}
		title:d_zabulistan.holder = {
			get_title = title:k_zabulistan_struggle
		}
	}

	# d_syr_darya
	title:d_syr_darya = {
		set_de_jure_liege_title = title:k_syr_darya_struggle
	}
	title:k_syr_darya_struggle = {
		set_de_jure_liege_title = title:e_turan
	}
	if = {
		limit = {
			exists = title:d_syr_darya.holder
			NOT = {
				title:d_syr_darya.holder = {
					any_held_title = { tier = tier_kingdom }
				}
			}
		}
		title:d_syr_darya.holder = {
			get_title = title:k_syr_darya_struggle
		}
	}

	# d_muyunkum
	title:d_muyunkum = {
		set_de_jure_liege_title = title:k_muyunkum_struggle
	}
	title:k_muyunkum_struggle = {
		set_de_jure_liege_title = title:e_turan
	}
	if = {
		limit = {
			exists = title:d_muyunkum.holder
			NOT = {
				title:d_muyunkum.holder = {
					any_held_title = { tier = tier_kingdom }
				}
			}
		}
		title:d_muyunkum.holder = {
			get_title = title:k_muyunkum_struggle
		}
	}

	# d_sistan
	title:d_sistan = {
		set_de_jure_liege_title = title:k_sistan_struggle
	}
	title:k_sistan_struggle = {
		set_de_jure_liege_title = title:e_turan
	}
	if = {
		limit = {
			exists = title:d_sistan.holder
			NOT = {
				title:d_sistan.holder = {
					any_held_title = { tier = tier_kingdom }
				}
			}
		}
		title:d_sistan.holder = {
			get_title = title:k_sistan_struggle
		}
	}

	# d_aral_il
	title:d_aral_il = {
		set_de_jure_liege_title = title:k_aral_il_struggle
	}
	title:k_aral_il_struggle = {
		set_de_jure_liege_title = title:e_turan
	}
	if = {
		limit = {
			exists = title:d_aral_il.holder
			NOT = {
				title:d_aral_il.holder = {
					any_held_title = { tier = tier_kingdom }
				}
			}
		}
		title:d_aral_il.holder = {
			get_title = title:k_aral_il_struggle
		}
	}

	# d_transcaspiana
	title:d_transcaspiana = {
		set_de_jure_liege_title = title:k_transcaspiana_struggle
	}
	title:k_transcaspiana_struggle = {
		set_de_jure_liege_title = title:e_turan
	}
	if = {
		limit = {
			exists = title:d_transcaspiana.holder
			NOT = {
				title:d_transcaspiana.holder = {
					any_held_title = { tier = tier_kingdom }
				}
			}
		}
		title:d_transcaspiana.holder = {
			get_title = title:k_transcaspiana_struggle
		}
	}

	# d_jemba
	title:d_jemba = {
		set_de_jure_liege_title = title:k_jemba_struggle
	}
	title:k_jemba_struggle = {
		set_de_jure_liege_title = title:e_turan
	}
	if = {
		limit = {
			exists = title:d_jemba.holder
			NOT = {
				title:d_jemba.holder = {
					any_held_title = { tier = tier_kingdom }
				}
			}
		}
		title:d_jemba.holder = {
			get_title = title:k_jemba_struggle
		}
	}

	# d_pamir
	title:d_pamir = {
		set_de_jure_liege_title = title:k_pamir_struggle
	}
	title:k_pamir_struggle = {
		set_de_jure_liege_title = title:e_turan
	}
	if = {
		limit = {
			exists = title:d_pamir.holder
			NOT = {
				title:d_pamir.holder = {
					any_held_title = { tier = tier_kingdom }
				}
			}
		}
		title:d_pamir.holder = {
			get_title = title:k_pamir_struggle
		}
	}

	
}



tfe_iranian_struggle_compromise_tooltip_effect = {
	# De Jure Kingdoms will become De Jure Empires
	custom_tooltip = tfe_iranian_struggle_compromise_new_de_jure_kingdoms_tt
	# custom_tooltip = struggle_compromise_duchy_transfer_tt
	# custom_tooltip = tfe_iranian_struggle_compromise_create_new_empires_tt
	# if = {
	# 	limit = {
	# 		struggle:eastern_iranian_struggle = {
	# 			any_involved_ruler = {
	# 				count > 1
	# 				is_independent_ruler = yes
	# 				primary_title = { is_mercenary_company = no }
	# 			}
	# 		}
	# 		# Every Involved ruler gets a 10 year truce with every other
	# 		custom_tooltip = fp2_struggle_compromise_truce_tt
	# 	}
	# }
	# custom_tooltip = fp2_struggle_compromise_war_cost_tt
}





tfe_struggle_eastern_iranian_compromise_tooltip_effect = {
	# New de jure Kingdoms
	tfe_iranian_struggle_compromise_tooltip_effect = yes
	if = {
		limit = {
			struggle:eastern_iranian_struggle = {
				any_involved_ruler = {
					count > 1
					is_independent_ruler = yes
					primary_title = { is_mercenary_company = no }
				}
			}
			# Every Involved ruler gets a 10 year truce with every other
			custom_tooltip = fp2_struggle_compromise_truce_tt
		}
	}
	custom_tooltip = fp2_struggle_compromise_war_cost_tt
}


tfe_struggle_eastern_iranian_compromise_modifier_rewards_effect = {
	struggle:eastern_iranian_struggle = {
		show_as_tooltip = {
			every_involved_ruler = {
				limit = { this = root }
				custom = fp2_struggle_compromise_house_rewards_tt
				struggle_eastern_iranian_compromise_modifier_rewards_personal_house_effect = yes
			}
			every_involved_ruler = {
				limit = { this = root }
				custom = fp2_struggle_compromise_defensive_rewards_tt
				struggle_eastern_iranian_compromise_modifier_rewards_personal_county_effect = yes
			}
		}
		hidden_effect = {
			every_involved_ruler = {
				limit = {
					is_independent_ruler = yes
					primary_title = { is_mercenary_company = no }
					exists = house
					NOT = {
						house = { has_house_modifier = struggle_eastern_iranian_compromise_house_reward_modifier }
					}
				}
				struggle_eastern_iranian_compromise_modifier_rewards_personal_house_effect = yes
			}
			every_involved_ruler = {
				limit = {
					is_independent_ruler = yes
					primary_title = { is_mercenary_company = no }
				}
				struggle_eastern_iranian_compromise_modifier_rewards_personal_county_effect = yes
			}
		}
	}
}




# Add house modifiers to a single character (used in tooltips);
struggle_eastern_iranian_compromise_modifier_rewards_personal_house_effect = {
	house = {
		custom_tooltip = struggle_eastern_iranian_compromise_house_enforce_truce_rewards_tt
		add_house_modifier = {
			modifier = struggle_eastern_iranian_compromise_house_reward_modifier
		}
	}
}

# Add county modifiers to a single character (used in tooltips)
struggle_eastern_iranian_compromise_modifier_rewards_personal_county_effect = {
	capital_county = {
		add_county_modifier = { #TODO_CD_FP2 (JP) check this is the right scope
			modifier = struggle_eastern_iranian_compromise_defensive_reward_modifier
		}
	}
}




















persia_struggle_compromise_duchies_to_kingdoms_effect = {
	hidden_effect = {
		title:e_persia = {
			# Cycle through de jure duchies held by independent dukes
			every_in_de_jure_hierarchy = {
				# Prefer primary titles
				limit = {
					this = this.holder.primary_title
					fp2_struggle_ending_compromise_independent_duchy_trigger = yes
					any_in_de_jure_hierarchy = {
						tier = tier_county 
						title_province = {
							geographical_region = TFE_eastern_iranian_struggle_region
						}
					}
				}
				# Then capital titles
				alternative_limit = {
					this.title_capital_county = this.kingdom.title_capital_county
					fp2_struggle_ending_compromise_independent_duchy_trigger = yes
				}
				alternative_limit = { fp2_struggle_ending_compromise_independent_duchy_trigger = yes }
				save_scope_as = old_title
				persia_struggle_compromise_create_new_kingdom_effect = { TYPE = NEW FETCH = scope:old_title }
			}
			# Cycle through titular duchies held by independent dukes (e.g. Zaragoza)
			every_in_list = {
				list = titular_iberian_duchies
				save_scope_as = special_duchy
				if = {
					# Independent holder who controls at least 50% a de jure duchy, and no kingdom has the same as that duchy
					limit = { fp2_struggle_ending_compromise_titular_trigger = yes }
					title:e_persia = {
						random_in_de_jure_hierarchy = {
							limit = {
								tier = tier_duchy
								any_direct_de_jure_vassal_title = {
									percent >= 0.5
									holder.top_liege = scope:special_duchy.holder
								}
							}
							save_scope_as = old_title
						}
					}
					persia_struggle_compromise_create_new_kingdom_effect = { TYPE = SPECIAL FETCH = scope:special_duchy }
				}
			}
			# Cycle through uncreated de jure duchies to split if needed (e.g. Coimbra)
			every_in_de_jure_hierarchy = {
				limit = { fp2_struggle_ending_compromise_split_duchy_trigger = yes }
			    save_scope_as = old_title
				persia_struggle_compromise_create_new_kingdom_effect = { TYPE = NEW FETCH = scope:old_title }
			}
		}
		title:e_turan = {
			# Cycle through de jure duchies held by independent dukes
			every_in_de_jure_hierarchy = {
				# Prefer primary titles
				limit = {
					this = this.holder.primary_title
					fp2_struggle_ending_compromise_independent_duchy_trigger = yes
					any_in_de_jure_hierarchy = {
						tier = tier_county 
						title_province = {
							geographical_region = TFE_eastern_iranian_struggle_region
						}
					}
				}
				# Then capital titles
				alternative_limit = {
					this.title_capital_county = this.kingdom.title_capital_county
					fp2_struggle_ending_compromise_independent_duchy_trigger = yes
				}
				alternative_limit = { fp2_struggle_ending_compromise_independent_duchy_trigger = yes }
				save_scope_as = old_title
				turan_struggle_compromise_create_new_kingdom_effect = { TYPE = NEW FETCH = scope:old_title }
			}
			# Cycle through titular duchies held by independent dukes (e.g. Zaragoza)
			every_in_list = {
				list = titular_iberian_duchies
				save_scope_as = special_duchy
				if = {
					# Independent holder who controls at least 50% a de jure duchy, and no kingdom has the same as that duchy
					limit = { fp2_struggle_ending_compromise_titular_trigger = yes }
					title:e_turan = {
						random_in_de_jure_hierarchy = {
							limit = {
								tier = tier_duchy
								any_direct_de_jure_vassal_title = {
									percent >= 0.5
									holder.top_liege = scope:special_duchy.holder
								}
							}
							save_scope_as = old_title
						}
					}
					turan_struggle_compromise_create_new_kingdom_effect = { TYPE = SPECIAL FETCH = scope:special_duchy }
				}
			}
			# Cycle through uncreated de jure duchies to split if needed (e.g. Coimbra)
			every_in_de_jure_hierarchy = {
				limit = { fp2_struggle_ending_compromise_split_duchy_trigger = yes }
			    save_scope_as = old_title
				turan_struggle_compromise_create_new_kingdom_effect = { TYPE = NEW FETCH = scope:old_title }
			}
		}
	}
}

persia_struggle_compromise_create_new_kingdom_effect = {
	add_to_list = duchy_kingdom
	create_dynamic_title = {
		tier = kingdom
		name = $TYPE$_CREATED_TITLE_NAME
	}
	scope:old_title = {
		# Edge case for kingdoms which do not control their own capital duchy
		if = {
			limit = {
				title_capital_county = de_jure_liege.title_capital_county
				exists = de_jure_liege.holder
				NOT = { holder = de_jure_liege.holder }
			}
			de_jure_liege = {
				# So kingdom has a capital
				set_capital_county = this.holder.capital_county
				# So titles do not share CoAs
				set_coa = this.holder.house
			}
		}
		set_de_jure_liege_title = scope:new_title
	}
	scope:new_title = {
		set_coa = $FETCH$
		set_color_from_title = $FETCH$
		set_capital_county = $FETCH$.title_capital_county
		set_de_jure_liege_title = title:e_persia
	}
}
turan_struggle_compromise_create_new_kingdom_effect = {
	add_to_list = duchy_kingdom
	create_dynamic_title = {
		tier = kingdom
		name = $TYPE$_CREATED_TITLE_NAME
	}
	scope:old_title = {
		# Edge case for kingdoms which do not control their own capital duchy
		if = {
			limit = {
				title_capital_county = de_jure_liege.title_capital_county
				exists = de_jure_liege.holder
				NOT = { holder = de_jure_liege.holder }
			}
			de_jure_liege = {
				# So kingdom has a capital
				set_capital_county = this.holder.capital_county
				# So titles do not share CoAs
				set_coa = this.holder.house
			}
		}
		set_de_jure_liege_title = scope:new_title
	}
	scope:new_title = {
		set_coa = $FETCH$
		set_color_from_title = $FETCH$
		set_capital_county = $FETCH$.title_capital_county
		set_de_jure_liege_title = title:e_turan
	}
}

persia_struggle_compromise_transfer_duchies_effect = {
	title:e_persia = {
		while = {
			limit = {
				any_in_de_jure_hierarchy = { 
					fp2_struggle_compromise_transfer_duchy_trigger = yes 
					any_in_de_jure_hierarchy = {
						tier = tier_county 
						title_province = {
							geographical_region = TFE_eastern_iranian_struggle_region
						}
					}
				}
			}
			every_in_de_jure_hierarchy = {
				limit = { 
					fp2_struggle_compromise_transfer_duchy_trigger = yes
					any_in_de_jure_hierarchy = {
						tier = tier_county 
						title_province = {
							geographical_region = TFE_eastern_iranian_struggle_region
						}
					}
				}
				add_to_list = transferred_duchies
				# To ensure kingdom's capitals are always inside them
				if = {
					limit = { title_capital_county = kingdom.title_capital_county }
					kingdom = {
						save_scope_as = old_kingdom
						if = {
							limit = {
								any_direct_de_jure_vassal_title = {
									NOT = { is_in_list = transferred_duchies }
									title_capital_county.kingdom = scope:old_kingdom
								}
							}
							random_direct_de_jure_vassal_title = {
								limit = {
									NOT = { is_in_list = transferred_duchies }
									title_capital_county.kingdom = scope:old_kingdom
								}
								title_capital_county = { save_scope_as = new_capital }
							}
							set_capital_county = scope:new_capital
						}
					}
				}
				if = {
					limit = { title_capital_county.holder.top_liege.primary_title.tier = tier_kingdom }
					set_de_jure_liege_title = title_capital_county.holder.top_liege.primary_title
				}
				else = { set_de_jure_liege_title = title_capital_county.holder.top_liege.capital_county.kingdom }
			}
		}
	}
	title:e_turan = {
		while = {
			limit = {
				any_in_de_jure_hierarchy = { 
					fp2_struggle_compromise_transfer_duchy_trigger = yes 
					any_in_de_jure_hierarchy = {
						tier = tier_county 
						title_province = {
							geographical_region = TFE_eastern_iranian_struggle_region
						}
					}
				}
			}
			every_in_de_jure_hierarchy = {
				limit = { 
					fp2_struggle_compromise_transfer_duchy_trigger = yes
					any_in_de_jure_hierarchy = {
						tier = tier_county 
						title_province = {
							geographical_region = TFE_eastern_iranian_struggle_region
						}
					}
				}
				add_to_list = transferred_duchies
				# To ensure kingdom's capitals are always inside them
				if = {
					limit = { title_capital_county = kingdom.title_capital_county }
					kingdom = {
						save_scope_as = old_kingdom
						if = {
							limit = {
								any_direct_de_jure_vassal_title = {
									NOT = { is_in_list = transferred_duchies }
									title_capital_county.kingdom = scope:old_kingdom
								}
							}
							random_direct_de_jure_vassal_title = {
								limit = {
									NOT = { is_in_list = transferred_duchies }
									title_capital_county.kingdom = scope:old_kingdom
								}
								title_capital_county = { save_scope_as = new_capital }
							}
							set_capital_county = scope:new_capital
						}
					}
				}
				if = {
					limit = { title_capital_county.holder.top_liege.primary_title.tier = tier_kingdom }
					set_de_jure_liege_title = title_capital_county.holder.top_liege.primary_title
				}
				else = { set_de_jure_liege_title = title_capital_county.holder.top_liege.capital_county.kingdom }
			}
		}
	}
}
# Create new de jure empires from relevant kingdoms
persia_struggle_compromise_kingdoms_to_empires_effect = {
	hidden_effect = {
		title:e_persia = {
			every_in_de_jure_hierarchy = {
				limit = {
					tier = tier_kingdom
					NOT = {
						THIS = title:k_mesopotamia
					}
					any_in_de_jure_hierarchy = {
						count >= fp2_struggle_compromise_ending_minimal_empire_size
						tier = tier_county
					}
					any_in_de_jure_hierarchy = {
						tier = tier_county 
						title_province = {
							geographical_region = TFE_eastern_iranian_struggle_region
						}
					}
				}
				fp2_struggle_compromise_create_new_empire_effect = yes
			}
		}
		title:e_turan = {
			every_in_de_jure_hierarchy = {
				limit = {
					tier = tier_kingdom
					NOT = {
						THIS = title:k_mesopotamia
					}
					any_in_de_jure_hierarchy = {
						count >= fp2_struggle_compromise_ending_minimal_empire_size
						tier = tier_county
					}
					any_in_de_jure_hierarchy = {
						tier = tier_county 
						title_province = {
							geographical_region = TFE_eastern_iranian_struggle_region
						}
					}
				}
				fp2_struggle_compromise_create_new_empire_effect = yes
			}
		}
	}
}

# Distribute remaining Kingdoms to neighboring empires
persia_struggle_compromise_distribute_kingdoms_to_neighbouring_empires_effect = {
	hidden_effect = {
		title:e_persia = {
			every_in_de_jure_hierarchy = {
				limit = { 
					tier = tier_kingdom 
					NOT = {
						THIS = title:k_mesopotamia
					}
					any_in_de_jure_hierarchy = {
						tier = tier_county 
						title_province = {
							geographical_region = TFE_eastern_iranian_struggle_region
						}
					}
					
				}
				save_scope_as = kingdom_to_distribute
				random_title_to_title_neighboring_and_across_water_kingdom = {
					limit = { # Prefer land borders
						any_this_title_or_de_jure_above = { is_in_list = new_empire_list }
						any_title_to_title_neighboring_kingdom = { this = scope:kingdom_to_distribute }
					}
					alternative_limit = { # Then sea borders
						any_this_title_or_de_jure_above = { is_in_list = new_empire_list }
					}
					weight = {
						modifier = { # Value one from Iberia for small empire
							add = {
								value = 2
								subtract = {
									value = 0
									every_in_de_jure_hierarchy = {
										add = 0.25
									}
								}
								min = 0
							}
							any_in_de_jure_hierarchy = {
			 					tier = tier_county
								title_province = { geographical_region = TFE_eastern_iranian_struggle_region }
							}
						}
						modifier = { # Value smaller empire
							add = {
								value = 2
								subtract = {
									value = 0
									every_in_de_jure_hierarchy = {
										limit = { tier = tier_kingdom }
										add = 0.5
									}
								}
								min = 0
							}
						}
						modifier = { # Value most shared borders
							add = {
								value = 0
								every_in_de_jure_hierarchy = {
									limit = {
										tier = tier_county
										any_neighboring_county = { target_is_de_jure_liege_or_above = scope:kingdom_to_distribute }
									}
									add = 1
								}
								min = 0
							}
						}
					}
					add_to_list = transferred_kingdoms
					scope:kingdom_to_distribute = { set_de_jure_liege_title = prev.de_jure_liege }
				}
			}
		}
		title:e_turan = {
			every_in_de_jure_hierarchy = {
				limit = { 
					tier = tier_kingdom 
					NOT = {
						THIS = title:k_mesopotamia
					}
					any_in_de_jure_hierarchy = {
						tier = tier_county 
						title_province = {
							geographical_region = TFE_eastern_iranian_struggle_region
						}
					}
					
				}
				save_scope_as = kingdom_to_distribute
				random_title_to_title_neighboring_and_across_water_kingdom = {
					limit = { # Prefer land borders
						any_this_title_or_de_jure_above = { is_in_list = new_empire_list }
						any_title_to_title_neighboring_kingdom = { this = scope:kingdom_to_distribute }
					}
					alternative_limit = { # Then sea borders
						any_this_title_or_de_jure_above = { is_in_list = new_empire_list }
					}
					weight = {
						modifier = { # Value one from Iberia for small empire
							add = {
								value = 2
								subtract = {
									value = 0
									every_in_de_jure_hierarchy = {
										add = 0.25
									}
								}
								min = 0
							}
							any_in_de_jure_hierarchy = {
			 					tier = tier_county
								title_province = { geographical_region = TFE_eastern_iranian_struggle_region }
							}
						}
						modifier = { # Value smaller empire
							add = {
								value = 2
								subtract = {
									value = 0
									every_in_de_jure_hierarchy = {
										limit = { tier = tier_kingdom }
										add = 0.5
									}
								}
								min = 0
							}
						}
						modifier = { # Value most shared borders
							add = {
								value = 0
								every_in_de_jure_hierarchy = {
									limit = {
										tier = tier_county
										any_neighboring_county = { target_is_de_jure_liege_or_above = scope:kingdom_to_distribute }
									}
									add = 1
								}
								min = 0
							}
						}
					}
					add_to_list = transferred_kingdoms
					scope:kingdom_to_distribute = { set_de_jure_liege_title = prev.de_jure_liege }
				}
			}
		}
	}
}

persia_struggle_compromise_distribute_the_actual_titles = {
	struggle:eastern_iranian_struggle = {
		create_title_and_vassal_change = {
			type = granted
			save_scope_as = change
		}
		every_involved_ruler = {
			limit = {
				save_temporary_scope_as = new_owner_temp
				primary_title = {
					tier = tier_duchy
					exists = de_jure_liege
					de_jure_liege = { tfe_struggle_ending_compromise_create_title_trigger_persia = yes }
				}
			}
			save_scope_as = new_owner
			primary_title.de_jure_liege = {
				change_title_holder = {
					holder = scope:new_owner
					change = scope:change
				}
				add_to_list = assigned_title
			}
		}
		every_involved_ruler = {
			limit = {
				save_temporary_scope_as = new_owner_temp
				primary_title = {
					tier = tier_kingdom
					NOT = {
						THIS = title:k_mesopotamia
					}
					exists = de_jure_liege
					de_jure_liege = { tfe_struggle_ending_compromise_create_title_trigger_persia = yes }
				}
			}
			save_scope_as = new_owner
			primary_title.de_jure_liege = {
				change_title_holder = {
					holder = scope:new_owner
					change = scope:change
				}
				add_to_list = assigned_title
			}
		}
		resolve_title_and_vassal_change = scope:change
	}
}

persia_struggle_compromise_truce_effect = {
	hidden_effect = {
		if = {
			limit = {
				struggle:eastern_iranian_struggle = {
					any_involved_ruler = {
						count > 1
						is_independent_ruler = yes
						primary_title = { is_mercenary_company = no }
					}
				}
			}
			struggle:eastern_iranian_struggle = {
				every_involved_ruler = {
					limit = {
						is_independent_ruler = yes
						primary_title = { is_mercenary_company = no }
					}
					add_to_list = eastern_iranian_struggle_compromise_truce_list
				}
			}
			while = {
				limit = {
					any_in_list = {
						list = eastern_iranian_struggle_compromise_truce_list
						NOT = { has_variable = fp2_struggle_compromise_flag }
					}
				}
				ordered_in_list = {
					list = eastern_iranian_struggle_compromise_truce_list
					limit = {
						NOT = { has_variable = fp2_struggle_compromise_flag }
					}
					order_by = realm_size
					save_scope_as = realm_scope
					set_variable = fp2_struggle_compromise_flag # variable ensures truces are set only once per couple
				}
				every_in_list = {
					list = eastern_iranian_struggle_compromise_truce_list
					limit = {
						NOR = {
							has_variable = fp2_struggle_compromise_flag
							this = scope:realm_scope
							has_truce = scope:realm_scope
						}
					}
					add_truce_both_ways = {
						character = scope:realm_scope
						days = 3650
						name = TRUCE_TFE_COMPROMISE_PERSIA
					}
				}
			}
			every_in_list = {
				list = eastern_iranian_struggle_compromise_truce_list
				remove_variable = fp2_struggle_compromise_flag
			}
		}
	}
}
	}
}

"common/scripted_triggers/TFE_eastern_iranian_struggle_triggers.txt" = {
	{
# Checks no more than half of Eastern Iranian region is owned by another
struggle_ending_other_percent_eastern_iranian_trigger = {
	struggle:eastern_iranian_struggle = {
		NOT = {
			any_involved_ruler = {
				exists = primary_title # Max figured out that is_independent_ruler causes errors if you are unlanded
				NOT = { this = root }
				is_independent_ruler = yes
				primary_title = { is_mercenary_company = no }
				any_county_in_region = {
					region = TFE_eastern_iranian_struggle_region
					percent > fp2_struggle_compromise_involved_percent_decimal_value
					holder.top_liege = prev
				}
			}
		}
	}
}
	}

	{
tfe_struggle_ending_other_percent_persia_trigger = {
	struggle:eastern_iranian_struggle = {
		NOT = {
			any_involved_ruler = {
				exists = primary_title # Max figured out that is_independent_ruler causes errors if you are unlanded
				NOT = { this = root }
				is_independent_ruler = yes
				primary_title = { is_mercenary_company = no }
				any_county_in_region = {
					region = TFE_eastern_iranian_struggle_region
					percent > fp2_struggle_compromise_involved_percent_decimal_value
					holder.top_liege = prev
				}
			}
		}
	}
}
	}

	{
tfe_character_any_involvement_eastern_iranian_struggle_trigger = {
	OR = {
		tfe_character_involved_in_eastern_iranian_struggle_trigger = yes
		tfe_character_interloper_in_struggle_trigger_persia = yes
	}
}

tfe_character_involved_in_eastern_iranian_struggle_trigger = {
	any_character_struggle = {
		involvement = involved
		is_struggle_type = eastern_iranian_struggle
	}
}

tfe_character_interloper_in_struggle_trigger_persia = {
	any_character_struggle = {
		involvement = interloper
		is_struggle_type = eastern_iranian_struggle
	}
}
	}
}

"events/north_indian_struggle_events/tfe_north_indian_struggle_events.txt" = {
	{
					#############################
					# Current Phase: EXPANSION
					#############################
					if = {
						limit = { root = { is_struggle_phase = struggle_TFE_eastern_iranian_phase_expansion } }
						random_list = {
							# Working towards hostility
							# It should be for characters looking for direct conflicts and domination, with the will and ability to expand their realms
							100 = {
								# Odds modifiers
								north_indian_struggle_set_ai_agenda_common_modifiers = {
									PHASE = hostility
									INTENT = escalation
								}

								# Apply effects
								north_indian_struggle_apply_ai_agenda_effect = {
									INTENT = escalation
								}
							}
							# Working towards development
							100 = {
								# Odds modifiers
								north_indian_struggle_set_ai_agenda_common_modifiers = {
									PHASE = development
									INTENT = deescalation
								}

								# Apply effects
								north_indian_struggle_apply_ai_agenda_effect = {
									INTENT = deescalation
								}
							}
						}
					}

					#############################
					# Current Phase: DEVELOPMENT
					#############################
					if = {
						limit = { root = { is_struggle_phase = struggle_TFE_eastern_iranian_phase_development } }
						random_list = {
							# Working towards compromise
							# It should be for characters looking for direct conflicts and domination, with the will and ability to expand their realms
							100 = {
								# Odds modifiers
								north_indian_struggle_set_ai_agenda_common_modifiers = {
									PHASE = compromise
									INTENT = escalation
								}

								# Apply effects
								north_indian_struggle_apply_ai_agenda_effect = {
									INTENT = escalation
								}
							}
						}
					}
					#############################
					# Current Phase: Hostility
					#############################
					if = {
						limit = { root = { is_struggle_phase = struggle_TFE_eastern_iranian_phase_hostility } }
						random_list = {
							# Working towards Compromise
							100 = {
								# Odds modifiers
								north_indian_struggle_set_ai_agenda_common_modifiers = {
									PHASE = compromise
									INTENT = deescalation
								}

								# Apply effects
								north_indian_struggle_apply_ai_agenda_effect = {
									INTENT = deescalation
								}
							}
						}
					}

					#############################
					# Current Phase: Compromise
					#############################
					if = {
						limit = { root = { is_struggle_phase = struggle_TFE_eastern_iranian_phase_compromise } }
						random_list = {
							# Working towards expansion
							100 = {
								# Odds modifiers
								north_indian_struggle_set_ai_agenda_common_modifiers = {
									PHASE = expansion
									INTENT = escalation
								}

								# Apply effects
								north_indian_struggle_apply_ai_agenda_effect = {
									INTENT = escalation
								}
							}
						}
					}
	}

	{
			#############################
			# Current Phase: EXPANSION
			#############################
			if = {
				limit = { any_character_struggle = { AND = { is_struggle_type = north_indian_struggle is_struggle_phase = struggle_TFE_eastern_iranian_phase_expansion } } }
				random_list = {
					# Working towards hostility
					# It should be for characters looking for direct conflicts and domination, with the will and ability to expand their realms
					100 = {
						# Odds modifiers
						north_indian_struggle_set_ai_agenda_common_modifiers = {
							PHASE = hostility
							INTENT = escalation
						}

						# Apply effects
						north_indian_struggle_apply_ai_agenda_effect = {
							INTENT = escalation
						}
					}
					# Working towards development
					100 = {
						# Odds modifiers
						north_indian_struggle_set_ai_agenda_common_modifiers = {
							PHASE = development
							INTENT = deescalation
						}

						# Apply effects
						north_indian_struggle_apply_ai_agenda_effect = {
							INTENT = deescalation
						}
					}
				}
			}

			#############################
			# Current Phase: DEVELOPMENT
			#############################
			if = {
				limit = { any_character_struggle = { AND = { is_struggle_type = north_indian_struggle is_struggle_phase = struggle_TFE_eastern_iranian_phase_development } } }
				random_list = {
					# Working towards compromise
					# It should be for characters looking for direct conflicts and domination, with the will and ability to expand their realms
					100 = {
						# Odds modifiers
						north_indian_struggle_set_ai_agenda_common_modifiers = {
							PHASE = compromise
							INTENT = escalation
						}

						# Apply effects
						north_indian_struggle_apply_ai_agenda_effect = {
							INTENT = escalation
						}
					}
				}
			}
			#############################
			# Current Phase: Hostility
			#############################
			if = {
				limit = { any_character_struggle = { AND = { is_struggle_type = north_indian_struggle is_struggle_phase = struggle_TFE_eastern_iranian_phase_hostility } } }
				random_list = {
					# Working towards Compromise
					100 = {
						# Odds modifiers
						north_indian_struggle_set_ai_agenda_common_modifiers = {
							PHASE = compromise
							INTENT = deescalation
						}

						# Apply effects
						north_indian_struggle_apply_ai_agenda_effect = {
							INTENT = deescalation
						}
					}
				}
			}

			#############################
			# Current Phase: Compromise
			#############################
			if = {
				limit = { any_character_struggle = { AND = { is_struggle_type = north_indian_struggle is_struggle_phase = struggle_TFE_eastern_iranian_phase_compromise } } }
				random_list = {
					# Working towards expansion
					100 = {
						# Odds modifiers
						north_indian_struggle_set_ai_agenda_common_modifiers = {
							PHASE = expansion
							INTENT = escalation
						}

						# Apply effects
						north_indian_struggle_apply_ai_agenda_effect = {
							INTENT = escalation
						}
					}
				}
			}
	}
}

"gfx/portraits/portrait_modifiers/06_clothes_special.txt" = {
	{
    baudouin = {
        dna_modifiers = {
            accessory = {
                mode = add 
                gene = special_headgear_face_mask
                template = face_mask
                range = { 0 1 }
            }
        }
        weight = {
            base = 0 
            modifier = {
                add = 1000
				exists = character:223523
                this = character:223523
            }
        }
    }
	}
}

"localization/english/names/TFE_names_error_log_l_english.yml" = {
	{
 NÃ¤cken:0 "NÃ¤cken"
	}
}

"common/legends/chronicles/00_chronicles.txt" = {
	{
			triggered_desc = {
				trigger = {
					scope:ancestor=character:waegmunding_2
				}
				desc = TFE_legend_beowulf
			}
	}
	{
			triggered_desc = {
				trigger = {
					scope:ancestor=character:waegmunding_2
				}
				desc = TFE_legend_beowulf_desc
			}
	}

	{
			triggered_desc = {
				trigger = {
					scope:ancestor=character:snakeyboy_0
				}
				desc = TFE_legend_haftvad
			}
	}
	{
			triggered_desc = {
				trigger = {
					scope:ancestor=character:snakeyboy_0
				}
				desc = TFE_legend_haftvad_desc
			}
	}
}

"events/artifacts/historical_artifacts_events.txt" = {
	{
		if = {
			limit = {
				current_date >= 476.1.1
				exists = character:180624
				character:180624 = { is_alive = yes }
			}
			character:180624={
				create_artifact_peroz_pearl_effect = { OWNER = character:180624 }
			}
		}
	}
	{
		### Crown of Justinian
		if = {
			limit = {
				has_dlc_feature = royal_court
				exists = title:e_byzantium.holder
				current_date >= 550.1.15
			}
			title:e_byzantium.holder = {
				create_artifact_pedestal_justinian_effect = { OWNER = this }
			}
		}
	}
	{
		### Throne of Scone (featuring Stone)
		if = {
			limit = {
				has_dlc_feature = royal_court
				exists = title:k_scotland.holder
				current_date > 500.1.1
			}
			title:k_scotland.holder = {
				create_artifact_throne_scone_effect = { OWNER = this }
			}
		}
	}
	{
		### Throne of Charlemagne
		if = {
			limit = {
				has_dlc_feature = royal_court
				exists = title:e_hre.holder
				current_date >= 800.1.15
			}
			title:e_hre.holder = {
				create_artifact_throne_charlemagne_effect = { OWNER = this }
			}
		}
	}
	{
		### Pentapyrgion
		if = {
			limit = {
				has_dlc_feature = royal_court
				exists = title:e_byzantium.holder
				current_date >= 829.1.1
			}
			title:e_byzantium.holder = {
				create_artifact_sculpture_cabinet_pentapyrgion_effect = { OWNER = this }
			}
		}
	}

	# No e_rajastan in TFE as of the 'After The Pharaohs' update.
	{
			title:e_rajastan = {
				random_in_de_jure_hierarchy = {
					limit = { tier = tier_county }
					holder = {
						create_artifact_charmadhal_effect = { OWNER = THIS }
					}
				}
			}
	}
}

"common/decisions/TFE_major_germanic_decisions.txt" = {
	{
form_the_hre_TFE = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_emperor_apotheosis.dds"
	}
	decision_group_type = major
	
	desc = form_the_hre_TFE_desc
	selection_tooltip = form_the_hre_TFE_tooltip

	ai_check_interval = 250

	is_shown = {
		is_ruler = yes
		is_landed_or_landless_administrative = yes
		highest_held_title_tier >= tier_kingdom
		religion = religion:christianity_religion
		NOT = {  #Can only do it once.
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:form_the_hre_TFE
			}
		}
		AND = {
			title:e_western_roman_empire = {
				is_title_created = no
			}
			title:e_roman_empire = {
				is_title_created = no
			}
		}
		capital_county.title_province = {
			geographical_region = world_europe_west
		}
		NOT = {
			has_title = title:e_byzantium
		}
		NOT = {
			culture = {
				has_cultural_pillar = heritage_latin
			}
		}
	}

	is_valid = {
		is_independent_ruler = yes
		highest_held_title_tier >= tier_kingdom
		religion = religion:christianity_religion
		realm_size >= 60
		completely_controls = title:c_ravenna
		custom_description = {
			text = form_the_hre_TFE_trigger_01
			trigger_if = {
				limit = {
					title:e_byzantium = {
						is_title_created = yes
					}
				}
				title:e_byzantium.holder = {
					any_realm_county = {
						count <= form_hre_TFE_county_trigger
						title_province = { geographical_region = form_the_hre_TFE_ere_region }
					}
				}
			}
		}
		custom_description = {
			text = form_the_hre_TFE_trigger_02
			NOT = {
				any_independent_ruler = {
					AND = {
						is_landed_or_landless_administrative = yes
						capital_county.title_province ?= {
							geographical_region = world_europe_west
						}
						highest_held_title_tier >= tier_kingdom
						current_military_strength > form_hre_TFE_strength_trigger
					}
				}
			}
		}
		
	}

	is_valid_showing_failures_only = {
		is_imprisoned = no
		is_independent_ruler = yes
	}

	effect = {
		give_nickname = nick_the_great
		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:form_the_hre_TFE
		}

		show_as_tooltip = {
			restore_holy_roman_empire_decision_scripted_effect = yes
		}
		save_scope_as = founder
		faith.religious_head = { save_scope_as = founder_hof }
		if = {
			limit = {
				faith.religious_head = { is_landed = yes }
			}
			faith.religious_head.capital_province = { save_scope_as = ceremony_locale }
		}
		else = {
			capital_province = { save_scope_as = ceremony_locale }
		}
		trigger_event = {
			id = tfe_title_event.0010
		}
		#Notify other players.
		every_player = {
			limit = {
				NOT = { this = root }
				is_within_diplo_range = { CHARACTER = root }
			}
			trigger_event = tfe_title_event.0011
		}
		if = {
			limit = {
				is_ai = no
				NOT = { exists = global_var:restore_holy_roman_empire_decision  }
			}
			set_global_variable = {
				name = restore_holy_roman_empire_decision
				value = root
			}
		}
		# Assign Dynamic Prince-Electors
		hidden_effect = {
			if = {
				limit = { has_global_variable_list = hre_elector_list }
				clear_global_variable_list = hre_elector_list
			}
			while = {
				count = 7
				random_vassal = {
					limit = {
						capital_province.empire = title:e_hre # must be de-jure vassal of empire
						OR = { # prince-bishopric or duchy
							AND = {
								government_has_flag = government_is_theocracy
								primary_title.tier >= tier_county
							}
							primary_title.tier >= tier_duchy
						}
						NOT = { # not already selected
							is_target_in_global_variable_list = {
								name = hre_elector_list
								target = primary_title
							}
						}
					}
					weight = {
						modifier = { # major vassals heavily weighted
							factor = 10
							is_powerful_vassal = yes
						}
						modifier = { # same culture as emperor preferred
							factor = 4
							culture = root.culture
						}
						modifier = { # we don't mind going outside Germania, but prefer it
							factor = 1.5
							trigger = { exists = primary_title.title_province }
							primary_title.title_province.barony = {
								OR = {
									target_is_de_jure_liege_or_above = title:k_bavaria
									target_is_de_jure_liege_or_above = title:k_bohemia
									target_is_de_jure_liege_or_above = title:k_east_francia
									target_is_de_jure_liege_or_above = title:k_frisia
									target_is_de_jure_liege_or_above = title:k_lotharingia
									target_is_de_jure_liege_or_above = title:k_pomerania
								}
							}
						}
						modifier = { # we want at least 3 theocracies ideally
							factor = 10
							any_in_global_list = {
								variable = hre_elector_list
								count < 3
								holder = { government_has_flag = government_is_theocracy }
							}
							government_has_flag = government_is_theocracy
						}
						modifier = { # 3 is enough theocracies unless we can't find feudal
							factor = 0.1
							any_in_global_list = {
								variable = hre_elector_list
								count >= 3
								holder = { government_has_flag = government_is_theocracy }
							}
							government_has_flag = government_is_theocracy
						}
					}
					add_to_global_variable_list = {
						name = hre_elector_list
						target = primary_title
					}
				}
			}
			hre_elector_list_save_effect = yes # saves list scopes to title as variables for tooltip
		}
		
	}

	ai_potential = {
		always = yes
	}

	cost = {
		gold = 250
	}

	ai_will_do = {
		base = 100
	}
}
	}

	# No d_carthaginensis in TFE as of the 'After The Pharaohs' update.
	{
			title:d_carthaginensis = {
				set_de_jure_liege_title = title:k_visigoths
			}
	}

	# No d_tarraconensis in TFE as of the 'After The Pharaohs' update.
	{
			title:d_tarraconensis = {
				set_de_jure_liege_title = title:k_visigoths
			}
	}
}


"common/decisions/TFE_major_celtic_decisions.txt" = {
	# No k_britanny in TFE as of the 'After The Pharaohs' update.
	{
			title:k_britanny = {
				set_de_jure_liege_title = title:e_gaul
			}
	}
	{
			title:d_brittany = {
				set_de_jure_liege_title = title:k_britanny
			}
	}
}


"gfx/coat_of_arms/colored_emblems/50_coa_designer_emblems.txt" = {
	{
ce_african_cross_NU.dds = { colors = 1 category = crosses_and_knots }
	}
}

"events/dlc/fp1/fp1_scandinavian_adventurer_events.txt" = {
	{
fp1_scandinavian_adventurers.0012 = {
	hidden = yes
	scope = none

	trigger = {
		# DLC check.
		has_fp1_dlc_trigger = yes
		# No point in later starts.
		game_start_date = 867.1.1

		OR = {
			exists = character:242
			exists = character:163119
		}
		
	}

	immediate = {
		# Nab Rollo.
		scandi_adventurers_grab_famous_character_effect = { CHARACTER = character:242 }
		# Nab Ubbe.
		scandi_adventurers_grab_famous_character_effect = { CHARACTER = character:163119 }
	}
}
	}
}

"events/dlc/fp3/fp3_struggle_events.txt" = {
	{
		character:34010	= { save_scope_as = Mutawakkil }	# Stabbed by guards
	}
	{
		character:34012	= { save_scope_as = Muntasir }		# Poisoned probably
	}
	{
		character:34013 = { save_scope_as = Mustain }		# Betrayed by bookmark character (?) (Note: this char is listed as 3933 in some other files for some reason)
	}
	{
		character:34014	= { save_scope_as = Mostaza }		# Bookmark ruler
	}
	{
		character:34014 = { save_scope_as = Mostaza }		# Bookmark ruler
	}
	{
					triggered_desc = {
						trigger = {
							any_character_struggle = { is_struggle_type = persian_struggle }
							has_title = character:34014.primary_title
						}
						desc = fp3_struggle.0051.b
					}
	}
}


"common/culture/creation_names/00_names.txt" = {
	# TFE doesn't have Iceland on the map
	{
icelandic = {
	trigger = {
		OR = {
			capital_county = {
				title:d_iceland = {
					is_de_jure_liege_or_above_target = prev
				}
			}
			has_primary_title = title:d_iceland
		}
		culture = { has_cultural_pillar = heritage_north_germanic }
		any_sub_realm_county = {
			culture = { has_cultural_pillar = heritage_north_germanic }
			duchy = title:d_iceland
		}
	}
}
	}
}

"common/scripted_effects/06_dlc_ce1_legend_effects.txt" = {
	{
	else_if = { 
		limit = {
			legend_property:ancestor ?= character:snakeyboy_0
		}
		set_global_variable = {
			name = haftvad_legend
			value = yes
		}
	}
	}

	{
	else_if = { 
		limit = {
			legend_property:ancestor ?= character:waegmunding_2
		}
		set_global_variable = {
			name = beowulf_legend
			value = yes
		}
	}
	}

	# No d_iceland in TFE.
	{
							root.primary_title = title:d_iceland
	}

	# No c_muluvagil in TFE as of the 'After The Pharaohs' update
	{
							root.primary_title = title:c_muluvagil
	}

	# TFE uses hun instead of hunnic.
	{
		999 = {
			trigger = {
				OR = {
					root.culture = {
						OR = {
							culture_overlaps_geographical_region = world_steppe
							culture_overlaps_geographical_region = custom_carpathia
						}
					}
					culture = { has_cultural_pillar = heritage_turkic }
					culture = { has_cultural_pillar = heritage_mongolic }
					culture = { has_cultural_pillar = heritage_magyar }
				}
				NOT = { culture = culture:hunnic }
			}
			set_variable = {
				name = original_region
				value = geographical_region:world_steppe_west
				years = 1
			}
			culture:hunnic = { save_scope_as = ancient_culture }
		}
	}

	# TFE uses heritage_hellenistic instead of heritage_ancient_greek.
	{
					culture = { has_cultural_pillar = heritage_ancient_greek }
	}
}

"events/single_combat_events.txt" = {
	{
		# Historical
		dynasty = dynasty:1055
		house = house:house_british_isles_wessex
		# Vanity: because they're long.
		dynasty = dynasty:vanity_riedinger
		dynasty = dynasty:vanity_kaltsogiannis
		# Vanity: because their punctuation screws things up.
		dynasty = dynasty:vanity_bjarnehed
		dynasty = dynasty:vanity_daflos
		dynasty = dynasty:vanity_welch
		dynasty = dynasty:vanity_opara
		dynasty = dynasty:vanity_beaumont
	}
}

"events/dlc/fp1/fp1_yearly_events.txt" = {
	# No d_iceland in TFE.
	{
			#Averted giant holmgang that would have sunk Iceland.
			166 = {
				trigger = {
					#Must not have any counties in Iceland, as the news'd travel otherwise.
					NOT = {
						any_realm_de_jure_duchy = { this = title:d_iceland }
					}
				}
				save_scope_value_as = {
					name = lie_nature
					value = flag:kept_iceland_afloat
				}
			}
	}
}

"common/scripted_effects/00_accolades_scripted_effects.txt" = {
	# No d_iceland in TFE.
	{
				any_culture_duchy = {
					NOT = {
						this = title:d_iceland
					}
				}
	}
}

"common/scripted_triggers/00_hunt_triggers.txt" = {
	# No d_iceland in TFE.
	{
					duchy = title:d_iceland # Not native
	}
}

"common/scripted_triggers/00_cultural_heritage_triggers.txt" = {
	# heritage_north_african was not defined as of TFE's 'After the Pharaohs' update
	{
			has_cultural_pillar = heritage_north_african
	}
}

"common/coat_of_arms/template_lists/coa_templates.txt" = {
	# No e_rajastan in TFE as of the 'After The Pharaohs' update
	{
							this = title:e_rajastan
	}
}

"common/customizable_localization/06_ce1_epidemics_custom_loc.txt" = {
	# Character easteregg_veronica_pazos seems to be missing from TFE.
	{
	text = {
		trigger = {
			exists = character:easteregg_veronica_pazos
			this = character:easteregg_veronica_pazos
		}
		localization_key = third_impact
	}
	}
}


"common/customizable_localization/00_destination_custom_loc.txt" = {
	# TFE uses language_kemetic instead of language_egyptian as of the 'After The Pharaohs' update
	{
	text = {
		trigger = {
			culture = { has_cultural_pillar = language_egyptian }
		}
		localization_key = DestinationInspiredLanguageDescriptorEgyptian
	}
	}
}


"common/decisions/80_major_decisions_south_asia.txt" = {
	# No e_rajastan in TFE as of the 'After The Pharaohs' update
	{
		completely_controls = title:e_rajastan
	}
}


"common/scripted_triggers/00_coa_triggers.txt" = {
	# No e_rajastan in TFE as of the 'After The Pharaohs' update
	{
				this = title:e_rajastan
	}
}


"common/scripted_effects/00_decisions_effects.txt" = {
	# No e_rajastan in TFE as of the 'After The Pharaohs' update
	{
	title:e_rajastan = { add_to_list = indian_empire }
	}

	{
		if = {
			limit = { has_title = title:e_rajastan }
			destroy_title = title:e_rajastan
		}
	}

	# No k_sorbia in TFE as of the 'After The Pharaohs' update
	{
	title:k_sorbia = { add_to_list = west_slavic_kingdoms }
	}

	{
	# If Saxony has been created, shift everything back into Polabia
	if = {
		limit = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:flag_formed_saxony
			}
		}
		title:k_saxony = {
			every_in_de_jure_hierarchy = {
				limit = { tier = tier_duchy }
				set_de_jure_liege_title = title:k_sorbia
			}
		}
	}
	}
}


"events/dlc/ep3/ep3_decisions_events.txt" = {
	# No d_laamp_asen in TFE as of the 'After The Pharaohs' update
	{
			modifier = { # Asen and Peter always try to go to war with you
				add = 1000
				primary_title = title:d_laamp_asen
			}
	}
	{
			modifier = { # Asen and Peter always try to go to war with you
				factor = 0
				primary_title = title:d_laamp_asen
			}
	}
	{
			modifier = { # Asen and Peter always try to go to war with you
				factor = 0
				primary_title = title:d_laamp_asen
			}
	}
}

"common/coat_of_arms/dynamic_definitions/00_norse_coas.txt" = {
	# No d_iceland in TFE.
	{
d_iceland = {
	item = {
		trigger = {
			coa_switch_to_norse_trigger = yes
		}
		coat_of_arms = d_iceland_norse
	}
}
c_vestisland = {
	item = {
		trigger = {
			coa_switch_to_norse_trigger = yes
		}
		coat_of_arms = c_vestisland_norse
	}	
}
c_nordrland = {
	item = {
		trigger = {
			coa_switch_to_norse_trigger = yes
		}
		coat_of_arms = c_nordrland_norse
	}
}
c_austisland = {
	item = {
		trigger = {
			coa_switch_to_norse_trigger = yes
		}
		coat_of_arms = c_austisland_norse
	}
}
c_sudurland = {
	item = {
		trigger = {
			coa_switch_to_norse_trigger = yes
		}
		coat_of_arms = c_sudurland_norse
	}	
}
	}
}

"map_data/geographical_regions/geographical_region.txt" = {
	# No d_shamir in TFE as of the 'After The Pharaohs' update
	{
		d_shamir
	}
}

"history/provinces/k_mesopotamia.txt" = {
	# Anachronistic
	{
	410.1.1 = {
		special_building_slot = palace_khawarnaq
		special_building = palace_khawarnaq
	}
	}
}

"common/decisions/dlc_decisions\ep_3\06_ep3_separatist_uprising_decision.txt" = {
	# No d_laamp_asen in TFE as of the 'After The Pharaohs' update
	{
		modifier = { # Asen and Peter always try to do this
			add = 1000
			primary_title = title:d_laamp_asen
		}
	}
}

"common/scripted_effects/00_historical_characters_scripted_effects.txt" = {
	# No Iceland in TFE as of the 'After The Pharaohs' update
	{
	if = { # Gunnlaug Ormstunga
		limit = {
			current_year >= 1000
			current_year <= 1006
			NOT = { exists = global_var:hchar_gunnlaug_ormstunga }
		}
		set_global_variable = { name = hchar_gunnlaug_ormstunga value = yes }
		title:b_reykjavik = {
			save_scope_as = birth_location
			create_character = {
				age = 20
				name = "Gunnlaug"
				dynasty_house = house:house_ormstunga
				gender_female_chance = 0
				random_traits = no
				location = scope:birth_location.title_province
				faith = scope:birth_location.title_province.faith
				culture = scope:birth_location.title_province.culture
				trait = education_diplomacy_2
				trait = poet
				trait = deceitful
				trait = lustful
				trait = ambitious
				trait = viking
				diplomacy = { min_template_high_skill max_template_high_skill }
				martial = { min_template_high_skill max_template_high_skill }
				stewardship = { min_template_low_skill max_template_low_skill }
				intrigue = { min_template_high_skill max_template_high_skill }
				learning = { min_template_high_skill max_template_high_skill }
				prowess = { min_template_high_skill max_template_high_skill }
				save_scope_as = historical_character
			}
			scope:historical_character ?= {
				save_scope_as = explorer
				historical_character_finalization_effect = yes
				set_variable = gunnlaug_ormstunga
			}
			if = { limit = { has_variable = gunnlaug_ormstunga } } # Error suppression
			spawn_historical_characters_boilerplate_effect = yes
		}
	}
	}

	{
	if = { # Snorri Sturluson
		limit = {
			current_year >= 1199
			current_year <= 1205
			NOT = { exists = global_var:hchar_snorri_sturluson }
		}
		set_global_variable = { name = hchar_snorri_sturluson value = yes }
		title:b_reykjavik = {
			save_scope_as = birth_location
			create_character = {
				age = 20
				name = "Snorri"
				dynasty_house = house:house_sturluson
				gender_female_chance = 0
				random_traits = no
				location = scope:birth_location.title_province
				faith = scope:birth_location.title_province.faith
				culture = scope:birth_location.title_province.culture
				trait = education_learning_3
				trait = ambitious
				trait = diligent
				trait = gregarious
				trait = poet
				diplomacy = { min_template_high_skill max_template_high_skill }
				martial = { min_template_low_skill max_template_low_skill }
				stewardship = { min_template_high_skill max_template_high_skill }
				intrigue = { min_template_high_skill max_template_high_skill }
				learning = { min_template_high_skill max_template_high_skill }
				prowess = { min_template_low_skill max_template_low_skill }
				save_scope_as = historical_character
			}
			scope:historical_character ?= {
				historical_character_finalization_effect = yes
				set_variable = snorri_sturluson
				save_scope_as = major
				create_inspiration = book_inspiration
			}
			if = { limit = { has_variable = snorri_sturluson } } # Error suppression
			spawn_historical_characters_boilerplate_effect = yes
		}
	}
	}

	{
	if = { # Egil Skallagrímsson
		limit = {
			current_year >= 930
			current_year <= 936
			NOT = { exists = global_var:hchar_egil_skallagrimrsson }
		}
		set_global_variable = { name = hchar_egil_skallagrimrsson value = yes }
		title:b_olafsvik = {
			save_scope_as = birth_location
			create_character = {
				age = 20
				name = "Egil"
				dynasty_house = house:house_skallagrimsson
				gender_female_chance = 0
				random_traits = no
				location = scope:birth_location.title_province
				faith = scope:birth_location.title_province.faith
				culture = scope:birth_location.title_province.culture
				trait = education_diplomacy_2
				trait = poet
				trait = gregarious
				trait = wrathful
				trait = brave
				trait = berserker
				trait = viking
				diplomacy = { min_template_high_skill max_template_high_skill }
				martial = { min_template_high_skill max_template_high_skill }
				stewardship = { min_template_low_skill max_template_low_skill }
				intrigue = { min_template_high_skill max_template_high_skill }
				learning = { min_template_high_skill max_template_high_skill }
				prowess = { min_template_high_skill max_template_high_skill }
				save_scope_as = historical_character
			}
			scope:historical_character ?= {
				historical_character_finalization_effect = yes
				set_variable = egil_skallagrimrsson
				save_scope_as = major
				change_current_weight = 75
			}
			if = { limit = { has_variable = egil_skallagrimrsson } } # Error suppression
			spawn_historical_characters_boilerplate_effect = yes
		}
	}
	}

	{
	if = { # Þorbjörg the Seeress
		limit = {
			current_year >= 970
			current_year <= 976
			NOT = { exists = global_var:hchar_torbjorg_the_seeress }
		}
		set_global_variable = { name = hchar_torbjorg_the_seeress value = yes }
		title:b_reydarfjall= {
			save_scope_as = birth_location
			create_character = {
				age = 20
				name = "T_orbjO_rg"
				dynasty = none
				gender_female_chance = 100
				random_traits = no
				location = scope:birth_location.title_province
				faith = faith:norse_pagan
				culture = scope:birth_location.title_province.culture
				trait = education_learning_3
				trait = patient
				trait = zealous
				trait = humble
				trait = lifestyle_mystic
				diplomacy = { min_template_high_skill max_template_high_skill }
				martial = { min_template_low_skill max_template_low_skill }
				stewardship = { min_template_high_skill max_template_high_skill }
				intrigue = { min_template_high_skill max_template_high_skill }
				learning = { min_template_high_skill max_template_high_skill }
				prowess = { min_template_low_skill max_template_low_skill }
				save_scope_as = historical_character
			}
			scope:historical_character ?= {
				historical_character_finalization_effect = yes
				set_variable = torbjorg_the_seeress
				hidden_effect = {
					add_trait_xp = {
						trait = lifestyle_mystic
						value = 100
					}
				}
				give_nickname = nick_the_seeress
				add_piety = 5000
				add_character_flag = ai_will_not_convert
			}
			if = { limit = { has_variable = torbjorg_the_seeress } } # Error suppression
			spawn_historical_characters_boilerplate_effect = yes
		}
	}
	}
}

"common/coat_of_arms/dynamic_definitions/roman_coa_ere.txt" = {
	# d_phoenicia not in TFE as of the 'After The Pharaohs' update
	{
d_phoenicia = { item = { trigger = { coa_switch_to_roman_trigger = yes } coat_of_arms = d_phoenicia_roman } }
	}
}


"common/scripted_effects/TFE_dejure.txt" = {
	# No c_placensia in TFE as of the 'After The Pharaohs' update
	{
	title:c_placensia = {
		set_de_jure_liege_title = title:d_badajoz
	}
	}

	# No c_clemont_sur_allier in TFE as of the 'After The Pharaohs' update
	{
	title:c_clemont_sur_allier = {
		set_de_jure_liege_title = title:d_auvergne
	}
	}

	# No d_gloucestor in TFE as of the 'After The Pharaohs' update
	{
	title:c_hereford = {
		set_de_jure_liege_title = title:d_gloucestor
	}
	}
}


"common/flavorization/00_title_holders.txt" = {
	# error: female used instead of title tier
	{
celtic_queen = {
	type = character
	gender = male
	special = holder
	tier = female
	priority = 150
	heritages = { heritage_celtic }
}
	}
}

"common/on_action/sevenhouses_on_actions.txt" = {
	# Disable TFE's anachronistic seven houses mechanic for Persia
	{
on_game_start = {
	on_actions = {
		on_sevenhouses_start
	}
}

on_sevenhouses_start = {
	effect = {
		add_to_global_variable_list = {
			name = seven_houses
			target = dynasty:900021
		}
		add_to_global_variable_list = {
			name = seven_houses
			target = dynasty:mihran_dynasty
		}
		add_to_global_variable_list = {
			name = seven_houses
			target = dynasty:suren_dynasty
		}
		add_to_global_variable_list = {
			name = seven_houses
			target = dynasty:varaz_dynasty
		}
		add_to_global_variable_list = {
			name = seven_houses
			target = dynasty:spandiyadh_dynasty
		}
		add_to_global_variable_list = {
			name = seven_houses
			target = dynasty:7511
		}
		add_to_global_variable_list = {
			name = seven_houses
			target = dynasty:900018
		}
	}
	on_actions = {
		delay = { days = 1 }
		on_three_months_sevenhouses
	}
	on_actions = {
		delay = { days = { 365 420 } }
		on_yearly_sevenhouses
	}
}

on_three_months_sevenhouses = {
	effect = {
		if = {
			limit = {
				AND = {
					exists = title:e_persia.holder
					title:e_persia.holder = {
						government_has_flag = government_is_eranshar
						sevenhouses_enabled = yes
					}
				}
			}
			title:e_persia.holder = {
				remove_all_character_modifier_instances = sevenhouses_bad_modifier_strong
				remove_all_character_modifier_instances = sevenhouses_good_modifier_strong
				remove_all_character_modifier_instances = sevenhouses_bad_modifier
				remove_all_character_modifier_instances = sevenhouses_good_modifier
				remove_all_character_modifier_instances = sevenhouses_bad_modifier_strong_dehqan
				remove_all_character_modifier_instances = sevenhouses_good_modifier_strong_dehqan
				remove_all_character_modifier_instances = sevenhouses_bad_modifier_dehqan
				remove_all_character_modifier_instances = sevenhouses_good_modifier_dehqan
				if = {
					limit = {
						is_target_in_global_variable_list = {
							name = unavailable_unique_decisions
							target = flag:TFE_instate_dehqans
						}
					}
					if = {
						limit = {
							sevenhouses_strength_value >= 50 # if strong houses
						}
						if = {
							limit = {
								sevenhouses_favor_value < 50 #if sad houses
							}
							while = {
								count = fifty_minus_sevenhouses_favor_value
								add_character_modifier = sevenhouses_bad_modifier_strong_dehqan #very bad modifier
							}
						}
						else = {
							while = {
								count = sevenhouses_favor_value_minus_50
								add_character_modifier = sevenhouses_good_modifier_strong_dehqan #very good modifier
							}
						}
					}
					else = { # if weak houses
						if = {
							limit = {
								sevenhouses_favor_value < 50 #if sad houses
							}
							while = {
								count = fifty_minus_sevenhouses_favor_value
								add_character_modifier = sevenhouses_bad_modifier_dehqan #bad modifier
							}
						}
						else = {
							while = {
								count = sevenhouses_favor_value_minus_50
								add_character_modifier = sevenhouses_good_modifier_dehqan #good modifier
							}
						}
					}
				}
				else = {
					if = {
						limit = {
							sevenhouses_strength_value >= 50 # if strong houses
						}
						if = {
							limit = {
								sevenhouses_favor_value < 50 #if sad houses
							}
							while = {
								count = fifty_minus_sevenhouses_favor_value
								add_character_modifier = sevenhouses_bad_modifier_strong #very bad modifier
							}
						}
						else = {
							while = {
								count = sevenhouses_favor_value_minus_50
								add_character_modifier = sevenhouses_good_modifier_strong #very good modifier
							}
						}
					}
					else = { # if weak houses
						if = {
							limit = {
								sevenhouses_favor_value < 50 #if sad houses
							}
							while = {
								count = fifty_minus_sevenhouses_favor_value
								add_character_modifier = sevenhouses_bad_modifier #bad modifier
							}
						}
						else = {
							while = {
								count = sevenhouses_favor_value_minus_50
								add_character_modifier = sevenhouses_good_modifier #good modifier
							}
						}
					}
				}
			}
		}
	}
	on_actions = {
		delay = { months = 3 }
		on_three_months_sevenhouses
	}
}

on_yearly_sevenhouses = {
	effect = {
		if = {
			limit = {
				AND = {
					exists = title:e_persia.holder
					title:e_persia.holder = {
						government_has_flag = government_is_eranshar
						sevenhouses_enabled = yes
						any_character_struggle = {
							involvement = involved
							is_struggle_type = roman_persian_struggle	
						}
					}
				}
			}
			title:e_persia.holder = {
				if = {
					limit = {
						sevenhouses_favor_value >= 70
					}
					struggle:roman_persian_struggle = {
						activate_struggle_catalyst = { catalyst = catalyst_high_favor_with_houses character = prev }
					}
				}
				else_if = {
					limit = {
						sevenhouses_favor_value <= 30
					}
					struggle:roman_persian_struggle = {
						activate_struggle_catalyst = { catalyst = catalyst_low_favor_with_houses character = prev }
					}
				}
			}
		}
	}
	on_actions = {
		delay = { days = { 365 420 } }
		on_yearly_sevenhouses
	}
}
	}
}


"common/culture/name_lists/00_celtic.txt" = {
	# fix "Unexpected token: prefix, near line: 386" from error.log
	{
	prefix = yes
	}
}


"common/scripted_effects/00_mongol_invasion_effects.txt" = {
	# Character 215009 (Temujin) is not in TFE as of the 'After The Pharaohs' update.
	{
	if = {
		limit = {
			exists = character:125501
			character:125501 = {
				is_ai = no
				is_landed = yes
			}
		}
		character:125501 = {
			save_scope_as = temujin
		}
		scope:temujin = {
			# Make temporarily immune to disease
			add_character_flag = {
				flag = immune_to_disease
				years = 15
			}

			add_trait = greatest_of_khans
			form_the_mongol_empire_effect = yes
			add_prestige = 25000
			give_nickname = nick_genghis_khan
			trigger_event = conqueror.0001
		}
	}
	else_if = {
		limit = {
			exists = character:125501
			character:125501 = { is_physically_able_ai_adult = yes }
		}
		character:125501 = {
			save_scope_as = temujin
		}
		scope:temujin = {
			# Make temporarily immune to disease
			add_character_flag = {
				flag = immune_to_disease
				years = 15
			}

			add_trait = greatest_of_khans
			give_temujin_land_effect = yes
			add_gold = 5000
			add_dread = high_dread
			spawn_temujins_court_effect = yes
			form_the_mongol_empire_effect = yes
			add_prestige = 25000
			if = {
				limit = { NOT = { has_perk = peacemaker_perk } }
				add_perk = peacemaker_perk
			}
			remove_trait = education_diplomacy_1
			remove_trait = education_diplomacy_2
			remove_trait = education_diplomacy_3
			remove_trait = education_diplomacy_4
			remove_trait = education_diplomacy_5
			remove_trait = education_intrigue_1
			remove_trait = education_intrigue_2
			remove_trait = education_intrigue_3
			remove_trait = education_intrigue_4
			remove_trait = education_intrigue_5
			remove_trait = education_stewardship_1
			remove_trait = education_stewardship_2
			remove_trait = education_stewardship_3
			remove_trait = education_stewardship_4
			remove_trait = education_stewardship_5
			remove_trait = education_learning_1
			remove_trait = education_learning_2
			remove_trait = education_learning_3
			remove_trait = education_learning_4
			remove_trait = education_learning_5
			remove_trait = education_martial_1
			remove_trait = education_martial_2
			remove_trait = education_martial_3
			remove_trait = education_martial_4
			add_trait = education_martial_5
			add_trait = flexible_leader
			add_trait = athletic
			if = {
				limit = { has_dlc_feature = tours_and_tournaments }
				add_trait = tourney_participant
				add_random_tiered_trait_track_xp_effect = {
					TRAIT = lifestyle_hunter
					TRACK = hunter
					LEVEL_1 = yes
					LEVEL_3 = no
				}
				add_random_tiered_trait_track_xp_effect = {
					TRAIT = tourney_participant
					TRACK = horse
					LEVEL_1 = yes
					LEVEL_3 = yes
				}
				add_random_tiered_trait_track_xp_effect = {
					TRAIT = tourney_participant
					TRACK = bow
					LEVEL_1 = yes
					LEVEL_3 = yes
				}
			}
			dynasty = {
				add_dynasty_prestige_level = 5
				add_dynasty_prestige = 10000
				add_dynasty_perk = warfare_legacy_1
				add_dynasty_perk = warfare_legacy_2
				add_dynasty_perk = warfare_legacy_3
				add_dynasty_perk = warfare_legacy_4
				add_dynasty_perk = warfare_legacy_5
				if = {
					limit = {
						has_dlc_feature = hybridize_culture
					}
					add_dynasty_perk = ep1_culture_legacy_1
				}
			}
			give_nickname = nick_genghis_khan
		}
	}
	else_if = {
		limit = {
			exists = character:125501.dynasty
			character:125501.dynasty = {
				any_dynasty_member = {
					is_ai = no
					is_landed = yes
				}
			}
		}
		character:125501.dynasty = {
			random_dynasty_member = {
				limit = {
					is_ai = no
					is_landed = yes
				}
				save_scope_as = temujin
			}
		}
		scope:temujin = {
			# Make temporarily immune to disease
			add_character_flag = {
				flag = immune_to_disease
				years = 15
			}

			add_trait = greatest_of_khans
			form_the_mongol_empire_effect = yes
			add_prestige = 25000
			give_nickname = nick_genghis_khan
			trigger_event = conqueror.0001
		}
	}
	else_if = {
		limit = {
			exists = character:125501.dynasty
			character:125501.dynasty = {
				any_dynasty_member = {
					is_physically_able_ai_adult = yes
				}
			}
		}
		character:125501.dynasty = {
			random_dynasty_member = {
				limit = {
					is_physically_able_ai_adult = yes
					is_landed = yes
				}
				alternative_limit = {
					is_physically_able_ai_adult = yes
				}
				save_scope_as = temujin
			}
		}
		scope:temujin = {
			# Make temporarily immune to disease
			add_character_flag = {
				flag = immune_to_disease
				years = 15
			}

			add_trait = greatest_of_khans
			give_temujin_land_effect = yes
			add_gold = 5000
			add_dread = high_dread
			spawn_temujins_court_effect = yes
			form_the_mongol_empire_effect = yes
			add_prestige = 25000
			if = {
				limit = { NOT = { has_perk = peacemaker_perk } }
				add_perk = peacemaker_perk
			}
			remove_trait = education_diplomacy_1
			remove_trait = education_diplomacy_2
			remove_trait = education_diplomacy_3
			remove_trait = education_diplomacy_4
			remove_trait = education_diplomacy_5
			remove_trait = education_intrigue_1
			remove_trait = education_intrigue_2
			remove_trait = education_intrigue_3
			remove_trait = education_intrigue_4
			remove_trait = education_intrigue_5
			remove_trait = education_stewardship_1
			remove_trait = education_stewardship_2
			remove_trait = education_stewardship_3
			remove_trait = education_stewardship_4
			remove_trait = education_stewardship_5
			remove_trait = education_learning_1
			remove_trait = education_learning_2
			remove_trait = education_learning_3
			remove_trait = education_learning_4
			remove_trait = education_learning_5
			remove_trait = education_martial_1
			remove_trait = education_martial_2
			remove_trait = education_martial_3
			remove_trait = education_martial_4
			add_trait = education_martial_5
			add_trait = flexible_leader
			add_trait = athletic
			if = {
				limit = { has_dlc_feature = tours_and_tournaments }
				add_trait = tourney_participant
				add_random_tiered_trait_track_xp_effect = {
					TRAIT = lifestyle_hunter
					TRACK = hunter
					LEVEL_1 = yes
					LEVEL_3 = no
				}
				add_random_tiered_trait_track_xp_effect = {
					TRAIT = tourney_participant
					TRACK = horse
					LEVEL_1 = yes
					LEVEL_3 = yes
				}
				add_random_tiered_trait_track_xp_effect = {
					TRAIT = tourney_participant
					TRACK = bow
					LEVEL_1 = yes
					LEVEL_3 = yes
				}
			}
			dynasty = {
				add_dynasty_prestige_level = 5
				add_dynasty_prestige = 10000
				add_dynasty_perk = warfare_legacy_1
				add_dynasty_perk = warfare_legacy_2
				add_dynasty_perk = warfare_legacy_3
				add_dynasty_perk = warfare_legacy_4
				add_dynasty_perk = warfare_legacy_5
				if = {
					limit = {
						has_dlc_feature = hybridize_culture
					}
					add_dynasty_perk = ep1_culture_legacy_1
				}
			}
			give_nickname = nick_genghis_khan
		}
	}
	}
}


"common/coat_of_arms/coat_of_arms/new_landed_titles.txt" = {
	# No ce_gaetulia.dds in TFE as of the 'After The Pharaohs' update.
	{
	colored_emblem = {
		texture = "ce_gaetulia.dds"
		color1 = "yellow"
		color2 = "white"		
		instance = { position = { 0.5 0.5 } scale = { 1.0 1.0 } }		
	}	
	}
}

"common/coat_of_arms/coat_of_arms/new_dynasties.txt" = {
	# No ce_eagle_islam.dds in TFE as of the 'After The Pharaohs' update.
	{
	colored_emblem = {
		texture = "ce_eagle_islam.dds"
		color1 = "yellow"		
		instance = { position = { 0.5 0.5 } scale = { 1.0 1.0 } }		
	}	
	}

	# No ce_cross.dds in TFE as of the 'After The Pharaohs' update.
	{
	colored_emblem = {
		texture = "ce_cross.dds"
		color1 = "yellow"
		color2 = "yellow"		
		instance = { position = { 0.5 0.5 } scale = { 1.0 1.0 } }		
	}	
	}

	# No color gray in TFE as of the 'After The Pharaohs' update.
	{
sisenanding = {
	pattern = "pattern_solid.dds"
		color1 = "gray"
		color2 = "gray"
	colored_emblem = {
		texture = "ce_snake.dds"
		color1 = "yellow"
		color2 = "red"
		instance = { position = { 0.5 0.5 } scale = { 0.9 0.9 }  }
	}
}
	}

	# ck3-tiger: 2 errors as of the TFE 'After The Pharaohs' update.
	{
900077 = {
	pattern = "pattern_solid.dds"
		color1 = "red"
	colored_emblem = {
		texture = "ce_horse_statant.dds"
		color1 = "yellow"
		color2 = "brown"
		instance = { position = { 0.5 0.5 } scale = { 1.0 1.0 } }	
	}
	colored_emblem = {
		texture = "ce_antler.dds"
		color1 = "yellow"
		color2 = "brown"
		instance = { position = { 0.7.5 0.2 } scale = { 0.5 0.5 } }
	}	
}
	}
}


"common/game_concepts/TFE_game_concepts.txt" = {
	# The converter removes eastern_iranian_struggle. 
	{
eastern_iranian_struggle = {
	#alias = { struggle_region_region }
	parent = struggle
}

struggle_phase_eastern_iranian_expansion = {
	texture = "gfx/interface/icons/struggle_types/struggle_TFE_eastern_iranian_phase_migration.dds"
	parent = eastern_iranian_struggle
}

struggle_phase_eastern_iranian_hostility = {
	texture = "gfx/interface/icons/struggle_types/struggle_TFE_eastern_iranian_phase_hostility.dds"
	parent = eastern_iranian_struggle
}

struggle_phase_eastern_iranian_compromise = {
	texture = "gfx/interface/icons/struggle_types/struggle_TFE_eastern_iranian_phase_compromise.dds"
	parent = eastern_iranian_struggle
}

struggle_phase_eastern_iranian_development = {
	texture = "gfx/interface/icons/struggle_types/struggle_TFE_eastern_iranian_phase_conciliation.dds"
	parent = eastern_iranian_struggle
}
	}

	{
silk_road_urbanization = {
	alias = { silk_road_urbanization_short silk_road_urbanize }
	parent = eastern_iranian_struggle
	texture = "gfx/interface/icons/council_task_types/task_develop_county.dds"
}
	}
}


"common/governments/other_government.txt" = {
	# Not defined in TFE as of the 'After The Pharaohs' update.
	{
		clan_government_obligations
	}
}


"events/dharma_dravidian.txt" = {
	# ck3-tiger: "`event_background` now causes a crash. It has been replaced by `reference` since 1.9"
	{
	override_background = { event_background = throne_room }
	}
	{
	override_background = { event_background = cliff_temple }
	}
}


"events/decisions_events/middle_europe_decisions_events.txt" = {
	# Uses k_sorbia which is not in TFE as of the 'After The Pharaohs' update.
	{
##################################################
# Establish the Electorate of Saxony
# by James Beaumont
##################################################

scripted_trigger middle_europe_decisions_0017_most_powerful_saxon_vassal_trigger = {
	highest_held_title_tier = tier_duchy
	any_sub_realm_county = { kingdom = title:k_sorbia }
}

scripted_trigger middle_europe_decisions_0017_get_theocratic_vassal_trigger = {
	government_has_flag = government_is_theocracy
	any_sub_realm_county = { kingdom = title:k_sorbia }
}

scripted_trigger middle_europe_decisions_0017_get_appropriate_courtier_trigger = {
	is_available_ai_adult = yes
}

#	Electorate of Saxony event
middle_europe_decisions.0017 = {
	type = character_event
	title = middle_europe_decisions.0017.t
	desc = middle_europe_decisions.0017.desc
	theme = realm
	left_portrait =	{
		character = scope:founder
		animation = personality_bold
	}
	lower_left_portrait = scope:left_portrait
	lower_center_portrait = scope:centre_portrait
	lower_right_portrait = scope:right_portrait

	immediate = {
		# Get the most powerful vassal in Saxony that is not already a king
		if = {
			limit = {
				any_vassal = { middle_europe_decisions_0017_most_powerful_saxon_vassal_trigger = yes }
			}
			ordered_vassal = {
				limit = { middle_europe_decisions_0017_most_powerful_saxon_vassal_trigger = yes }
				order_by = {
					every_held_title = {
						limit = {
							tier = tier_county
							kingdom = title:k_sorbia
						}
						add = 1
					}
				}
				position = 0
				save_scope_as = most_powerful_saxon
			}
		}
		# Get a theocratic vassal in Saxony
		if = {
			limit = {
				any_vassal = { middle_europe_decisions_0017_get_theocratic_vassal_trigger = yes }
			}
			random_vassal = {
				limit = { middle_europe_decisions_0017_get_theocratic_vassal_trigger = yes}
				save_scope_as = saxon_bishop
			}
		}
		# Get my heir
		if = {
			limit = {
				exists = player_heir
				player_heir = {
					liege = root
					OR = {
						any_county_in_region = {
							region = custom_polabia
							holder = root
						}
						player_heir = { highest_held_title_tier >= tier_county }
					}
				}
			}
			player_heir = { save_scope_as = heir_scope }
		}
		# Get a courtier
		if = {
			limit = {
				any_courtier = {
					count >= 1
				}
			}
			random_courtier = {
				limit = {
					any_relation = {
						type = friend
						this = scope:founder
					}
					middle_europe_decisions_0017_get_appropriate_courtier_trigger = yes
				}
				alternative_limit = { middle_europe_decisions_0017_get_appropriate_courtier_trigger = yes }
				save_scope_as = rando_courtier_scope
			}
		}
		## And if, somehow, there's no courtier, make one.
		else = {
			create_character = {
				gender_female_chance = root_soldier_female_chance
				location = root.capital_province
				template = soldier_friend_character
				save_scope_as = rando_courtier_scope
				dynasty = generate
			}
			add_courtier = scope:rando_courtier_scope
		}
		# Set up portraits.
		## Are we on the courtier fallback? If so, only gimme the one.
		if = {
			limit = {
				NOT = {
					exists = scope:heir_scope
					exists = scope:most_powerful_saxon
					exists = scope:saxon_bishop
				}
			}
			scope:rando_courtier_scope = { save_scope_as = centre_portrait }
		}
		## Otherwise, trying and set up as many of the three as we can.
		if = {
			limit = { exists = scope:heir_scope }
			scope:heir_scope = { save_scope_as = left_portrait }
		}
		if = {
			limit = { exists = scope:most_powerful_saxon }
			scope:most_powerful_saxon = { save_scope_as = centre_portrait }
		}
		if = {
			limit = { exists = scope:saxon_bishop }
			scope:saxon_bishop = { save_scope_as = right_portrait }
		}
	}

	# I am great
	option = {
		name = middle_europe_decisions.0017.a
		trigger = {
			NOT = { has_title = title:e_hre }
		}
		create_kingdom_of_saxony_effect = { CHARACTER = root }
		ai_chance = {
			# If you've got the option, nab it.
			base = 1000
		}
	}

	# I give it to my beloved heir
	option = {
		name = middle_europe_decisions.0017.b
		trigger = {
			has_title = title:e_hre
			exists = scope:heir_scope
		}
		create_kingdom_of_saxony_effect = { CHARACTER = scope:heir_scope }
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_rationality = 0.5
				ai_honor = 0.5
			}
		}
	}

	# I give it to a powerful Saxon
	option = {
		name = middle_europe_decisions.0017.c
		trigger = {
			has_title = title:e_hre
			exists = scope:most_powerful_saxon
		}
		create_kingdom_of_saxony_effect = { CHARACTER = scope:most_powerful_saxon }
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_rationality = 0.5
				ai_boldness = -0.25
			}
		}
	}

	# I give it to the church
	option = {
		name = middle_europe_decisions.0017.d
		trigger = {
			has_title = title:e_hre
			exists = scope:saxon_bishop
		}
		create_kingdom_of_saxony_effect = { CHARACTER = scope:saxon_bishop }
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_zeal = 1
				ai_greed = -0.5
			}
		}
	}

	# I give it to some rando
	option = {
		name = middle_europe_decisions.0017.e
		trigger = {
			has_title = title:e_hre
			NOT = {
				# Player heir not valid
				exists = scope:heir_scope
				# There are no vassals in Saxony
				exists = scope:most_powerful_saxon
				# There is no bishop in Saxony
				exists = scope:saxon_bishop
			}
		}
		create_kingdom_of_saxony_effect = { CHARACTER = scope:rando_courtier_scope }
		ai_chance = {
			# No need to modify, as it'll be your only action if you've got it (generally).
			base = 100
		}
	}
}

#	Electorate of Saxony event
middle_europe_decisions.0018 = {
	type = character_event
	title = middle_europe_decisions.0017.t
	desc = middle_europe_decisions.0018.desc
	theme = realm
	left_portrait =	{
		character = scope:new_saxon_king
		animation = personality_bold
	}

	immediate = {
		show_as_tooltip = {
			create_kingdom_of_saxony_effect = { CHARACTER = scope:new_saxon_king }
		}
	}

	# I am great
	option = {
		name = {
			trigger = { has_title = title:k_saxony }
			text = middle_europe_decisions.0018.a.new_king
		}
		name = {
			trigger = {
				OR = {
					is_vassal_or_below_of = title:e_west_slavia.holder
					title:e_west_slavia = { is_de_jure_liege_or_above_target = prev }
				}
			}
			text = middle_europe_decisions.0018.a.slav
		}
		name = {
			trigger = {}
			text = middle_europe_decisions.0018.a
		}
		ai_chance = {
			base = 100
		}
	}
}
	}
}


"common/scripted_effects/00_major_decisions_scripted_effects.txt" = {
	# Uses k_sorbia which is not in TFE as of the 'After The Pharaohs' update.
	{
create_kingdom_of_saxony_effect = {
	if = {
		limit = {
			NOR = {
				root = $CHARACTER$
				exists = scope:new_saxon_king
			}
		}
		# Grant every held title in Saxony to the new holder
		root = {
			every_held_title = {
				limit = {
					OR = {
						title:k_saxony = { is_de_jure_liege_or_above_target = prev }
						title:k_sorbia = { is_de_jure_liege_or_above_target = prev }
					}
					NOT = {
						holder = { capital_county = prev }
					}
				}
				create_title_and_vassal_change = {
					type = granted
					save_scope_as = title_change
					add_claim_on_loss = no
				}
				change_title_holder = {
					holder = $CHARACTER$
					change = scope:title_change
				}
				resolve_title_and_vassal_change = scope:title_change
			}
		}
	}
	if = {
		limit = { exists = title:k_sorbia.holder }
		destroy_title = title:k_sorbia
	}
	title:k_sorbia = {
		every_in_de_jure_hierarchy = {
			limit = { tier = tier_duchy }
			set_de_jure_liege_title = title:k_saxony
		}
	}
	title:k_saxony = { set_coa = k_saxon_electorate }
	title:k_saxony = { set_de_jure_liege_title = title:e_hre }
	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
		add_claim_on_loss = no
	}
	if = {
		limit = {
			has_title = title:e_hre
		}
		hidden_effect = {
			title:k_saxony = {
				change_title_holder = {
					holder = $CHARACTER$
					change = scope:title_change
				}
			}
		}
	}
	else = {
		title:k_saxony = {
			change_title_holder = {
				holder = $CHARACTER$
				change = scope:title_change
			}
		}
	}
	every_vassal = {
		limit = {
			primary_title = {
				OR = {
					title:k_saxony = { is_de_jure_liege_or_above_target = prev }
					title:k_sorbia = { is_de_jure_liege_or_above_target = prev }
				}
			}
			NOT = { this = $CHARACTER$ }
			NOT = { any_liege_or_above = { this = $CHARACTER$ } }
		}
		change_liege = {
			liege = $CHARACTER$
			change = scope:title_change
		}
	}
	hidden_effect = {
		if = {
			limit = {
				NOR = {
					$CHARACTER$ = root
					$CHARACTER$ = { is_vassal_or_below_of = root }
				}
			}
			$CHARACTER$ = {
				change_liege = {
					liege = root
					change = scope:title_change
				}
			}
		}
	}
	resolve_title_and_vassal_change = scope:title_change
	hidden_effect = {
		$CHARACTER$ = { save_scope_as = new_saxon_king }
		every_player = {
			limit = {
				NOT = { this = prev }
				or = {
					is_vassal_or_below_of = title:e_hre.holder
					AND = {
						exists = title:e_west_slavia
						is_vassal_or_below_of = title:e_west_slavia.holder
					}
					title:e_hre = { is_neighbor_to_realm = prev }
					primary_title = {
						title:e_west_slavia = { is_de_jure_liege_or_above_target = prev }
					}
				}
			}
			trigger_event =  middle_europe_decisions.0018
		}
	}
}
	}
}


"common/scripted_effects/TFE_decisions_central_asia_effects.txt" = {
	{
		title:k_transoxania = {
			if = {
				limit = {
					NOT = { is_in_list = new_de_jure_kingdoms }
				}
				add_to_list = new_de_jure_kingdoms
			}
		}
	}
}


"common/scripted_effects/03_dlc_fp3_scripted_effects.txt" = {
	{
			# Are we Ismailis?
			else_if = {
				limit = { faith = faith:ismaili }
				# Transfer the title.
				create_title_and_vassal_change = {
					type = created
					save_scope_as = change
					add_claim_on_loss = no
				}
				title:d_ismaili = {
					change_title_holder = {
						holder = scope:founder
						change = scope:change
					}
				}
				resolve_title_and_vassal_change = scope:change
				faith = { set_religious_head_title = title:d_ismaili }

				# Set up the remaining bits'n'bobs.
				if = {
					limit = {
						NOT = { has_realm_law = same_faith_succession_law }
					}
					add_realm_law_skip_effects = same_faith_succession_law
				}
				title:d_ismaili = { add_title_law = temporal_head_of_faith_succession_law }
				# Make it the HoF head.
			}
	}
}


"common/decisions/00_major_decisions_east_europe.txt" = {
	# ck3-tiger: "unknown token `custom_prussia`". This is a TFE error as of the 'After The Pharaohs' update.
	{
# Basically same as founding Livonia
found_kingdom_of_prussia_decision = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_destiny_goal.dds"
	}
	decision_group_type = major

	ai_check_interval = 120

	desc = found_kingdom_of_prussia_decision_desc
	selection_tooltip = found_kingdom_of_prussia_decision_tooltip

	is_shown = {
		is_ruler = yes
		is_landed = yes
		exists = dynasty
		OR = {
			#Must be a Prussian or Christian in Prussia
			AND = {
				#Is a Crusader founding the Kingdom
				root.faith = {
					NOT = { religion_tag = baltic_religion }
					NOT = { has_doctrine = unreformed_faith_doctrine }
				}
				capital_province = {
					geographical_region = ghw_region_baltic
				}
			}
			#Or just be Prussian.
			culture = { has_name_list = name_list_prussian }
		}
		NOT = {	#You can only do it once.
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:flag_founded_kingdom_of_prussia
			}
		}
		highest_held_title_tier <= tier_duchy
	}

	is_valid = {
		OR = { #Independent or vassal of an Emperor
			is_independent_ruler = yes
			top_liege.primary_title.tier >= tier_empire
		}
		prestige_level >= medium_prestige_level

		#You must control the kingdom's heartlands.
		has_title = title:d_prussia
		has_title = title:d_masuria
		completely_controls_region = custom_prussia
	}

	is_valid_showing_failures_only = {
		is_available_adult = yes
	}

	effect = {
		save_scope_as = founder
		found_kingdom_of_prussia_decision_scripted_effect = yes
		hidden_effect = {
			add_to_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:flag_founded_kingdom_of_prussia
			}
		}
	}

	cost = {
		gold = major_gold_value
	}

	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 100
	}
}
	}
}


"common/customizable_localization/00_pl_custom_loc_extra.txt" = {
	# The file references some titles missing in TFE.
	{
					this = title:d_ismaili
	}
	{
					#nobles

					this = title:d_nf_ampelas
					this = title:d_nf_aplakes
					this = title:d_nf_agelastos
					this = title:d_nf_doukas
					this = title:d_nf_gerontas
					this = title:d_nf_hexavoulis
					this = title:d_nf_kardias
					this = title:d_nf_katakalitzes
					this = title:d_nf_kourkouas
					this = title:d_nf_krateros
					this = title:d_nf_lachanodrakon
					this = title:d_nf_makedon
					this = title:d_nf_maleios
					this = title:d_nf_maleinos
					this = title:d_nf_maurikios
					this = title:d_nf_melissenos
					this = title:d_nf_pastillas
					this = title:d_nf_ooryphas
					this = title:d_nf_sellokalas
					this = title:d_nf_skleros
					this = title:d_nf_arcruni
					this = title:d_nf_argyros
					this = title:d_nf_basiliakos
					this = title:d_nf_botaneiates
					this = title:d_nf_bryennios
					this = title:d_nf_diogenes
					this = title:d_nf_dragosevic
					this = title:d_nf_kamateros
					this = title:d_nf_karandenos
					this = title:d_nf_kaukadenos
					this = title:d_nf_komnenos
					this = title:d_nf_makrembolites
					this = title:d_nf_murzuphlos
					this = title:d_nf_ouranos
					this = title:d_nf_pahlavuni
					this = title:d_nf_palaiologos
					this = title:d_nf_pegonites
					this = title:d_nf_phokas
					this = title:d_nf_pleustes
					this = title:d_nf_synadenos
					this = title:d_nf_tarchaneiotes
					this = title:d_nf_taronites
					this = title:d_nf_varajnuni
					this = title:d_nf_saronites
					this = title:d_nf_garidas
					this = title:d_nf_areobindenos
					this = title:d_nf_alopos
					this = title:d_nf_durres
					this = title:d_nf_angelos
					this = title:d_nf_batatzes
					this = title:d_nf_branas
					this = title:d_nf_gabras
					this = title:d_nf_kamytzes
					this = title:d_nf_kantakouzenos
					this = title:d_nf_komnenos_doukas
					this = title:d_nf_kontostephanos
					this = title:d_nf_lampardas
					this = title:d_nf_macrodoukas
					this = title:d_nf_petraliphas
					this = title:d_nf_raoul
					this = title:d_nf_rogerios
	}
	{
					this = title:d_laamp_anangapida
					this = title:d_laamp_ziyar
					this = title:d_laamp_ahwazi
					this = title:d_laamp_guttorm
					this = title:d_laamp_hrolfr
					this = title:d_laamp_ubbe
					this = title:d_laamp_enian
					this = title:d_laamp_sabbah
					this = title:d_laamp_wake
					this = title:d_laamp_el_cid
					this = title:d_laamp_crispin
					this = title:d_laamp_suleyman
					this = title:d_laamp_wallada
					this = title:d_laamp_danishmend
					this = title:d_laamp_voiteh
					this = title:d_laamp_aelfwine
					this = title:d_laamp_karatzas
					this = title:d_laamp_kizil_buga
					this = title:d_laamp_ali_ibn_reverter
					this = title:d_laamp_andronikos_komnenos
					this = title:d_laamp_asen
					this = title:d_laamp_mieszko
					this = title:d_laamp_raimon_brun
					this = title:d_laamp_lalibela
					this = title:d_laamp_muhammad_bakhtiyar
					this = title:d_laamp_raoul
	}
}


"common/scripted_triggers/TFE_hunt_triggers.txt" = {
	# No doctrine parameter cannot_hunt in TFE as of the 'After The Pharaohs' update.
	{
	custom_tooltip = {
		text = faith_cannot_hunt_parameter_tt
		NOT = {
			faith = { has_doctrine_parameter = cannot_hunt }
		}
	}
	}
}


"common/event_backgrounds/01_event_backgrounds.txt" = {
	# error.log error as of TFE 'After The Pharaohs' update: "has_building_gfx trigger [ Unknown gfx culture flag byzantine_building_gfx ]"
	{
	background = { # EP3 - Byzantium
		trigger = {
			trigger_if = {
				limit = {
					NOT = { exists = scope:activity }
				}
				location.culture ?= { has_building_gfx = byzantine_building_gfx }
			}
			trigger_else = {
				scope:activity.activity_location.culture ?= { has_building_gfx = byzantine_building_gfx }
			}
		}
		reference = "gfx/interface/illustrations/event_scenes/ep3_feast_byzantine.dds"
		environment = "environment_ep3_byzantine_feast"
		ambience = "event:/SFX/Events/Backgrounds/feasthall"
	}
	}

	{
	background = { # EP3 - Byzantium
		trigger = {
			trigger_if = {
				limit = { exists = scope:bg_override_char }
				scope:bg_override_char = {
					location.culture = { has_building_gfx = byzantine_building_gfx }
				}
			}
			trigger_else = {
				location.culture = { has_building_gfx = byzantine_building_gfx }
			}
		}
		reference = "gfx/interface/illustrations/event_scenes/ep3_feast_byzantine.dds"
		environment = "environment_ep3_byzantine_feast"
		ambience = "event:/SFX/Events/Backgrounds/feasthall"
	}
	}

	{
	background = {
		trigger = {
			location.culture = { has_building_gfx = byzantine_building_gfx }
		}
		reference = "gfx/interface/illustrations/event_scenes/ep3_relaxing_room.dds"
		environment = "environment_ep3_relaxing_room" 
		ambience = "event:/DLC/EP3/SFX/Events/Event_Images/ep3_evn_eventimage_byzantine_relaxing_room"
	}
	}

	{
	background = { # Byzantium
		trigger = {
			location.culture ?= { has_building_gfx = byzantine_building_gfx }
		}
		reference = "gfx/interface/illustrations/event_scenes/ep3_feast_byzantine.dds"
		environment = "environment_ep3_byzantine_feast"
		ambience = "event:/SFX/Events/Backgrounds/feasthall"
	}
	}

	# No building rock_of_gibraltar_01 in TFE as of the 'After The Pharaohs' update.
	{
						has_building_or_higher = rock_of_gibraltar_01
	}
}


"common/customizable_localization/00_building_custom_localization.txt" = {
	# No building rock_of_gibraltar_01 in TFE as of the 'After The Pharaohs' update.
	{
	text = { # Gibraltar
		trigger = {
			has_special_building = yes
			has_building = rock_of_gibraltar_01
			#this = province:1845 # Algeciras
		}
		localization_key = building_rock_of_gibraltar_01
	}
	}
}