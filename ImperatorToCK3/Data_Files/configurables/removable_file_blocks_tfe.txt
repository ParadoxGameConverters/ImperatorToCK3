# This file contains blocks from The Fallen Eagle files that can be removed.
# The structure is as follows:

# <file name> = {
# 	{
#          # comments are supported inside
#          some = code
#   }
# 	{
#          some code
# 	                some code with other indent
#   }
# }

# INDENTATION IS IMPORTANT!
# ASIDE FROM THE CURLY BRACKETS SURROUNDING THE BLOCK, IT MUST MATCH THE ORIGINAL FILE.
# OTHERWISE THE BLOCK WON'T BE REMOVED!

"common/on_action/TFE_game_start.txt" = {
	# Struggle starts
	{
		if = {
			limit = {
				AND = {
					game_start_date >= 476.9.4
					game_start_date <= 768.1.1
				}
			}
			start_struggle = { struggle_type = britannia_struggle start_phase = struggle_britannia_phase_migration }
		}
	}
	{
		if = {
			limit = {
				game_start_date >= 476.9.4
			}
			start_struggle = { struggle_type = italian_struggle start_phase = struggle_TFE_italian_phase_turmoil }
		}
	}
	{
		if = {
			limit = {
				AND = {
					game_start_date <= 651.1.1 # Death of Yazdegerd III
				}
			}
			start_struggle = { struggle_type = roman_persian_struggle start_phase = struggle_TFE_roman_persian_phase_contention }
		}
		start_struggle = { struggle_type = eastern_iranian_struggle start_phase = struggle_TFE_eastern_iranian_phase_expansion }
		start_struggle = { struggle_type = north_indian_struggle start_phase = struggle_TFE_north_indian_phase_invasion }
	}
	
	# Other
	{
		#### Starting events stuff
		if = {
			limit = {
				game_start_date = 361.11.17
			}
			character:145237 = {
				add_character_flag = {
					flag = immune_to_disease
					years = 5
				}
			}
			character:145232 = {
				add_character_flag = {
					flag = immune_to_disease
					years = 5
				}
			}
			character:145231 = {
				add_character_flag = {
					flag = immune_to_disease
					years = 5
				}
			}
		}
		if = {
			limit = {
				game_start_date = 361.11.17
				title:e_roman_empire.holder = character:145237
			}
			character:145237 = {
				trigger_event = {
					id = western_roman.0081
					days = 2
				}
			}
		}
		if = {
			limit = {
				game_start_date = 395.1.17
			}
			title:k_visigoths.holder ?= {
				trigger_event = gothic_wars.0001
			}
			# Start Huns with de jure drift progress for Eastern European kingdoms
			# Has to be an event that is triggered some time after game start because PDX is a dum dum
			title:e_hunnic_empire.holder ?= {
				trigger_event = {
					id = tfe_title_event.0009
					days = 90
				}
			}
			if = {
				limit = {
					character:rufinus_02 = {
						is_alive = yes
						OR = {
							is_vassal_of = character:70519
							is_courtier_of = character:70519
						}
						NOT = { is_diarch = yes }
					}
				}
				if = {
					limit = {
						character:70519 = {
							has_active_diarchy = no
						}
					}
					character:70519 = {
						designate_diarch = character:rufinus_02
						start_diarchy = regency
						set_diarchy_swing = 40
					}
				}
				else = {
					character:70519 = {
						designate_diarch = character:rufinus_02
						set_diarchy_type = regency
						change_diarchy_swing = 40
					}
				}
			}
			if = {
				limit = {
					character:900062 = {
						is_alive = yes
						OR = {
							is_vassal_of = character:145227
							is_courtier_of = character:145227
						}
						NOT = { is_diarch = yes }
					}
				}
				if = {
					limit = {
						character:145227 = {
							has_active_diarchy = no
						}
					}
					character:145227 = {
						designate_diarch = character:900062
						start_diarchy = regency
						set_diarchy_swing = 40
					}
				}
				else = {
					character:145227 = {
						designate_diarch = character:900062
						set_diarchy_type = regency
						change_diarchy_swing = 40
					}
				}
			}
		}
		if = {
			limit = {
				game_start_date = 476.9.4
				AND = {
					exists = title:k_croatia.holder
					title:k_croatia.holder = {
						culture = {
							OR = {
								THIS = culture:roman
								any_parent_culture_or_above = {
									this = culture:roman
								}
							}
						}
					}
				}
			}
			title:k_croatia.holder = {
				add_character_flag = nepos_ambition_triggered
				trigger_event = {
					id = western_roman.0027
					days = 5
				}
			}
		}
		if = {
			limit = {
				game_start_date = 532.2.1
				character:992023 = {
					is_alive = yes
				}
				title:k_ostrogoths.holder = character:992023
				character:992024 = {
					is_alive = yes
					is_betrothed = no
					is_married = no
				}
				OR = {
					character:rugian_17 = {
						is_alive = yes
						is_landed = yes
						is_betrothed = no
						is_married = no
						is_vassal_of = character:992023
					}
					character:992030 = {
						is_alive = yes
						is_landed = yes
						is_betrothed = no
						is_married = no
						is_vassal_of = character:992023
					}
					character:992100 = {
						is_alive = yes
						is_landed = yes
						is_betrothed = no
						is_married = no
						is_vassal_of = character:992023
					}
				}
			}
			title:k_ostrogoths.holder = {
				trigger_event = {
					id = germanic_events.0014
					days = 1
				}
			}
		}
		if = {
			limit = {
				game_start_date = 532.2.1
				AND = {
					exists = title:e_byzantium.holder
					title:e_byzantium.holder = {
						culture = {
							OR = {
								THIS = culture:roman
								any_parent_culture_or_above = {
									this = culture:roman
								}
							}
						}
					}
				}
			}
			set_global_variable = {
				name = justinian
				value = title:e_byzantium.holder
			}
			set_global_variable = {
				name = justinian_commander
				value = character:belisarius_001
			}
			set_global_variable = {
				name = justinian_gothic_commander
				value = character:belisarius_001
			}
			title:e_byzantium.holder = {
				trigger_event = {
					id = western_roman.0038
					days = 2
				}
				add_character_flag = {
					flag = immune_to_disease
					years = 10
				}
			}
			character:belisarius_001 = {
				set_global_variable = {
					name = belisarius
					value = character:belisarius_001
				}
			}
			character:belisarius_001 = {
				add_character_flag = {
					flag = immune_to_disease
					years = 10
				}
			}
		}
		else = {
			random_ruler = {
				limit = {
					is_ai = yes
					any_courtier = {
						is_lowborn = yes
					}
				}
				random_courtier = {
					limit = {
						is_lowborn = yes
					}
					save_scope_as = bugfix
					set_global_variable = {
						name = justinian
						value = scope:bugfix
					}
					set_global_variable = {
						name = hildirix
						value = scope:bugfix
					}
					death = { 
						death_reason = death_vanished 
					} 
				}
			}
		}
	}
	{
				if = {
					limit = {
						character:992020 = {
							is_alive = yes
							OR = {
								is_vassal_of = character:992023
								is_courtier_of = character:992023
							}
							NOT = { is_diarch = yes }
						}
					}
					if = {
						limit = {
							character:992023 = {
								has_active_diarchy = no
							}
						}
						character:992023 = {
							designate_diarch = character:992020
							start_diarchy = regency
							set_diarchy_swing = 40
						}
					}
					else = {
						character:992023 = {
							designate_diarch = character:992020
							set_diarchy_type = regency
							change_diarchy_swing = 40
						}
					}
				}
	}
	{
		if = {
			limit = {
				current_date >= 530.1.1
				current_date <= 550.1.1
			}
			culture:ostrogothic = {
				change_cultural_acceptance = {
					target = culture:roman
					value = 40
					desc = cultural_acceptance_historical_relations
				}
				change_cultural_acceptance = {
					target = culture:illyro_roman
					value = 40
					desc = cultural_acceptance_historical_relations
				}
			}
			if = {
				limit = {
					exists = title:k_ostrogoths.holder
				}
				if = {
					limit = {
						title:k_ostrogoths.holder.culture = culture:ostrogothic
						title:k_ostrogoths.holder.dynasty = dynasty:99920000
					}
					title:k_ostrogoths.holder.dynasty = {
						add_dynasty_modifier = {
							modifier = tfe_segregated_barbarians_and_romans
							years = 11
						}
					}
				}
				title:k_ostrogoths.holder = {
					learn_language = language_latin
					every_close_family_member = {
						learn_language = language_latin
					}
					every_dynasty_member = {
						learn_language = language_latin
					}
					if = {
						limit = { has_trait = drunkard }
						add_character_modifier = {
							modifier = tragic_drunk_modifier
							years = 3
						}
					}
					else = { add_trait = drunkard }
					if = {
						limit = {
							THIS = character:992023
						}
						add_character_modifier = {
							modifier = the_rightful_king
							years = 5
						}
					}
				}
				
			}
		}
	}
	{
		character:2000003 ?= {
			make_trait_inactive = intellect_good_3
		}
	}
}

"common/on_action/sea_minority_game_start.txt" = {
	{
		# Alans
		if = {
			limit = {
				game_start_date >= 400.1.1
			}
			add_culture_minority_effect = {
				CULTURE = culture:alan
				SIZE = large
				COUNTY = title:c_tunis
			}
			add_faith_minority_effect = {
				FAITH = faith:arianism
				SIZE = large
				COUNTY = title:c_tunis
			}
		}
	}
}

"common/on_action/government_change_on_actions.txt" = {
	{
						NOT = {
							THIS = character:taifal_01
						}
	}
	{
						NOT = {
							THIS = character:persian_armenia_01
						}
						NOT = {
							THIS = character:159564
						}
						NOT = {
							THIS = character:159858
						}
						NOT = {
							THIS = character:159853
						}
						NOT = {
							THIS = character:159995
						}
						NOT = {
							THIS = character:159892
						}
	}
	{
		title:e_mongolia = {
			every_in_de_jure_hierarchy = {
				limit = {
					is_title_created = yes
				}
				holder = {
					if = {
						limit = {
							has_government = tribal_government
						}
						change_government = nomadic_government
					}
				}
			}
		}
		title:e_siberia = {
			every_in_de_jure_hierarchy = {
				limit = {
					is_title_created = yes
				}
				holder = {
					if = {
						limit = {
							has_government = tribal_government
						}
						change_government = nomadic_government
					}
				}
			}
		}
		title:e_volga-ural = {
			every_in_de_jure_hierarchy = {
				limit = {
					is_title_created = yes
				}
				holder = {
					if = {
						limit = {
							has_government = tribal_government
						}
						change_government = nomadic_government
					}
				}
			}
		}
		title:e_tartaria = {
			every_in_de_jure_hierarchy = {
				limit = {
					is_title_created = yes
				}
				holder = {
					if = {
						limit = {
							has_government = tribal_government
						}
						change_government = nomadic_government
					}
				}
			}
		}
		title:k_oghuz_il = {
			every_in_de_jure_hierarchy = {
				limit = {
					is_title_created = yes
				}
				holder = {
					if = {
						limit = {
							has_government = tribal_government
						}
						change_government = nomadic_government
					}
				}
			}
		}
		title:e_rajastan = {
			every_in_de_jure_hierarchy = {
				limit = {
					is_title_created = yes
				}
				holder = {
					if = {
						limit = {
							culture ?= {
								has_cultural_tradition = tradition_gana_sangha
							}
							government_has_flag = government_is_tribal
						}
						change_government = gana_sangha_government
						primary_title = {
							add_title_law = gana_sangha_elective_succession_law
						}
					}
				}
			}
		}
	}
}

"common/on_action/tribs_on_action.txt" = {
	{
		if = {
			limit = {
				AND = {
					game_start_date > 361.1.1
					game_start_date < 362.1.1
				}
			}
			###GUPTAS
			# Kushans
			if = {
				limit = {
					AND = {
						exists = character:kushan_014
						exists = character:900963
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:kushan_014
					SUZERAIN = character:900963 
				}
			}
			# Madrakas
			if = {
				limit = {
					AND = {
						exists = character:matraka_01
						exists = character:900963
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:matraka_01
					SUZERAIN = character:900963 
				}
			}
			# Yaudheyas
			if = {
				limit = {
					AND = {
						exists = character:yaudheya_01
						exists = character:900963
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:yaudheya_01
					SUZERAIN = character:900963 
				}
			}
			# Malavas
			#if = {
			#	limit = {
			#		AND = {
			#			exists = character:malava_01
			#			exists = character:900963
			#		}
			#	}
			#	make_tributary = {
			#		TYPE = tributary_permanent
			#		TRIBUTARY = character:malava_01
			#		SUZERAIN = character:900963 
			#	}
			#}
			# Arjunayanas
			#if = {
			#	limit = {
			#		AND = {
			#			exists = character:guptasad_32
			#			exists = character:900963
			#		}
			#	}
			#	make_tributary = {
			#		TYPE = tributary_permanent
			#		TRIBUTARY = character:guptasad_32
			#		SUZERAIN = character:900963 
			#	}
			#}
			# Karttripuras
			if = {
				limit = {
					AND = {
						exists = character:karttripura_01
						exists = character:900963
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:karttripura_01
					SUZERAIN = character:900963 
				}
			}
			# Nepal/Licchavis
			if = {
				limit = {
					AND = {
						exists = character:licchavi_02
						exists = character:900963
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:licchavi_02
					SUZERAIN = character:900963
				}
			}
			# Kamarupa
			if = {
				limit = {
					AND = {
						exists = character:190054
						exists = character:900963
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:190054
					SUZERAIN = character:900963 
				}
			}
			# Davakas
			if = {
				limit = {
					AND = {
						exists = character:davaka_01
						exists = character:900963
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:davaka_01
					SUZERAIN = character:900963 
				}
			}
			# Samatatas
			#if = {
			#	limit = {
			#		AND = {
			#			exists = character:samatata_01
			#			exists = character:900963
			#		}
			#	}
			#	make_tributary = {
			#		TYPE = tributary_permanent
			#		TRIBUTARY = character:samatata_01
			#		SUZERAIN = character:900963 
			#	}
			#}
			# Kosalas
			if = {
				limit = {
					AND = {
						exists = character:orissa_01
						exists = character:900963
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:orissa_01
					SUZERAIN = character:900963 
				}
			}
			#Mahakantara
			if = {
				limit = {
					AND = {
						exists = character:orissa_02
						exists = character:900963
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:orissa_02
					SUZERAIN = character:900963 
				}
			}
			# Salankayanas
			if = {
				limit = {
					AND = {
						exists = character:salankayana_01
						exists = character:900963
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:salankayana_01
					SUZERAIN = character:900963 
				}
			}
			#Avamuktas
			if = {
				limit = {
					AND = {
						exists = character:orissa_06
						exists = character:900963
					}

				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:orissa_06
					SUZERAIN = character:900963 
				}
			}
			#Dhananjayids
			if = {
				limit = {
					AND = {
						exists = character:orissa_08
						exists = character:900963
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:orissa_08
					SUZERAIN = character:900963 
				}
			}
			
			# Abyssinia Tributaries in Kush/Nubia
			if = {
				limit = {
					AND = {
						exists = character:meroitic_misc_01
						exists = character:aksum_12
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:meroitic_misc_01
					SUZERAIN = character:aksum_12 
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:dinka_01
						exists = character:aksum_12
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:dinka_01
					SUZERAIN = character:aksum_12 
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:dinka_05
						exists = character:aksum_12
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:dinka_05
					SUZERAIN = character:aksum_12 
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:dinka_09
						exists = character:aksum_12
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:dinka_09
					SUZERAIN = character:aksum_12 
				}
			}
			character:990016 = {
				add_prestige = 1500
				add_gold = 250
				spawn_army = {
					name = "Hunnic Migrators"
					levies = 1000
					men_at_arms = {
						type = horse_archers
						stacks = 5
					}
					men_at_arms = {
						type = light_footmen
						stacks = 5
					}
					men_at_arms = {
						type = siege_towers
						stacks = 5
					}
					location = title:b_itil.title_province
					inheritable = no
				}
				spawn_army = {
					name = "Hunnic Migrators"
					levies = 1000
					men_at_arms = {
						type = light_horsemen
						stacks = 5
					}
					men_at_arms = {
						type = horse_archers
						stacks = 5
					}
					men_at_arms = {
						type = siege_towers
						stacks = 5
					}
					location = title:b_engels.title_province
					inheritable = no
				}
			}
		}
		if = {
			limit = {
				AND = {
					game_start_date > 394.1.1
					game_start_date < 396.1.1
				}
			}
			###EASTERN ROMAN
			if = {
				limit = {
					AND = {
						exists = character:judham_11
						exists = character:70519
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:judham_11
					SUZERAIN = character:70519 
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:amilah_01
						exists = character:70519
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:amilah_01
					SUZERAIN = character:70519 
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:lazika_03
						exists = character:70519
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:lazika_03
					SUZERAIN = character:70519 
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:tanukhid_011
						exists = character:70519
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:tanukhid_011
					SUZERAIN = character:70519 
				}
			}

			###GUPTAS
			# Madrakas
			#if = {
			#	limit = {
			#		AND = {
			#			exists = character:matraka_01
			#			exists = character:2020123
			#		}
			#	}
			#	make_tributary = {
			#		TYPE = tributary_permanent
			#		TRIBUTARY = character:matraka_01
			#		SUZERAIN = character:2020123 
			#	}
			#}
			# Yaudheyas
			if = {
				limit = {
					AND = {
						exists = character:yaudheya_01
						exists = character:2020123
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:yaudheya_01
					SUZERAIN = character:2020123 
				}
			}
			# Karttripuras
			if = {
				limit = {
					AND = {
						exists = character:karttripura_02
						exists = character:2020123
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:karttripura_02
					SUZERAIN = character:2020123 
				}
			}
			# Nepal/Licchavis
			if = {
				limit = {
					AND = {
						exists = character:licchavi_02
						exists = character:2020123
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:licchavi_02
					SUZERAIN = character:2020123 
				}
			}
			# Kamarupa
			if = {
				limit = {
					AND = {
						exists = character:190055
						exists = character:2020123
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:190055
					SUZERAIN = character:2020123 
				}
			}
			# Davakas
			if = {
				limit = {
					AND = {
						exists = character:davaka_01
						exists = character:2020123
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:davaka_01
					SUZERAIN = character:2020123 
				}
			}
			# Samatatas
			#if = {
			#	limit = {
			#		AND = {
			#			exists = character:samatata_01
			#			exists = character:2020123
			#		}
			#	}
			#	make_tributary = {
			#		TYPE = tributary_permanent
			#		TRIBUTARY = character:samatata_01
			#		SUZERAIN = character:2020123 
			#	}
			#}
		}
		if = {
			limit = {
				game_start_date = 476.9.4
			}
			if = {
				limit = {
					AND = {
						exists = character:996002
						exists = character:70515
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:996002
					SUZERAIN = character:70515
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:tanukhid_03
						exists = character:70515
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:tanukhid_03
					SUZERAIN = character:70515 
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:lazika_05
						exists = character:70515
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:lazika_05
					SUZERAIN = character:70515 
				}
			}
			character:strabo_02 ?= {
				spawn_army = {
					name = "Zeno's Auxiliaries"
					levies = 1000
					men_at_arms = {
						type = palatinae
						#type = armored_footmen
						stacks = 2
					}
					men_at_arms = {
						type = comitatenses
						#type = armored_footmen
						stacks = 2
					}
					location = title:c_turnovo.title_province
					inheritable = no
				}
			}
			character:992016 ?= {
				spawn_army = {
					name = "Ostrogoth Invaders"
					levies = 3000
					men_at_arms = {
						type = bowmen
						stacks = 5
					}
					men_at_arms = {
						type = light_horsemen
						stacks = 5
					}
					men_at_arms = {
						type = light_footmen
						stacks = 10
					}
					men_at_arms = {
						type = siege_towers
						stacks = 3
					}
					location = capital_province
					inheritable = no
				}
			}
			character:yujiulu_10 ?= {
				dynasty = {
					add_dynasty_modifier = rouran_khagans
				}
			}
		}
		
		###WESTERN ROMAN AND AFRICAN
		if = {
			limit = {
				AND = {
					game_start_date > 394.1.1
					game_start_date < 396.1.1
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:159009
						exists = character:145227
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:159009
					SUZERAIN = character:145227
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:mauri_18
						exists = character:145227
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:mauri_18
					SUZERAIN = character:145227
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:afroroman_01
						exists = character:145227
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:afroroman_01
					SUZERAIN = character:145227
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:mauri_28
						exists = character:mauri_18
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:mauri_28
					SUZERAIN = character:mauri_18
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:mauri_23
						exists = character:145227
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:mauri_23
					SUZERAIN = character:145227
				}
			}
		}

		if = {
			limit = {
				AND = {
					game_start_date > 360.1.1
					game_start_date < 362.1.1
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:afroroman_01
						exists = character:145237
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:afroroman_01
					SUZERAIN = character:145237
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:mauri_17
						exists = character:145237
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:mauri_17
					SUZERAIN = character:145237
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:arsacid_46
						exists = character:145237
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:arsacid_46
					SUZERAIN = character:145237
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:mauri_27
						exists = character:mauri_17
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:mauri_27
					SUZERAIN = character:mauri_17
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:mauri_22
						exists = character:145237
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:mauri_22
					SUZERAIN = character:145237
				}
			}
			###PERSIANS
			if = {
				limit = {
					AND = {
						exists = character:159582
						exists = character:180617
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:159582
					SUZERAIN = character:180617 
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:159758
						exists = character:180617
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:159758
					SUZERAIN = character:180617 
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:lakhmid_03
						exists = character:180617
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:lakhmid_03
					SUZERAIN = character:180617 
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:khinda_05
						exists = character:himyar_11
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:khinda_05
					SUZERAIN = character:himyar_11
				}
			}
			#character:990016 ?= {
			#	add_gold = 250
			#	spawn_army = {
			#		name = "Hunnic Invaders"
			#		levies = 2000
			#		men_at_arms = {
			#			type = light_horsemen
			#			stacks = 15
			#		}
			#		men_at_arms = {
			#			type = horse_archers
			#			stacks = 15
			#		}
			#		men_at_arms = {
			#			type = siege_towers
			#			stacks = 5
			#		}
			#		location = capital_province
			#		inheritable = no
			#	}
			#	spawn_army = {
			#		name = "Hunnic Invaders"
			#		levies = 1000
			#		men_at_arms = {
			#			type = light_horsemen
			#			stacks = 10
			#		}
			#		men_at_arms = {
			#			type = horse_archers
			#			stacks = 10
			#		}
			#		men_at_arms = {
			#			type = siege_towers
			#			stacks = 5
			#		}
			#		location = capital_province
			#		inheritable = yes
			#	}
			#}
		}
		
		###PERSIAN
		if = {
			limit = {
				AND = {
					game_start_date > 394.1.1
					game_start_date < 396.1.1
				}
			}
			make_tributary = {
				TYPE = tributary_permanent
				TRIBUTARY = character:lakhmid_06
				SUZERAIN = character:180618 
			}
			make_tributary = {
				TYPE = tributary_permanent
				TRIBUTARY = character:159583
				SUZERAIN = character:180618 
			}
			make_tributary = {
				TYPE = tributary_permanent
				TRIBUTARY = character:159761
				SUZERAIN = character:180618 
			}
			make_tributary = {
				TYPE = tributary_permanent
				TRIBUTARY = character:arsacid_58
				SUZERAIN = character:180618 
			}
		}
		if = {
			limit = {
				AND = {
					game_start_date > 475.1.1
					game_start_date < 477.1.1
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:lakhmid_08
						exists = character:180624
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:lakhmid_08
					SUZERAIN = character:180624 
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:159766
						exists = character:180624
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:159766
					SUZERAIN = character:180624 
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:159859
						exists = character:180624
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:159859
					SUZERAIN = character:180624 
				}
			}
		}
		
		###GUPTA
		if = {
			limit = {
				AND = {
					game_start_date > 394.1.1
					game_start_date < 396.1.1
				}
			}
			if = {
				limit = {
					AND = {
						exists = character:salankayana_02
						exists = character:2020123
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = character:salankayana_02
					SUZERAIN = character:2020123
				}
			}
		}

		###532 BM Caucasus
		if = {
			limit = {
				AND = {
					game_start_date > 530.1.1
					game_start_date < 540.1.1
				}
			}
			if = {
				limit = {
					AND = {
						exists = title:d_abkhazia.holder
						exists = title:e_byzantium.holder
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = title:d_abkhazia.holder
					SUZERAIN = title:e_byzantium.holder
				}
			}
			if = {
				limit = {
					AND = {
						exists = title:d_georgia.holder
						exists = title:e_persia.holder
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = title:d_georgia.holder
					SUZERAIN = title:e_persia.holder
				}
			}
			if = {
				limit = {
					AND = {
						exists = title:d_albania.holder
						exists = title:e_persia.holder
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = title:d_albania.holder
					SUZERAIN = title:e_persia.holder
				}
			}
			if = {
				limit = {
					AND = {
						exists = title:k_lakhmid.holder
						exists = title:e_persia.holder
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = title:k_lakhmid.holder
					SUZERAIN = title:e_persia.holder
				}
			}
			if = {
				limit = {
					AND = {
						exists = title:k_ghassanid.holder
						exists = title:e_byzantium.holder
					}
				}
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = title:k_ghassanid.holder
					SUZERAIN = title:e_byzantium.holder
				}
			}
		}

		#I'm too lazy to make another file :p
		if = {
			limit = {
				game_start_date = 476.9.4
			}
			title:k_italy.holder ?= {
				add_gold = 200
				spawn_army = {
					name = "Scirian Invaders"
					levies = 1500
					men_at_arms = {
						type = bowmen
						stacks = 3
					}
					men_at_arms = {
						type = light_horsemen
						stacks = 2
					}
					men_at_arms = {
						type = light_footmen
						stacks = 4
					}
					location = capital_province
					inheritable = no
				}
				spawn_army = {
					name = "Scirian Invaders"
					levies = 1500
					men_at_arms = {
						type = bowmen
						stacks = 3
					}
					men_at_arms = {
						type = light_horsemen
						stacks = 2
					}
					men_at_arms = {
						type = light_footmen
						stacks = 4
					}
					location = capital_province
					inheritable = yes
				}
			}
			title:k_visigoths.holder ?= {
				add_gold = 300
				spawn_army = {
					name = gothic_event_troops
					levies = 2000
					men_at_arms = {
						type = bowmen
						stacks = 2
					}
					men_at_arms = {
						type = light_horsemen
						stacks = 2
					}
					men_at_arms = {
						type = light_footmen
						stacks = 4
					}
					location = capital_province
					inheritable = no
				}
				spawn_army = {
					name = gothic_event_troops
					levies = 2000
					men_at_arms = {
						type = bowmen
						stacks = 2
					}
					men_at_arms = {
						type = light_horsemen
						stacks = 2
					}
					men_at_arms = {
						type = light_footmen
						stacks = 4
					}
					location = capital_province
					inheritable = yes
				}
			}
		}
		else_if = {
			limit = {
				AND = {
					game_start_date > 394.1.1
					game_start_date < 396.1.1
				}
			}
			title:e_western_roman_empire.holder ?= {
				add_gold = 1000
			}
			title:e_byzantium.holder ?= {
				add_gold = 1000
			}
			character:200290 = {
				remove_claim = title:d_muntenia
			}
			character:balamer_01 ?= {
				add_prestige = 3000
				spawn_army = {
					name = "Hunnic Invaders"
					levies = 2000
					men_at_arms = {
						type = horse_archers
						stacks = 10
					}
					men_at_arms = {
						type = light_footmen
						stacks = 20
					}
					men_at_arms = {
						type = siege_towers
						stacks = 5
					}
					location = title:b_peremyshl.title_province
					inheritable = no
				}
				spawn_army = {
					name = "Hunnic Invaders"
					levies = 2000
					men_at_arms = {
						type = light_horsemen
						stacks = 10
					}
					men_at_arms = {
						type = horse_archers
						stacks = 10
					}
					men_at_arms = {
						type = light_footmen
						stacks = 10
					}
					men_at_arms = {
						type = siege_towers
						stacks = 5
					}
					location = title:b_stoenesti.title_province
					inheritable = no
				}
			}
			character:990000 ?= {
				spawn_army = {
					name = "Hunnic Invaders"
					levies = 2000
					men_at_arms = {
						type = light_horsemen
						stacks = 10
					}
					men_at_arms = {
						type = horse_archers
						stacks = 10
					}
					men_at_arms = {
						type = siege_towers
						stacks = 5
					}
					location = capital_province
					inheritable = no
				}
			}
			character:yujiulu_072 ?= {
				add_prestige = 500
				spawn_army = {
					name = "Rouran Invaders"
					levies = 1000
					men_at_arms = {
						type = light_horsemen
						stacks = 3
					}
					men_at_arms = {
						type = horse_archers
						stacks = 3
					}
					men_at_arms = {
						type = siege_towers
						stacks = 2
					}
					location = capital_province
					inheritable = yes
				}
			}
		}
	}
}

"common/on_action/TFE_title_on_actions.txt" = {
	{
		if = {
			limit = {
				scope:title = title:k_ostrogoths
				root = { is_greek_or_roman = no }
				NOT = { exists = global_var:gothic_war_won }
				character:992020 = {
					is_alive = yes
					NOT = {
						THIS = root.mother
					}
				}
				OR = {
					debug_log_details = "Check Conditions"
					#root = { has_active_diarchy = yes }
					#scope:title.holder = { has_active_diarchy = yes }
					root = { diarch = character:992020 }
					scope:title.holder = { diarch = character:992020 }
					#character:992020 = { is_diarch = yes }
					#character:992020 = { is_designated_diarch = yes }
					character:992020 = { is_diarch_of_target = root }
					character:992020 = { is_diarch_of_target = scope:title.holder }
				}
			}
			scope:title.holder = {
				trigger_event = {
					id = germanic_events.0019
					days = 1
				}
			}
		}
	}
}

"common/on_action/TFE_yearly_on_actions.txt" = {
	{
		if = {
			limit = {
				current_date > 400.1.1
				current_date < 450.1.1
				NOT = { has_global_variable = attila_spawn }
				title:e_hunnic_empire.holder = {
					is_adult = yes
				}
			}
			random = {
				chance = 30
				modifier = {
					add = 20
					current_date >= 405.1.1
				}
				modifier = {
					add = 20
					current_date >= 410.1.1
				}
				modifier = {
					add = 10
					current_date >= 415.1.1
				}
				set_global_variable = {
					name = attila_spawn
					value = yes
				}
				trigger_event = {
					id = steppe.6666
					days = { 1 2 }
				}
			}
		}
		if = {
			limit = {
				current_date > 533.1.1
				NOT = { has_global_variable = gothic_war_cycle_active }
				exists = title:e_byzantium.holder
				exists = title:k_ostrogoths.holder
				exists = title:k_italy.holder
				title:k_ostrogoths.holder = title:k_italy.holder
				title:k_ostrogoths.holder = {
					is_independent_ruler = yes
				}
				character:992020 = {
					is_alive = yes
					liege = title:k_ostrogoths.holder
				}
				title:k_ostrogoths.holder = {
					has_active_diarchy = yes
					diarch = character:992020
				}
			}
			random = {
				chance = 10
				modifier = {
					add = 10
					current_date >= 534.1.1
				}
				modifier = {
					add = 10
					current_date >= 535.1.1
				}
				modifier = {
					add = 15
					current_date >= 536.1.1
				}
				modifier = {
					add = 15
					current_date >= 537.1.1
				}
				modifier = {
					add = 15
					current_date >= 538.1.1
				}
				title:e_byzantium.holder = {
					trigger_event = {
						id = germanic_events.0032
						days = 1
					}
				}
				set_global_variable = {
					name = gothic_war_cycle_active
					value = yes
				}
				set_global_variable = {
					name = amalasuntha_coup_unlock
					value = yes
				}
			}
		}
		if = {
			limit = {
				current_date > 533.1.1
				NOT = { exists = title:k_ostrogoths.holder }
				exists = title:e_byzantium.holder
				has_global_variable = gothic_war_won
				#NOT = { has_global_variable = has_eternal_peace }
				NOT = { has_global_variable = gothic_war_stalemate }
				title:e_byzantium.holder = {
					any_vassal_or_below = {
						culture = { has_cultural_pillar = heritage_east_germanic }
						any_held_title = {
							OR = {
								tier = tier_county
								tier = tier_duchy
							}
							OR = {
								kingdom = title:k_italy
								kingdom = title:k_italia_annonariae
								kingdom = title:k_italia_suburbicariae
							}
						}
					}
				}
			}
			random = {
				chance = 20
				modifier = {
					add = 10
					current_date >= 540.1.1
				}
				modifier = {
					add = 10
					current_date >= 545.1.1
				}
				modifier = {
					add = 10
					current_date >= 550.1.1
				}
				modifier = {
					add = 30
					character:992029 = {
						is_alive = yes
						age > 15
						OR = {
							is_landed = yes
							title:e_byzantium.holder = {
								any_vassal_or_below = {
									exists = primary_heir
									primary_heir = character:992029
								}
							}
						}
						top_liege = title:e_byzantium.holder
					}
				}
				trigger_event = {
					id = germanic_events.0028
					days = 1
				}
			}
		}
	}
	
	{
		if = {
			limit = {
				AND = {
					game_start_date <= 406.1.1
					current_date >= 406.1.1
					NOT = { exists = global_var:marcus_usurper }
					title:e_western_roman_empire = {
						is_title_created = yes
					}
					title:e_western_roman_empire = {
						OR = {
							any_in_de_facto_hierarchy = {
								THIS = title:k_britannia
							}
							holder = {
								has_title = title:k_britannia
							}
						}
					}
					character:BUsuprer_01 = {
						is_alive = yes
						NOT = {
							has_title = title:k_britannia
						}
					}
				}
			}
			
			character:BUsuprer_01 = {
				trigger_event = briton.0008
				set_global_variable = {
					name = marcus_usurper
					value = yes
				}
			}
		}
	}
	
	{
		if = {
			limit = {
				current_date >= 400.1.1
				NOT = { has_global_variable = radagaisus_has_invaded }
				current_date <= 410.1.1
				NOT = { exists = title:k_goths.holder }
				character:radagaisian_02 = {
					is_alive = yes
				}
			}
			random = {
				chance = 5
				modifier = {
					add = 15
					current_date >= 401.1.1
				}
				modifier = {
					add = 30
					current_date >= 403.1.1
				}
				modifier = {
					add = 40
					current_date >= 405.1.1
				}
				modifier = {
					add = 10
					current_date >= 406.1.1
				}
				set_global_variable = {
					name = radagaisus_has_invaded
					value = yes
				}
				trigger_event = {
					id = gothic_wars.0011
					days = { 30 50 }
				}
			}
		}

		if = {
			limit = {
				current_date >= 400.1.1
				has_global_variable = radagaisus_has_invaded
				NOT = { has_global_variable = goth_migrations }
				current_date <= 420.1.1
			}
			random = {
				chance = 20
				modifier = {
					add = 10
					current_date >= 405.1.1
				}
				modifier = {
					add = 20
					current_date >= 407.1.1
				}
				modifier = {
					add = 40
					current_date >= 409.1.1
				}
				modifier = {
					add = 10
					current_date >= 411.1.1
				}
				set_global_variable = {
					name = goth_migrations
					value = yes
				}
				trigger_event = gothic_wars.0022
				trigger_event = gothic_wars.0023
				trigger_event = gothic_wars.0024
				trigger_event = gothic_wars.0025
			}
		}

		if = {
			limit = {
				game_start_date = 476.9.4
				NOT = { has_global_variable = clovis_invasion }
				OR = {
					AND = {
						character:997004 = {
							is_alive = yes
							is_landed = yes
							is_independent_ruler = yes
							NOT = {
								has_title = title:k_france
							}
							trigger_if = {
								limit = {
									title:k_france = {
										is_title_created = yes
									}
								}
								NOT = {
									OR = {
										is_allied_to = title:k_france.holder
										AND = {
											exists = var:my_suzerain
											var:my_suzerain = title:k_france.holder
											var:my_suzerain = {
												OR = {
													is_target_in_variable_list = { name = non_permanent_tributaries target = prev }
													is_target_in_variable_list = { name = permanent_tributaries target = prev }
												}
											}
										}
									}
								}
							}
						}
						character:997005 = {
							NOT = {
								has_title = title:k_france
							}
						}
					}
					AND = {
						character:997005 = {
							is_alive = yes
							is_landed = yes
							is_independent_ruler = yes
							NOT = {
								has_title = title:k_france
							}
						}
						character:997004 = {
							NOT = {
								has_title = title:k_france
							}
						}
					}
				}
				AND = {
					title:k_france = {
						is_title_created = yes
					}
					title:k_france.holder = {
						culture = culture:gallo_roman
					}
				}
				current_date <= 500.1.1
			}
			random = {
				chance = 0
				modifier = {
					add = 5
					current_date >= 478.1.1
				}
				modifier = {
					add = 10
					current_date >= 479.1.1
				}
				modifier = {
					add = 35
					current_date >= 480.1.1
				}
				modifier = {
					add = 50
					current_date >= 481.1.1
				}
				set_global_variable = {
					name = clovis_invasion
					value = yes
				}
				if = {
					limit = {
						character:997004 = {
							is_alive = yes
							is_landed = yes
							is_independent_ruler = yes
						}
					}
					character:997004 = {
						trigger_event = germanic_events.0003
					}
				}
				else_if = {
					limit = {
						character:997005 = {
							is_alive = yes
							is_landed = yes
							is_independent_ruler = yes
						}
					}
					character:997005 = {
						trigger_event = germanic_events.0003
					}
				}
			}
		}
	}

	{
		if = {
			limit = {
				current_date >= 533.1.1
				current_date <= 545.1.1
				is_target_in_global_variable_list = {
					name = unavailable_unique_decisions
					target = flag:recall_belisarius
				}
				is_target_in_global_variable_list = {
					name = unavailable_unique_decisions
					target = flag:vandalic_aftermath_vassals
				}
				NOT = { has_global_variable = berber_revolt }
				exists = title:e_byzantium.holder
				title:e_byzantium.holder = {
					any_vassal_or_below = {
						highest_held_title_tier > tier_barony
						capital_province = { geographical_region = custom_roman_africae }
						OR = {
							culture = { has_cultural_pillar = heritage_berber }
							culture = culture:mauro_roman
						}
					}
				}
			}
			set_global_variable = {
				name = berber_revolt
				value = yes
			}
			trigger_event = {
				id = western_roman.0072
				days = 90
			}
		}
	}
}

"common/on_action/death.txt" = {
	{
		# Fix gods-damned Bavaria splitting from East Francia in an ugly fashion in 867.
		if = {
			limit = {
				# Make sure we're looking at the right guy & that the circumstances haven't changed too much.
				this = character:90107
				highest_held_title_tier = tier_kingdom
				has_realm_law = confederate_partition_succession_law
				# Bavaria should be in a fit state for interfering with the handout order.
				title:k_bavaria = {
					OR = {
						is_title_created = no
						holder = root
					}
					any_in_de_jure_hierarchy = {
						tier = tier_county
						# More than 50%.
						count >= 22
						holder = {
							any_liege_or_above = { this = root }
						}
					}
				}
				NOT = { has_primary_title = title:k_bavaria }
				# Players can sort this themselves: you just need to have Bavaria as your primary title and it's all fine.
				is_ai = yes
			}
			# If we've got no Bavaria, create it.
			if = {
				limit = {
					title:k_bavaria = { is_title_created = no }
				}
				create_title_and_vassal_change = {
					type = created
					save_scope_as = change
				}
				title:k_bavaria = {
					change_title_holder = {
						holder = root
						change = scope:change
					}
				}
				resolve_title_and_vassal_change = scope:change
			}
			# Then switch around.
			set_primary_title_to = title:k_bavaria
		}
	}
}

"common/on_action/diarchy_on_action.txt" = {
	{
		if = {
			limit = {
				scope:old_diarch = character:992020
				exists = title:e_byzantium.holder
				NOT = { has_global_variable = gothic_war_cycle_active }
				NOT = { has_global_variable = gothic_war_cycle_prep }
			}
			if = {
				limit = {
					character:992020 = {
						is_alive = no
					}
				}
				title:e_byzantium.holder = {
					trigger_event = {
						id = germanic_events.0023
						days = 1
					}
				}
			}
			else_if = {
				limit = {
					root = {
						mother = character:992020
					}
				}
				root = {
					trigger_event = {
						id = germanic_events.0021
						days = 1
					}
				}
				title:e_byzantium.holder = {
					trigger_event = {
						id = germanic_events.0022
						days = 1
					}
				}
			}
			else_if = {
				limit = {
					NOT = {
						root = {
							mother = character:992020
						}
					}
				}
				root = {
					trigger_event = {
						id = germanic_events.0020
						days = 1
					}
				}
				title:e_byzantium.holder = {
					trigger_event = {
						id = germanic_events.0022
						days = 1
					}
				}
			}
		}
	}
}

"common/on_action/title_on_actions.txt" = {
	{
		# Am I The Chad?
		if = {
			limit = { root = character:easteregg_chad_uhl }
			set_house = house:house_chad_uhl
		}
	}
}

"common/on_action/east_asia_flavor_on_actions.txt" = {
	{
on_game_start = {
	on_actions = {
		on_TFE_east_asia_start
	}
}

on_TFE_east_asia_start = {
	effect = {
		character:western_liang_043 ?= {
			if = {
				limit = {
					is_alive = yes
					is_landed = yes
				}
				trigger_event = {
					id = liang.0012
					days = { 365 2190 }
				}
			}
		}
	}
}
	}
}

"common/scripted_effects/TFE_effects.txt" = {
	{
		copy_inheritable_appearance_from = character:990000
	}
	{
			NOT = { title:c_trapani.holder = character:belisarius_001 }
	}
}

"common/scripted_triggers/tfe_culture_triggers.txt" = {
	{
		dynasty = dynasty:nuvelan
	}
}

"gfx/portraits/portrait_modifiers/50_hairstyles_scripted_characters.txt" = {
	{
            	modifier = {
               	add = 999
                exists = this
		        exists = character:aksum_17 #eon
		        this = character:aksum_17 #eon
	        }
	}
	{
            	modifier = {
               	add = 999
                exists = this
		        exists = character:himyarite_30 #Abraha
		        this = character:himyarite_30 #Abraha
	        }
	}
	{
            modifier = {
                add = 999
		        exists = this
                exists = character:142 #robert_curthose
                this = character:142 #robert_curthose
            }
	}
	{
            modifier = {
                add = 999
                exists = this
                exists = character:70515  #Zeno
                this = character:70515  #Zeno
            }
	}
	{
            modifier = {
                add = 999
                exists = this
                exists = character:vigg_04 #Hengest
                this = character:vigg_04 #Hengest
            }
	}
	{
            modifier = {
                add = 999
                exists = this
                exists = character:syagri_06 #Syagrus
                this = character:syagri_06 #Syagrus
            }
	}
	{
	    modifier = {
                add = 999
                exists = this
                exists = character:rugian_03 #Feletheus
                this = character:rugian_03 #Feletheus
            }
	}
	{
            modifier = {
                add = 999
				exists = this
				exists = character:6878 #jarl_haesteinn
				this = character:6878 #jarl_haesteinn
            }
	}
	{
            modifier = {
                add = 999
                exists = this
                exists = character:aelling_01 #Aelle
                this = character:aelling_01 #Aelle
            }
	}

	{
            modifier = {
                add = 999
                exists = this
                exists = character:easteregg_elisabeth_gangenes
                this = character:easteregg_elisabeth_gangenes
            }
	}
	{
            modifier = {
                add = 999
				exists = this
				exists = character:7757 #duchess_matilda
				this = character:7757 #duchess_matilda
            }
            modifier = {
                add = 999
				exists = this
                exists = character:102505 #queen_ingebjorg
                this = character:102505 #queen_ingebjorg
            }
            modifier = {
                add = 999
				exists = this
                exists = character:765 #princess_swietoslawa
                this = character:765 #princess_swietoslawa
            }
            modifier = {
               	add = 999
                exists = this
                exists = character:930551279 #eudoxia
                this = character:930551279 #eudoxia
            }
            modifier = {
               	add = 999
                exists = this
                exists = character:placidia_01 #placidia
                this = character:placidia_01 #placidia
            }
            modifier = {
               	add = 999
                exists = this
                exists = character:900065 #serena
                this = character:900065 #serena
            }
		modifier = {
			add = 999
                	exists = this
                	exists = character:992020 #Amalasuntha
                	this = character:992020 #Amalasuntha
		}
 		modifier = {
			add = 999
                	exists = this
                	exists = character:992024 #Matasuntha
                	this = character:992024 #Matasuntha
		}
	}
	{
            modifier = {
                add = 999
				exists = this
				exists = character:108501 #infanta_urraca
				this = character:108501 #infanta_urraca
            }
            modifier = {
                add = 999
				exists = this
                exists = character:131 #eadgifu_the_fair
                this = character:131 #eadgifu_the_fair
            }
	}
	{
            modifier = {
                add = 999
				exists = this
                exists = character:633 #queen_yelizaveta
                this = character:633 #queen_yelizaveta
            }
	}
	{
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_bianca_savazzi
                this = character:easteregg_bianca_savazzi
            }
            modifier = {
            	add = 999
            	exists = this
				exists = character:easteregg_claudia_baldassi
				this = character:easteregg_claudia_baldassi
            }
	}
	{
            modifier = {
                add = 999
				exists = this
                exists = character:6863 #ingrid_bjornsdottir
                this = character:6863 #ingrid_bjornsdottir
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_linnea_thimren
                this = character:easteregg_linnea_thimren
            }
	}
	{
            modifier = {
                add = 999
				exists = this
                exists = character:6839 #iliana_of_uppland
                this = character:6839 #iliana_of_uppland
            }
            modifier = {
                add = 999
                exists = this
                exists = character:161257 #queen_wyszeslawa
                this = character:161257 #queen_wyszeslawa
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_steacy_mcilwham
                this = character:easteregg_steacy_mcilwham
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_katya_boestad
                this = character:easteregg_katya_boestad
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_tegan_harris
                this = character:easteregg_tegan_harris
            }
			modifier = {
                add = 999
				exists = this
                exists = character:easteregg_bahar_shefket
                this = character:easteregg_bahar_shefket
            }
            modifier = {
                add = 999
                exists = this
                exists = character:easteregg_alexia_belfort
                this = character:easteregg_alexia_belfort
            }
	}
	{
            modifier = {
                add = 999
                exists = this
                exists = character:997005 #Chlodovech
                this = character:997005 #Chlodovech
            }
		modifier = {
		add = 999
		exists = character:997013 #Chlothar
		this = character:997013 #Chlothar
	    }
            modifier = {
                add = 999
                exists = this
                exists = character:997015 #Theodobert
                this = character:997015 #Theodobert
            }
	}
	{
            modifier = {
                add = 999
				exists = this
                exists = character:123 #queen_ealdgyth
                this = character:123 #queen_ealdgyth
            }
            modifier = {
                add = 999
				exists = this
                exists = character:367 #duchess_mathilde
                this = character:367 #duchess_mathilde
        }
	}
	{
            modifier = {
                add = 999
                exists = this
                exists = character:145072 #Focas
                this = character:145072 #Focas
            }
            modifier = {
                add = 999
                exists = this
                exists = character:145071 #Heraclius
                this = character:145071 #Heraclius
            }
            modifier = {
                add = 999
                exists = this
                exists = character:armenian_01 #Narses
                this = character:armenian_01 #Narses
            }
            modifier = {
                add = 999
                exists = this
                exists = character:greek_17 #Plutarch
                this = character:greek_17 #Plutarch
            }
	}
	{
            modifier = {
                add = 999
				exists = this
				exists = character:6448 #count_eudes
				this = character:6448 #count_eudes
            }
            modifier = {
                add = 999
				exists = this
                exists = character:107500 #king_sancho
                this = character:107500 #king_sancho
            }
            modifier = {
                add = 999
				exists = this
                exists = character:214 #king_philippe
                this = character:214 #king_philippe
            }
            modifier = {
                add = 999
				exists = this
                exists = character:146 #william_the_red
                this = character:146 #william_the_red
            }
	}
	{
            modifier = {
                add = 999
				exists = this
				exists = character:163112 #halfdan_whiteshirt
				this = character:163112 #halfdan_whiteshirt
            }
            modifier = {
                add = 999
				exists = this
                exists = character:30228 #king_louis
                this = character:30228 #king_louis
            }
            modifier = {
                add = 999
				exists = this
                exists = character:984 #king_malcom
                this = character:984 #king_malcom
            }
            modifier = {
                add = 999
				exists = this
                exists = character:212892 #ota_the_handsome
                this = character:212892 #ota_the_handsome
            }
            modifier = {
                add = 999
                exists = this
                exists = character:762 #king_boleslaw
                this = character:762 #king_boleslaw
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_joel_hansson
                this = character:easteregg_joel_hansson
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_peter_johannesson
                this = character:easteregg_peter_johannesson
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_petter_vilberg
                this = character:easteregg_petter_vilberg
            }

             modifier = {
                add = 999
                exists = this
                exists = character:168137
                this = character:168137
            }
            modifier = {
                add = 999
                exists = this
                exists = character:200290 #Atawulf
                this = character:200290 #Arawulf
            }
            modifier = {
                add = 999
                exists = this
                exists = character:180618 #Bahram
                this = character:180618 #Bahram
            }
            modifier = {
                add = 999
                exists = this
                exists = character:997004 #Childeric
                this = character:997004 #Childeric
            }
            modifier = {
                add = 999
                exists = this
                exists = character:997009 #Theodoric Meroving
                this = character:997009 #Theodoric Meroving
            }
            modifier = {
                add = 999
                exists = this
                exists = character:997011 #Chlodomir
                this = character:997011 #Chlodomir
            }
	}
	{
            modifier = {
                add = 999
				exists = this
				exists = character:3924 #emir_yahya
				this = character:3924 #emir_yahya
            }
            modifier = {
                add = 999
				exists = this
                exists = character:106000 #king_antso
                this = character:106000 #king_antso
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_alexander_oltner
                this = character:easteregg_alexander_oltner
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_ismael_serrano
                this = character:easteregg_ismael_serrano
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_christian_daflos
                this = character:easteregg_christian_daflos
            }
            modifier = {
                add = 999
		exists = this
                exists = character:70517  #Leo
                this = character:70517  #Leo
            }
           modifier = {
                add = 999
                exists = this
                exists = character:mauro_roman_kings_02  #Massonas
                this = character:mauro_roman_kings_02  #Massonas
            }
	}
	{
            modifier = {
                add = 999
                exists = this
                exists = character:205141 #Ceredig
                this = character:205141 #Ceredig
            }
            modifier = {
                add = 999
                exists = this
                exists = character:70512 #Justinian
                this = character:70512 #Justinian
            }
            modifier = {
                add = 999
                exists = this
                exists = character:cappadocia_07 #Ioannes
                this = character:cappadocia_07 #Ioannes
            }
	}
	{
            modifier = {
                add = 999
				exists = this
                exists = character:quadi_04 # Hermerich of the Quadi
                this = character:quadi_04 # Hermerich of the Quadi
            }
	}
	{
            modifier = {
                add = 400
                exists = this
				exists = character:83355 #petty_king_murchad
				this = character:83355 #petty_king_murchad
            }
            modifier = {
                add = 999
				exists = this
                exists = character:109500 #king_garcia
                this = character:109500 #king_garcia
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_henrik_fahraeus
                this = character:easteregg_henrik_fahraeus
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_jakub_potapczyk
                this = character:easteregg_jakub_potapczyk
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_petter_lundh
                this = character:easteregg_petter_lundh
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_max_weltz
                this = character:easteregg_max_weltz
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_max_collin
                this = character:easteregg_max_collin
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_martin_anward
                this = character:easteregg_martin_anward
            }
            modifier = {
                add = 999
                exists = this
		        exists = character:6392 #charlemagne
		        this = character:6392 #charlemagne
            }
	}
	{
            modifier = {
                add = 999
				exists = this
				exists = character:522 #duke_vratislav
				this = character:522 #duke_vratislav
            }
            modifier = {
                add = 999
				exists = this
                exists = character:108500 #king_alfonso
                this = character:108500 #king_alfonso
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_sean_hughes
                this = character:easteregg_sean_hughes
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_paul_depre
                this = character:easteregg_paul_depre
            }
            modifier = {
                add = 999
                exists = this
                exists = character:easteregg_zack_holmgren
                this = character:easteregg_zack_holmgren
            }
            modifier = {
                add = 999
                exists = this
                exists = character:159431 #Conan Meriadoc
                this = character:159431 #tiberius
            } 
            modifier = {
               	add = 999
                exists = this
		        exists = character:999103 #king_alaric
		        this = character:999103 #king_alaric
            }
            modifier = {
                add = 999
                exists = this
                exists = character:159038 #Coel
                this = character:159038 #ACoel
            }
            modifier = {
                add = 999
                exists = this
                exists = character:constantinus_05 #Ambrosius
                this = character:constantinus_05 #Ambrosius
            }
            modifier = {
                add = 999
                exists = this
                exists = character:mauri_42 #Iabdas
                this = character:mauri_42 #Iabdas
            }
            modifier = {
                add = 999
                exists = this
                exists = character:997002 #Chlodio
                this = character:997002 #Chlodio
            }
	}
	{
            modifier = {
                add = 999
				exists = this
				exists = character:easteregg_james_beaumont
				this = character:easteregg_james_beaumont
            }
            modifier = {
                add = 999
                exists = this
                exists = character:maldras_06 #Hermenerich
                this = character:maldras_06 #Hermenerich
            }
	    modifier = {
                add = 999
                exists = this
                exists = character:982001 #Abu Karib
                this = character:982001 #Abu Karib
            }
	    modifier = {
                add = 999
                exists = this
                exists = character:xionite_001 #Kidara
                this = character:xionite_001 #Kidara
            }
	    modifier = {
                add = 999
                exists = this
                exists = character:samo_01  #Samo
                this = character:samo_01  #Samo
            }
	}
	{
            modifier = {
                add = 999
				exists = this
				exists = character:90104 #charles_the_bald
				this = character:90104 #charles_the_bald
            }
            modifier = {
                add = 999
				exists = this
                exists = character:1316 #emperor_heinrich
                this = character:1316 #emperor_heinrich
            }
            modifier = {
                add = 999
                exists = this
                exists = character:992016 #theodoric_the_great
                this = character:992016 #theodoric_the_great
            }
            modifier = {
                add = 999
		        exists = this
                exists = character:83432 #Eochaid
                this = character:83432 #Eochaid
            }
	}
	{
            modifier = {
             modifier = {
                add = 999
				exists = this
                exists = character:easteregg_nils_wadensten
                this = character:easteregg_nils_wadensten
            }
              	add = 999
                exists = this
		        exists = character:900062 #stilicho
		        this = character:900062 #stilicho
            }
            modifier = {
                add = 999
                exists = this
                exists = character:70519  #Imperator Arcadius I
                this = character:70519  #Imperator Arcadius I
	        }
            modifier = {
                add = 999
                exists = this
                exists = character:145227 #Imperator Honorius I
                this = character:145227 #Imperator Honorius I
	        }
            modifier = {
                add = 999
                exists = this
                exists = character:nepos_02  #Nepos
                this = character:nepos_02  #Nepos
	        }
            modifier = {
               	add = 999
                exists = this
		exists = character:145237 #julian_the_apostate
		this = character:145237 #julian_the_apostate
            }
            modifier = {
                add = 999
                exists = this
                exists = character:londinium_01 #Riothamus
                this = character:londinium_01 #Riothamus
            }
	    modifier = {
               	add = 999
                exists = this
		exists = character:arsacid_58 #vramshapuh
		this = character:arsacid_58 #vramshapuh
	    }
            modifier = {
                add = 999
                exists = this
                exists = character:vandals_005 #Hilderic
                this = character:vandals_005 #Hilderic
            }
            modifier = {
                add = 999
                exists = this
                exists = character:992022 #Theodahad
                this = character:992022 #Theodahad
            }
            modifier = {
                add = 999
                exists = this
                exists = character:991004 #Mundus
                this = character:991004 #Mundus
            }
             modifier = {
                add = 999
                exists = this
                exists = character:greek_20 #Proklos
                this = character:greek_20 #Proklos
            }
	}
	{
		modifier = {
			add = 999
                	exists = this
                	exists = character:nuvelan_11 #Gildo
                	this = character:nuvelan_11 #Gildo
		}
		modifier = {
			add = 999
                	exists = this
                	exists = character:aksum_16 #Ouazeba
                	this = character:aksum_16 #Ouazeba
		}
	}
	{
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_magne_skjaeran
                this = character:easteregg_magne_skjaeran
            }
	}
	{
           modifier = {
            modifier = {
                add = 999
				exists = this
				exists = character:163111 #ivar_the_boneless
				this = character:163111 #ivar_the_boneless
            }
            modifier = {
                add = 999
				exists = this
                exists = character:102531 #harald_hardrade
                this = character:102531 #harald_hardrade
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_joacim_carlberg
                this = character:easteregg_joacim_carlberg
            }
            modifier = {
				add = 999
				exists = this
				exists = character:easteregg_struan_mccallum
				this = character:easteregg_struan_mccallum
			}
                add = 999
                exists = this
		        exists = character:999105 #athaulf
		        this = character:999105 #athaulf
            }
            modifier = {
                add = 999
                exists = this
                exists = character:997003 #Merovech
                this = character:997003 #Merovech
            }
            modifier = {
                add = 999
                exists = this
                exists = character:992003 #Hermanaric
                this = character:992003 #Hermanaric
            }
	}
	{
            modifier = {
                add = 999
				exists = this
				exists = character:163110 #sigurdr_snake_in_the_eye
				this = character:163110 #sigurdr_snake_in_the_eye
            }
            modifier = {
                add = 999
                exists = this
                exists = character:144000 #haraldr_fairhair
                this = character:144000 #haraldr_fairhair
            }
            modifier = {
                add = 999
				exists = this
                exists = character:40605 #rurik_rurikid
                this = character:40605 #rurik_rurikid
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_jonas_wickerstrom
                this = character:easteregg_jonas_wickerstrom
            }
            modifier = {
                add = 999
                exists = this
		        exists = character:900016 #faramund
		        this = character:900016 #faramund
            }
	}
	{
            modifier = {
                add = 999
				exists = this
				exists = character:163108 #bjorn_ironside
				this = character:163108 #bjorn_ironside
            }
            modifier = {
                add = 999
				exists = this
                exists = character:140 #william_the_bastard
                this = character:140 #william_the_bastard
            }
            modifier = {
                add = 999
				exists = this
                exists = character:101515 #king_svend
                this = character:101515 #king_svend
            }
            modifier = {
                add = 999
				exists = this
                exists = character:42018 #karlmann
                this = character:42018 #karlmann
            }
	}
	{
            modifier = {
                add = 999
				exists = this
				exists = character:159137 #almos_arpad
				this = character:159137 #almos_arpad
            }
	}
	{
	        modifier = {
                add = 999
                exists = this
                exists = character:alchonid_005 #Khingila
                this = character:alchonid_005 #Khingila
            }
	        modifier = {
                add = 999
                exists = this
                exists = character:hephthalite_misc_017 #Katulf
                this = character:hephthalite_misc_017 #Katulf
            }
	}
	{
            modifier = {
                add = 999
                exists = this
                exists = character:belisarius_001 #Belisarius
                this = character:belisarius_001 #Belisarius
            }
	}
	{
            modifier = {
                add = 999
                exists = this
                exists = character:200284 #euric
                this = character:200284 #euric
            }
            modifier = {
                add = 999
                exists = this
                exists = character:180628 #Khosrau
                this = character:180628 #Khosrau
            }
            modifier = {
                add = 999
                exists = this
                exists = character:mauri_36 #Masties
                this = character:mauri_36 #Masties
            }
	}
	{
            modifier = {
                add = 999
                exists = this
                exists = character:danis0005
                this = character:danis0005
            }

            modifier = {
                add = 999
                exists = this
                exists = character:surunbaqi0001
                this = character:surunbaqi0001
            }
            modifier = {
                add = 999
                exists = this
                exists = character:107590 #el_cid
                this = character:107590 #el_cid
            }
            modifier = {
                add = 999
                exists = this
                exists = character:159012 #Cadwallon
                this = character:159012 #Cadwallon
            }
            modifier = {
                add = 999
                exists = this
                exists = character:ashina_03 #Tuwu
                this = character:ashina_03 #Tuwu
            }
            modifier = {
                add = 999
                exists = this
                exists = character:ashina_05 #Istemi
                this = character:ashina_05 #Istemi
            }
	}
	{
            modifier = {
                add = 999
                exists = this
                exists = character:200280 #Theodis
                this = character:200280 #Theodis
            }
            modifier = {
                add = 999
                exists = this
                exists = character:ashina_04 #Bumin
                this = character:ashina_04 #Bumin
            }
            modifier = {
                add = 999
                exists = this
                exists = character:waegmunding_2 #Beowulf
                this = character:waegmunding_2 #Beowulf
            }
	}
	{
            modifier = {
                add = 999
                exists = this
                exists = character:996002 #odoacer
                this = character:996002 #odoacer
            }
            modifier = {
                add = 999
                exists = this
                exists = character:992023 #Athalaric
                this = character:992023 #Athalaric
            }
            modifier = {
                add = 999
                exists = this
                exists = character:992063 #Fritigern
                this = character:992063 #Fritigern
            }
	}
	{
            modifier = {
                add = 999
                exists = this
                exists = character:900016 #Faramund
                this = character:900016 #Faramund
            }
		modifier = {
		add = 999
		exists = character:990006 #Attila
		this = character:990006 #Attila
	    }
            modifier = {
                add = 999
                exists = this
                exists = character:997012 #Childebert
                this = character:997012 #Childebert
            }
	}
	{
            modifier = {
                add = 999
                exists = this
                exists = character:vandals_012 #Gelimer
                this = character:vandals_012 #Gelimer
            }
            modifier = {
                add = 999
                exists = this
                exists = character:marshalnsc 
                this = character:marshalnsc 
            }
	}
	{
            modifier = {
                add = 999
				exists = this
				exists = character:168314 #waldrada
				this = character:168314 #waldrada
            }
            modifier = {
                add = 999
				exists = this
                exists = character:1183 #empress_bertha
                this = character:1183 #empress_bertha
            }
	}
	{
            modifier = {
                add = 999
				exists = this
			    exists = character:251187 #daurama_daura
			    this = character:251187 #daurama_daura
            }
	}
	{
             modifier = {
                add = 999
                exists = this
                exists = character:73683
                this = character:73683
            }
             modifier = {
                add = 999
                exists = this
                exists = character:vandals_003
                this = character:vandals_003
            }
	}
	{
             modifier = {
                add = 999
                exists = this
                exists = character:73759
                this = character:73759
            }
	}
	{
             modifier = {
                add = 999
				exists = this
				exists = character:73857
				this = character:73857
            }

            modifier = {
                add = 999
                exists = this
                exists = character:70292
                this = character:70292
            }
	}
	{
             modifier = {
                add = 999
                exists = this
                exists = character:73783
                this = character:73783
            }
	}
}

"common/casus_belli_types/TFE_event_wars.txt" = {
	{
independence_war_vandal = {
	icon = independence_faction_war
	group = event
	ai = no # AI targeting is handled through game_rule events.

	allow_hostages = no
	allowed_against_character = {
		OR = {
			scope:attacker = {
				liege = scope:defender
			}
			scope:attacker = {
				top_liege = scope:defender
			}
		}
	}

	cost = {
		piety = {
			value = 0
		}
		prestige = {
			value = 0
		}
	}

	on_declaration = {
		on_declared_war = yes
		# Remove offending HumSac modifiers.
		scope:attacker = {
			hidden_effect = { fp1_remove_humsac_offended_counties_effect = yes }
		}
		war = {
			every_war_attacker = {
				if = {
					limit = { 
						OR = {
							liege = title:k_africae.holder
							AND = {
								liege = {
									liege = scope:defender
								}
								NOT = {
									faith = liege.faith
								}
							}
						}
					}
					add_character_flag = should_become_independent
				}
			}
		}
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { # Desc for only one player attacker
					scope:attacker = {
						is_local_player = yes
					}
				}
				desc = independence_war_victory_desc_local_player_attacker_alone
			}
			triggered_desc = { # Desc for only one attacker, player defender
				trigger = {
					scope:defender = {
						is_local_player = yes
					}
				}
				desc = player_independence_war_victory_desc_local_player_defender_attacker_alone
			}
			desc = independence_war_victory_desc_local_player_attacker_alone # Desc for a third party involved
		}

	}

	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }

		#EP2 Accolade glory gain from winning against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_med_effect = yes }

		create_title_and_vassal_change = {
			type = independency
			save_scope_as = change
		}
		if = {
			# Free character with the flag
			limit = { exists = war }
			war = {
				every_war_attacker = {
					if = {
						limit = { has_character_flag = should_become_independent }

						create_title_and_vassal_change = {
							type = independency
							save_scope_as = going_independent
							add_claim_on_loss = no
						}
						becomes_independent = {
							change = scope:going_independent
						}

						resolve_title_and_vassal_change = scope:going_independent

						add_truce_both_ways = {
							character = scope:defender
							days = 1825
							war = root.war
							result = victory
						}

						remove_character_flag = should_become_independent

						change_liege_or_become_independent = {
							CHANGE = scope:change
							VASSAL = this
						}

						hidden_effect = {
							set_variable = {
								name = independence_war_former_liege
								value = scope:defender
							}

							save_scope_as = current_member

							# Struggle Catalyst
							if = {
								limit = {
									catalyst_gave_independence_to_powerful_diff_faith_culture_vassal_preliminary_trigger = {
										CHAR1 = scope:defender
										CHAR2 = scope:current_member
									}
									any_character_struggle = {
										involvement = involved
										activate_struggle_catalyst_secondary_character_involvement_involved_trigger = {
											CATALYST = catalyst_gave_independence_to_powerful_diff_faith_culture_vassal
											CHAR = scope:current_member
										}
									}
								}
								every_character_struggle = {
									involvement = involved
									limit = {
										activate_struggle_catalyst_secondary_character_involvement_either_trigger = {
											CATALYST = catalyst_gave_independence_to_powerful_diff_faith_culture_vassal
											CHAR = scope:current_member
										}
									}
									activate_struggle_catalyst = {
										catalyst = catalyst_gave_independence_to_powerful_diff_faith_culture_vassal
										character = scope:defender
									}
								}
							}
						}
					}
				}
			}
		}

		scope:defender = {
			# Struggle Catalyst
			hidden_effect = {
				if = {
					limit = {
						catalyst_gave_independence_to_powerful_diff_faith_culture_vassal_preliminary_trigger = {
							CHAR1 = scope:defender
							CHAR2 = scope:attacker
						}
						any_character_struggle = {
							involvement = involved
							activate_struggle_catalyst_secondary_character_involvement_involved_trigger = {
								CATALYST = catalyst_gave_independence_to_powerful_diff_faith_culture_vassal
								CHAR = scope:attacker
							}
						}
					}
					every_character_struggle = {
						involvement = involved
						limit = {
							activate_struggle_catalyst_secondary_character_involvement_either_trigger = {
								CATALYST = catalyst_gave_independence_to_powerful_diff_faith_culture_vassal
								CHAR = scope:attacker
							}
						}
						activate_struggle_catalyst = {
								catalyst = catalyst_gave_independence_to_powerful_diff_faith_culture_vassal
								character = scope:defender
							}
					}
				}
			}
		}

		resolve_title_and_vassal_change = scope:change

	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = player_independence_war_white_peace_defender_desc
			}
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
					}
				}
				desc = player_independence_war_white_peace_attacker_desc
			}
			desc = player_independence_war_white_peace_desc
		}

	}

	on_white_peace = {
		scope:attacker = {
			show_pow_release_message_effect = yes
			stress_impact = {
 				ambitious = medium_stress_impact_gain
 				arrogant = medium_stress_impact_gain
 			}
		}
		hidden_effect = {
			scope:attacker = {
				add_truce_both_ways = {
					character = scope:defender
					days = 1825
					war = root.war
					result = white_peace
				}
			}
		}

		scope:defender = {
			add_prestige = minor_prestige_value
			stress_impact = {
 				arrogant = medium_stress_impact_gain
 			}
		}
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = player_independence_defeat_defender_desc
			}
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
					}
				}
				desc = player_independence_defeat_attacker_desc
			}
			desc = player_independence_war_defeat_desc
		}

	}

	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }
		scope:defender = {
			add_dread = medium_dread_gain
			# Prestige for Defender
			add_prestige_war_defender_effect = {
				PRESTIGE_VALUE = medium_prestige_value
			}
		}

		if = {
			# Free character with the flag
			limit = { exists = war }
			war = {
				every_war_attacker = {
					save_scope_as = expelled_vandal
					if = {
						limit = { 
							has_character_flag = should_become_independent 
							NOT = { THIS = character:vandals_012 }
						}
						hard_imprison_character_effect = {
							TARGET = this
							IMPRISONER = scope:defender
						}
						scope:defender = {
							add_opinion = {
								target = prev
								modifier = vassal_lost_faction_revolt_war
							}
						}
					}
					if = {
						limit = {
							THIS = character:vandals_012
							title:c_cappadocia.holder = {
								is_ai = yes
							}
						}
						title:c_cappadocia = {
							save_temporary_scope_as = current_county
						}
						create_title_and_vassal_change = {
							type = usurped
							save_scope_as = change
							add_claim_on_loss = no
						}
						scope:current_county = {
							change_title_holder = {
								holder = character:vandals_012
								change = scope:change
								take_baronies = yes
							}
						}
						resolve_title_and_vassal_change = scope:change

						every_vassal = {
							add_to_list = vassals_to_defect
						}

						every_held_title = {
							limit = {
								NOT = { this = title:c_cappadocia }
							}
							add_to_list = titles_to_usurp
						}		

						create_title_and_vassal_change = {
							type = usurped
							save_scope_as = title_change
								add_claim_on_loss = no
						}
						every_in_list = {
							list = titles_to_usurp
							change_title_holder = {
								holder = title:k_africae.holder
								change = scope:title_change
								take_baronies = no
							}
						}
						every_in_list = {
							list = vassals_to_defect
							change_liege = {
								liege = title:k_africae.holder
								change = scope:title_change
							}
						}
						change_liege = {
							liege = title:k_africae.holder.top_liege
							change = scope:title_change
						}
						resolve_title_and_vassal_change = scope:title_change
						character:vandals_012 = {
							add_character_modifier = {
								modifier = peaceful_retirement
							}
							add_trait = content
							change_government = imperial_government
						}
					}
					else_if = {
						limit = {
							THIS = character:vandals_012
						}
						title:c_lower_galatia = {
							save_temporary_scope_as = current_county
						}
						create_title_and_vassal_change = {
							type = usurped
							save_scope_as = change
							add_claim_on_loss = no
						}
						scope:current_county = {
							change_title_holder = {
								holder = character:vandals_012
								change = scope:change
								take_baronies = yes
							}
						}
						resolve_title_and_vassal_change = scope:change

						every_vassal = {
							add_to_list = vassals_to_defect
						}

						every_held_title = {
							limit = {
								NOT = { this = title:c_lower_galatia }
							}
							add_to_list = titles_to_usurp
						}			
	
						create_title_and_vassal_change = {
							type = usurped
							save_scope_as = title_change
								add_claim_on_loss = no
						}
						every_in_list = {
							list = titles_to_usurp
							change_title_holder = {
								holder = title:k_africae.holder
								change = scope:title_change
								take_baronies = no
							}
						}
						every_in_list = {
							list = vassals_to_defect
							change_liege = {
								liege = title:k_africae.holder
								change = scope:title_change
							}
						}
						change_liege = {
							liege = title:k_africae.holder.top_liege
							change = scope:title_change
						}
						resolve_title_and_vassal_change = scope:title_change
						character:vandals_012 = {
							add_character_modifier = {
								modifier = peaceful_retirement
							}
							add_trait = content
							change_government = imperial_government
						}
					}
					if = {
						limit = {
							liege = title:k_africae.holder
							NOT = { THIS = character:vandals_012 }
						}
						save_scope_as = vandal_expel
						scope:defender.top_liege = {
							random_sub_realm_county = {
								limit = {
									kingdom = title:k_orientis
									holder = { 
										is_ai = yes
										realm_size > 1
										NOT = { 
											OR = {
												THIS = primary_title.title_capital_county
												THIS = primary_title.title_capital_county.de_jure_liege
											}
										}
									}
									NOT = {
										is_in_list = vandal_titles_to_usurp
									}
								}
								save_scope_as = county_expel
								add_to_list = vandal_titles_to_usurp

								#create_title_and_vassal_change = {
								#	type = usurped
								#	save_scope_as = change
								#	add_claim_on_loss = no
								#}
								#scope:county_expel = {
								#	change_title_holder = {
								#		holder = scope:expelled_vandal
								#		change = scope:change
								#		take_baronies = yes
								#	}
								#}
								#resolve_title_and_vassal_change = scope:change
							}
							scope:vandal_expel = {
								every_vassal = {
									add_to_list = vassals_to_defect
								}

								every_held_title = {
									limit = {
										NOT = { this = scope:county_expel }
									}
									add_to_list = titles_to_usurp
								}			
	
								create_title_and_vassal_change = {
									type = usurped
									save_scope_as = title_change
									add_claim_on_loss = no
								}
								every_in_list = {
									list = titles_to_usurp
									change_title_holder = {
										holder = title:k_africae.holder
										change = scope:title_change
										take_baronies = no
									}
								}
								every_in_list = {
									list = vassals_to_defect
									change_liege = {
										liege = title:k_africae.holder
										change = scope:title_change
									}
								}
								change_liege = {
									liege = title:k_africae.holder.top_liege
									change = scope:title_change
								}
								resolve_title_and_vassal_change = scope:title_change
							}
							if = {
								limit = {
									scope:vandal_expel = {
										is_landed = no
									}
									character:vandals_012 = {
										is_alive = yes
										is_landed = yes
									}
								}
								character:vandals_012 = {
									add_courtier = scope:vandal_expel
								}
							}
						}
					}
				}
			}
		}
		add_culture_minority_effect = {
			CULTURE = culture:vandal
			SIZE = small
			COUNTY = title:c_upper_khabur
		}
		add_culture_minority_effect = {
			CULTURE = culture:vandal
			SIZE = small
			COUNTY = title:c_amida
		}
		add_culture_minority_effect = {
			CULTURE = culture:vandal
			SIZE = small
			COUNTY = title:c_tall_basma
		}
	}

	on_invalidated_desc = msg_invalidate_war_title

	check_defender_inheritance_validity = no

	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	transfer_behavior = transfer

	war_name = "INDEPENDENCE_WAR_NAME"

	interface_priority = 120

	attacker_wargoal_percentage = 0.8

	max_attacker_score_from_battles = 100
	max_defender_score_from_battles = 50
	
	max_defender_score_from_occupation = 150
	max_attacker_score_from_occupation = 150

	max_ai_diplo_distance_to_title = 500
}
	}
	{
radagaisus_invasion_cb = {
	group = event

	allowed_for_character = {
	}

	allowed_against_character = {
		scope:attacker = {
			ALL_FALSE = {
				top_liege = scope:defender.top_liege
				liege = scope:defender
			}
		}
	}

	combine_into_one = yes

	target_titles = none
	target_title_tier = all
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder
	ai_only_against_neighbors = yes
	defender_ticking_warscore_delay = { years = 2 }

	white_peace_possible = no

	valid_to_start = {
		always = no
	}

	should_invalidate = {
		NOT = {
			any_in_list = {
				list = target_titles
				any_in_de_jure_hierarchy = {
					tier = tier_county
					holder = {
						OR = {
							this = scope:defender
							target_is_liege_or_above = scope:defender
						}
					}
				}
			}
		}
	}

	on_invalidated_desc = msg_religious_war_invalidation_region_message

	on_invalidated = {
	}

	cost = {
	}

	on_declaration = {
		on_declared_war = yes
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = radagaisus_invasion_victory_desc_attacker
			}
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = radagaisus_invasion_victory_desc_defender
			}
			desc = radagaisus_invasion_victory_desc
		}
	}

	on_victory = {
        #EP2 accolade glory gain for winning against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_high_effect = yes }
		scope:attacker = { show_pow_release_message_effect = yes }
		scope:defender = {
			trigger_event = {
				id = gothic_wars.0014
				days = 1
			}
		}

		create_title_and_vassal_change = {
			type = conquest_holy_war
			save_scope_as = change
			add_claim_on_loss = yes
		}
		# go through the dejure hierarchy under target titles, transfer titles with same or worse tolerance holders (their religion equaly or less tolerated than the defender's),
		# take the holder as vassal otherwise and don't go deeper
		every_in_list = {
			list = target_titles
			custom_tooltip = RELIGIOUS_CB_TITLE

			conquest_cb_title_transfer = {
				RELIGIOUS_WAR = yes
			}
		}

		every_in_list = {
			list = vassals_taken
			change_liege = {
				liege = scope:attacker
				change = scope:change
			}
		}
		
		every_in_list = {
			list = titles_taken
			change_title_holder = {
				holder = scope:attacker
				change = scope:change
				take_baronies = yes
			}
		}

		resolve_title_and_vassal_change = scope:change

		# Prestige Progress for the Attacker
		every_in_list = {
			list = target_titles
			scope:attacker = {
				add_prestige_experience = medium_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker
			FAME_BASE = medium_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable)
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = radagaisus_invasion_white_peace_desc_attacker
			}
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = radagaisus_invasion_white_peace_desc_defender
			}
			desc = radagaisus_invasion_white_peace_desc
		}
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = radagaisus_invasion_defeat_desc_attacker
			}
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = radagaisus_invasion_defeat_desc_defender
			}
			desc = radagaisus_invasion_defeat_desc
		}
	}

	on_defeat = {
        #EP2 accolade glory gain for winning against higher ranked enemy
		scope:defender = { accolade_attacker_war_end_glory_gain_high_effect = yes }
		scope:attacker = { show_pow_release_message_effect = yes }

		if = {
			limit = {
				exists = title:k_visigoths.holder
			}
			goths_flee_effect = yes
		}

		# Prestige loss for the attacker
		scope:attacker = {
			save_temporary_scope_as = loser
			pay_short_term_gold_reparations_effect = {
				GOLD_VALUE = 5
			}
			add_prestige = {
				value = major_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for Defender
		scope:defender = {
			add_prestige_war_defender_effect = {
				PRESTIGE_VALUE = major_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:defender
			FAME_BASE = medium_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		lost_radagaisus_invasion_effect = yes

		add_truce_attacker_defeat_effect = yes
		on_lost_aggression_war_discontent_loss = yes
	}

	transfer_behavior = transfer

	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = RADAGAISUS_INVASION_NAME
	war_name_base = RADAGAISUS_INVASION_NAME_BASE
	cb_name = RADAGAISUS_INVASION_CB_NAME

	use_de_jure_wargoal_only = yes
	
	interface_priority = 100
}
	}
	{
			if = {
				limit = {
					character:armenian_02 = {
						is_alive = yes
					}
				}
				add_courtier = character:armenian_02
			}
	}
}

"common/casus_belli_types/TFE_event_wars_overflow.txt" = {
	{
independence_war_berber = {
	icon = independence_faction_war
	group = event
	ai = no # AI targeting is handled through game_rule events.

	allow_hostages = no
	allowed_against_character = {
		OR = {
			scope:attacker = {
				liege = scope:defender
			}
			scope:attacker = {
				top_liege = scope:defender
			}
		}
	}

	cost = {
		piety = {
			value = 0
		}
		prestige = {
			value = 0
		}
	}

	on_declaration = {
		on_declared_war = yes
		# Remove offending HumSac modifiers.
		scope:attacker = {
			spawn_army = {
				name = "Berber Tribesmen"
				levies = 1000
				men_at_arms = {
					type = bowmen
					stacks = 2
				}
				men_at_arms = {
					type = desert_hussar
					stacks = 2
				}
				men_at_arms = {
					type = light_footmen
					stacks = 2
				}
				location = province:4601 #Nemancha
				inheritable = no
				uses_supply = no
				war = scope:war
			}
		}
		scope:attacker = {
			hidden_effect = { fp1_remove_humsac_offended_counties_effect = yes }
		}
		war = {
			every_war_attacker = {
				if = {
					limit = { 
						top_liege = scope:defender
						NOT = { culture = { has_same_culture_heritage = liege.culture } }
					}
					add_character_flag = should_become_independent
				}
			}
		}
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { # Desc for only one player attacker
					scope:attacker = {
						is_local_player = yes
					}
				}
				desc = independence_war_victory_desc_local_player_attacker_alone
			}
			triggered_desc = { # Desc for only one attacker, player defender
				trigger = {
					scope:defender = {
						is_local_player = yes
					}
				}
				desc = player_independence_war_victory_desc_local_player_defender_attacker_alone
			}
			desc = independence_war_victory_desc_local_player_attacker_alone # Desc for a third party involved
		}

	}

	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }

		#EP2 Accolade glory gain from winning against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_med_effect = yes }

		create_title_and_vassal_change = {
			type = independency
			save_scope_as = change
		}
		if = {
			# Free character with the flag
			limit = { exists = war }
			war = {
				every_war_attacker = {
					if = {
						limit = { 
							has_character_flag = should_become_independent
							top_liege = scope:defender
						}

						create_title_and_vassal_change = {
							type = independency
							save_scope_as = going_independent
							add_claim_on_loss = no
						}
						becomes_independent = {
							change = scope:going_independent
						}

						resolve_title_and_vassal_change = scope:going_independent

						add_truce_both_ways = {
							character = scope:defender
							days = 1825
							war = root.war
							result = victory
						}

						remove_character_flag = should_become_independent

						change_liege_or_become_independent = {
							CHANGE = scope:change
							VASSAL = this
						}

						hidden_effect = {
							set_variable = {
								name = independence_war_former_liege
								value = scope:defender
							}

							save_scope_as = current_member

							# Struggle Catalyst
							if = {
								limit = {
									catalyst_gave_independence_to_powerful_diff_faith_culture_vassal_preliminary_trigger = {
										CHAR1 = scope:defender
										CHAR2 = scope:current_member
									}
									any_character_struggle = {
										involvement = involved
										activate_struggle_catalyst_secondary_character_involvement_involved_trigger = {
											CATALYST = catalyst_gave_independence_to_powerful_diff_faith_culture_vassal
											CHAR = scope:current_member
										}
									}
								}
								every_character_struggle = {
									involvement = involved
									limit = {
										activate_struggle_catalyst_secondary_character_involvement_either_trigger = {
											CATALYST = catalyst_gave_independence_to_powerful_diff_faith_culture_vassal
											CHAR = scope:current_member
										}
									}
									activate_struggle_catalyst = {
										catalyst = catalyst_gave_independence_to_powerful_diff_faith_culture_vassal
										character = scope:defender
									}
								}
							}
						}
					}
				}
			}
		}

		scope:defender = {
			# Struggle Catalyst
			hidden_effect = {
				if = {
					limit = {
						catalyst_gave_independence_to_powerful_diff_faith_culture_vassal_preliminary_trigger = {
							CHAR1 = scope:defender
							CHAR2 = scope:attacker
						}
						any_character_struggle = {
							involvement = involved
							activate_struggle_catalyst_secondary_character_involvement_involved_trigger = {
								CATALYST = catalyst_gave_independence_to_powerful_diff_faith_culture_vassal
								CHAR = scope:attacker
							}
						}
					}
					every_character_struggle = {
						involvement = involved
						limit = {
							activate_struggle_catalyst_secondary_character_involvement_either_trigger = {
								CATALYST = catalyst_gave_independence_to_powerful_diff_faith_culture_vassal
								CHAR = scope:attacker
							}
						}
						activate_struggle_catalyst = {
								catalyst = catalyst_gave_independence_to_powerful_diff_faith_culture_vassal
								character = scope:defender
							}
					}
				}
			}
		}
		resolve_title_and_vassal_change = scope:change

	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = player_independence_war_white_peace_defender_desc
			}
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
					}
				}
				desc = player_independence_war_white_peace_attacker_desc
			}
			desc = player_independence_war_white_peace_desc
		}

	}

	on_white_peace = {
		scope:attacker = {
			show_pow_release_message_effect = yes
			stress_impact = {
 				ambitious = medium_stress_impact_gain
 				arrogant = medium_stress_impact_gain
 			}
		}
		hidden_effect = {
			scope:attacker = {
				add_truce_both_ways = {
					character = scope:defender
					days = 1825
					war = root.war
					result = white_peace
				}
			}
		}

		scope:defender = {
			add_prestige = minor_prestige_value
			stress_impact = {
 				arrogant = medium_stress_impact_gain
 			}
		}
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = player_independence_defeat_defender_desc
			}
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
					}
				}
				desc = player_independence_defeat_attacker_desc
			}
			desc = player_independence_war_defeat_desc
		}

	}

	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }
		scope:defender = {
			add_dread = medium_dread_gain
			# Prestige for Defender
			add_prestige_war_defender_effect = {
				PRESTIGE_VALUE = medium_prestige_value
			}
		}
		if = {
			limit = { exists = war }
			war = {
				every_war_attacker = {
					limit = {
						top_liege = scope:defender
					}
					hard_imprison_character_effect = {
						TARGET = this
						IMPRISONER = scope:defender
					}
					scope:defender = {
						add_opinion = {
							target = prev
							modifier = vassal_lost_faction_revolt_war
						}
					}
				}
			}
		}
		if = {
			limit = {
				character:thracio_03 = {
					is_landed = yes
					top_liege = scope:defender
					is_imprisoned = yes
				}
			}
			character:thracio_03 = {
				depose = yes
				release_from_prison = yes
			}
		}
		if = {
			limit = {
				exists = title:k_mauro_roman_kingdom.holder
			}
			title:k_mauro_roman_kingdom.holder = {
				add_courtier = character:thracio_03
			}
			character:thracio_03 = {
				add_unpressed_claim = title:k_mauro_roman_kingdom
			}
		}
		if = {
			limit = {
				war = {
					any_war_attacker = { has_title = title:d_avaritana }
				}
				war = {
					any_war_defender = { has_title = title:d_zaba }
				}
			}
			create_title_and_vassal_change = {
				type = swear_fealty
				save_scope_as = change
				add_claim_on_loss = no
			}
		
			if = {
				limit = {
					title:d_avaritana.holder.primary_title.tier < title:d_zaba.holder.primary_title.tier
				}
				title:d_avaritana.holder = {
					change_liege = {
						liege = title:d_zaba.holder
						change = scope:change
					}
				}
			}
			else = {
				title:d_avaritana.holder = {
					every_held_title = {
						if = {
							limit = {
								tier = title:d_avaritana.holder.primary_title.tier
							}
							change_title_holder = {
								holder = title:d_zaba.holder
								change = scope:change
							}
						}
						else_if = {
							limit = {
								OR = {
									NOT = { exists = scope:secondary_title }
									tier > scope:secondary_title.tier
								}
							}
							save_temporary_scope_as = secondary_title
						}
					}
				}

				title:d_avaritana.holder = {
					if = {
						limit = {
							exists = scope:secondary_title
						}
						every_vassal = {
							limit = {
								primary_title.tier >= scope:secondary_title.tier
								NOT = {
									primary_title.tier = tier_barony
								}
							}
							change_liege = {
								liege = title:d_zaba.holder
								change = scope:change
							}
						}
					}
				}
			
				title:d_avaritana.holder = {
					change_liege = {
						liege = title:d_zaba.holder
						change = scope:change
					}
				}
			}
		
			resolve_title_and_vassal_change = scope:change

			title:d_avaritana.holder = {
				destroy_title = title:d_avaritana
			}
		}
	}

	on_invalidated_desc = msg_invalidate_war_title

	check_defender_inheritance_validity = no

	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	transfer_behavior = transfer

	war_name = "INDEPENDENCE_WAR_NAME"

	interface_priority = 120

	attacker_wargoal_percentage = 0.8

	max_attacker_score_from_battles = 100
	max_defender_score_from_battles = 50
	
	max_defender_score_from_occupation = 150
	max_attacker_score_from_occupation = 150

	max_ai_diplo_distance_to_title = 500
}
	}

	{
gothic_duchy_conquest_cb = {
	icon = duchy_conquest_cb
	group = event
	white_peace_possible = yes

	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }
	
	attacker_score_from_occupation_scale = 150
	attacker_score_from_battles_scale = 150
	defender_score_from_battles_scale = 150

	target_titles = all
	target_title_tier = duchy
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder

	should_invalidate = {
		scope:defender = {
			is_independent_ruler = no
			NOT = { has_title = title:k_ostrogoths }
		}
	}

	on_invalidated_desc = msg_subjugation_war_invalidated_message
	
	on_invalidated = {
	}

	on_declaration = {
		on_declared_war = yes
		set_global_variable = {
			name = gothic_war_declared
			value = yes
		}
		set_global_variable = {
			name = gothic_attacker_1
			value = scope:attacker
		}
		scope:attacker = {
			capital_county = {
				add_county_modifier = { modifier = roman_camps years = 5 }
			}
			spawn_army = {
				name = "Roman Vanguard"
				levies = 1000
				men_at_arms = {
					type = cataphract
					stacks = 2
				}
				men_at_arms = {
					type = bowmen
					stacks = 1
				}
				men_at_arms = {
					type = palatinae
					stacks = 1
				}
				men_at_arms = {
					type = comitatenses
					stacks = 1
				}
				men_at_arms = {
					type = scorpio
					stacks = 2
				}
				location = province:2636 #Trapani
				uses_supply = no
				inheritable = yes
			}
			spawn_army = {
				name = "Roman Vanguard"
				levies = 600
				men_at_arms = {
					type = cataphract
					stacks = 2
				}
				men_at_arms = {
					type = bowmen
					stacks = 1
				}
				men_at_arms = {
					type = palatinae
					stacks = 1
				}
				men_at_arms = {
					type = comitatenses
					stacks = 1
				}
				men_at_arms = {
					type = scorpio
					stacks = 2
				}
				location = province:2636 #Trapani
				uses_supply = no
				inheritable = yes
				war = scope:war
			}
			spawn_army = {
				name = "Roman Vanguard"
				levies = 600
				men_at_arms = {
					type = cataphract
					stacks = 2
				}
				men_at_arms = {
					type = bowmen
					stacks = 1
				}
				men_at_arms = {
					type = palatinae
					stacks = 1
				}
				men_at_arms = {
					type = comitatenses
					stacks = 1
				}
				men_at_arms = {
					type = scorpio
					stacks = 2
				}
				location = province:2636 #Trapani
				uses_supply = no
				inheritable = yes
				war = scope:war
			}
			if = {
				limit = {
					character:armenian_02 = {
						is_alive = yes
					}
				}
				add_courtier = character:armenian_02
			}
		}
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = county_conquest_cb_victory_desc_attacker
			}
			desc = county_conquest_cb_victory_desc
		}
	}

	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }
		custom_tooltip = gothic_war_end_effect2

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_med_effect = yes }

		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}

		# go through the dejure hierarchy under target titles, transfer eligible vassals and sieze counties from ineligible ones
		every_in_list = {
			list = target_titles
			custom_tooltip = CONQUEST_CB_TITLE

			conquest_cb_title_transfer = {
				RELIGIOUS_WAR = no
			}
		}

		every_in_list = {
			list = vassals_taken
			change_liege = {
				liege = scope:attacker
				change = scope:change
			}
		}

		every_in_list = {
			list = titles_taken
			change_title_holder = {
				holder = scope:attacker
				change = scope:change
				take_baronies = yes
			}
		}

		resolve_title_and_vassal_change = scope:change

		# Prestige Progress for the Attacker
		every_in_list = {
			list = target_titles
			scope:attacker = {
				add_prestige_experience = medium_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker
			FAME_BASE = medium_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }

		if = { # Warning that only counties are changing hands
			limit = {
				any_in_list = {
					list = target_titles
					tier = tier_duchy
				}
			}
			random_in_list = {
				list = target_titles
				limit = { tier = tier_duchy }
				save_scope_as = de_jure_target
			}
		}
		if = {
			limit = {
				any_in_list = {
					list = target_titles
					tier = tier_duchy
					holder = scope:defender
				}
			}
			if = {
				limit = {
					scope:defender = {
						any_held_title = {
							tier = tier_county
							NOT = { target_is_de_jure_liege_or_above = scope:de_jure_target }
						}
					}
				}
				custom_tooltip = conquest_title_not_transferred_tt
			}
			else = { custom_tooltip = conquest_title_destroyed_tt }
		}
		else = {
			if = {
				limit = {
					any_in_list = {
						list = target_titles
						tier = tier_duchy
						is_title_created = yes
					}
				}
				custom_tooltip = conquest_title_usurp_tt
			}
			else = { custom_tooltip = conquest_title_create_tt }
		}
		if = {
			limit = {
				scope:attacker = {
					top_liege = title:e_byzantium.holder
				}
			}
			if = {
				limit = {
					exists = title:k_daciae.holder
					title:k_daciae.holder.top_liege = title:e_byzantium.holder
				}
				set_global_variable = {
					name = gothic_attacker_2
					value = title:k_daciae.holder
				}
			}
			title:e_byzantium.holder = {
				trigger_event = {
					id = western_roman.0063
					days = 1
				}
				start_war = {
					cb = gothic_war_regular_cb
					target = title:k_ostrogoths.holder
					target_title = title:k_ostrogoths
					claimant = title:e_byzantium.holder
				}
			}
		}
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = county_conquest_cb_white_peace_desc_defender
			}
			desc = county_conquest_cb_white_peace_desc
		}
	}

	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }
		# Prestige loss for the attacker

		#EP2 accolade glory gain for doing pretty good against higher ranked enemy
		scope:defender = { accolade_defender_war_end_glory_gain_low_effect = yes }

		scope:attacker = {
			add_prestige = {
				value = minor_prestige_value
				multiply = -1.0
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker # not impactful as the scale are identical
			FAME_BASE = medium_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}


		add_truce_white_peace_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = county_conquest_cb_defeat_desc_defender
			}
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
						has_targeting_faction = yes
					}
				}
				desc = county_conquest_cb_defeat_desc_attacker
			}
			desc = county_conquest_cb_defeat_desc
		}
	}

	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:defender = { accolade_defender_war_end_glory_gain_med_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold_reparations_effect = {
				GOLD_VALUE = 3
			}
			add_prestige = {
				value = major_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for Defender
		scope:defender = {
			add_prestige_war_defender_effect = {
				PRESTIGE_VALUE = major_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:defender
			FAME_BASE = medium_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		add_truce_attacker_defeat_effect = yes

		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes
	}

	transfer_behavior = transfer

	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = "CONQUEST_WAR_NAME"
	war_name_base = "CONQUEST_WAR_NAME_BASE"
	cb_name = "CONQUEST_DUCHY_CB_NAME"

	interface_priority = 79

	use_de_jure_wargoal_only = yes

	attacker_wargoal_percentage = 0.8
	
	attacker_score_from_battles_scale = 200                # War Score from battles won by the Attacker is modified by this value
    defender_score_from_battles_scale = 200                # War Score from battles won by the Defender is modified by this value
    max_attacker_score_from_battles = 100                # How much War Score the Attacker can gain from battles in total
    max_defender_score_from_battles = 100                # How much War Score the Defender can gain from battles in total

	max_defender_score_from_occupation = 50
	full_occupation_by_defender_gives_victory = no
}
	}
}

"common/scripted_effects/TFE_invasion_effects.txt" = {
	{
lost_radagaisus_invasion_effect = {
	if = {
		limit = {
			exists = title:k_goths.holder
		}
		title:k_goths.holder = {
			if = { # Imprison them if they aren't imprisoned.
				limit = {
					is_imprisoned = no
					character:900062 = {
						is_alive = yes
					}
				}
				
				hard_imprison_character_effect = {
					TARGET = this
					IMPRISONER = character:900062
				}
				trigger_event = {
					id = gothic_wars.0016
					days = 7
				}
			}
			else = {
				limit = {
					is_imprisoned = no
				}
				hard_imprison_character_effect = {
					TARGET = this
					IMPRISONER = scope:defender
				}
			}
		}
	}
}
	}

	{
spawn_radagaisus_character_effect = {
	title:c_hewes.title_province = {
		save_scope_as = radagaisus_birthplace
	}

	character:radagaisian_02 = {
		# Make temporarily immune to disease
		add_character_flag = {
			flag = immune_to_disease
			years = 15
		}
		save_scope_as = radagaisus

		add_gold = 500
		add_prestige = 2500
		add_dread = high_dread
		add_character_modifier = {
			modifier = TFE_king_of_the_goths_modifier
		}
		create_the_gothic_kingdom_effect = yes
	}

	radagaisus_find_target_titles_effect = yes

	every_player = {
		if = {
			limit = {
				exists = title:e_western_roman_empire.holder
				NOR = {
					THIS = scope:radagaisus
					THIS = title:e_western_roman_empire.holder
				}
			}
			trigger_event = gothic_wars.0012
		}
		if = {
			limit = {
				exists = title:e_western_roman_empire.holder
				THIS = title:e_western_roman_empire.holder
			}
			trigger_event = gothic_wars.0013
		}
	}
}
	}

	{
radagaisus_find_target_titles_effect = {
	if = {
		limit = {
			exists = title:k_italia_suburbicariae
			exists = title:k_italia_annonariae
			OR = {
				title:k_italia_suburbicariae.holder.top_liege.primary_title = title:e_western_roman_empire
				title:k_italia_suburbicariae.holder.top_liege.primary_title = title:e_roman_empire
			}
		}
		title:k_italia_suburbicariae.holder.top_liege = {
			save_scope_as = target_one
		}
	}
	if = {
		limit = {
			exists = scope:target_one
		}
		radagaisus_declare_war_for_target_title_effect = yes
	}
}

radagaisus_declare_war_for_target_title_effect = {
	save_scope_as = war_leader
	if = {
		limit = { exists = scope:target_one }
		scope:radagaisus = {
			start_war = {
				cb = radagaisus_invasion_cb
				target = scope:target_one
				target_title = title:k_italia_annonariae
				target_title = title:k_italia_suburbicariae
			}
		}
		scope:radagaisus = {
			spawn_gothic_troops_effect = yes
		}
	}
	else = {
		debug_log = "Failed to find a valid war target for Radagaisus!"
	}
}
	}
}

"common/decisions/TFE_major_decisions_south_asia.txt" = {
	{
# Restore the main branch of the Vakataka Dynasty

reclaim_vakataka_decision = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_dynasty_house.dds"
	}
	decision_group_type = major

	desc = reclaim_vakataka_decision_desc
	selection_tooltip = reclaim_vakataka_decision_tooltip

	ai_check_interval = 120

	is_shown = {
		dynasty = dynasty:900024
		NOT = { house = character:900900.house } #Not a member of the OG Vakatakas
		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:reclaim_vakataka_decision
			}
		}
	}

	is_valid = {
		is_independent_ruler = yes
		prestige_level >= 4
		completely_controls = title:k_maharastra
		completely_controls = title:k_telingana
		completely_controls = title:k_karnata
	}

	is_valid_showing_failures_only = {
		is_available_adult = yes
		is_landed_or_landless_administrative = yes
	}
	
	cost = {
		prestige = 850
		piety = 500
	}

	effect = {
		hidden_effect = { ROOT.house = { every_house_member = { set_house = character:900900.house } } }
		set_house = character:900900.house
		add_pressed_claim = title:e_deccan
		add_pressed_claim = title:k_gondwana
		add_pressed_claim = title:d_jejakabhukti
		add_pressed_claim = title:d_akara_dasarna
		save_scope_as = founder
		trigger_event = {
			id = tfe_south_asia_decision.2001
			}
		#Notify other Vakatakas
		every_player = {
			limit = {
				dynasty = dynasty:900024
			}
			trigger_event = tfe_south_asia_decision.2002
			}
		}

		hidden_effect = {
			add_to_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:reclaim_vakataka_decision
			}
		}
	
	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 100
	}
}
	}
	{
#Restore the Three Crowned Kings
muvendhar_restoration_decision = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_dynasty_house.dds"
	}
	decision_group_type = cultural

	desc = muvendhar_restoration_decision_desc
	selection_tooltip = muvendhar_restoration_decision_tooltip

	ai_check_interval = 120

	is_shown = {
		is_ruler = yes
		is_landed_or_landless_administrative = yes
		OR = {
			culture = culture:tamil
			culture = culture:malaiya
			culture = culture:sinhala
			culture = { any_parent_culture_or_above = { this = culture:tamil }}
			culture = { any_parent_culture_or_above = { this = culture:malaiya }}
			culture = { any_parent_culture_or_above = { this = culture:sinhala }}
		}
		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:muvendhar_restoration_decision
			}
		}
	}
	
	is_valid = {
		is_independent_ruler = yes
		has_title = title:k_tamilakam
		prestige_level >= 3
		title:d_chola_nadu.holder.dynasty = dynasty:1043008
		title:d_pandya_nadu.holder.dynasty = dynasty:1043009
		title:d_chera_nadu.holder.dynasty = dynasty:1043010
		NOT = { dynasty = dynasty:900026 }
		completely_controls = title:d_chola_nadu
		completely_controls = title:d_pandya_nadu
		completely_controls = title:d_chera_nadu
	}

	is_valid_showing_failures_only = {
		is_capable_adult = yes
		is_imprisoned = no
		is_at_war = no
	}

	cost = {
		prestige = 750
		piety = 500
	}

	effect = {
		if = {
			limit = {
				NOR = {
					dynasty = dynasty:1043008
					dynasty = dynasty:1043009
					dynasty = dynasty:1043010
				}
			}
			dynasty = { add_dynasty_prestige = 500 }
		}
		dynasty:1043008 = { add_dynasty_prestige = 500 }
		dynasty:1043009 = { add_dynasty_prestige = 500 }
		dynasty:1043010 = { add_dynasty_prestige = 500 }
		save_scope_as = founder
		trigger_event = tfe_south_asia_decision.4001
		hidden_effect = {
			add_to_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:muvendhar_restoration_decision
			}
		}
	}
	
	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 100
	}
}
	}
}

"common/decisions/TFE_major_decisions_middle_east.txt" = {
	{
TFE_construct_khawarnaq = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_mena_palace.dds"
	}
	decision_group_type = major

	desc = TFE_construct_khawarnaq_desc
	selection_tooltip = TFE_construct_khawarnaq_tooltip

	ai_check_interval = 120

	is_shown = {
		is_landed_or_landless_administrative = yes
		NOT = {  #Can only do it once.
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:TFE_construct_khawarnaq
			}
		}
		dynasty = dynasty:lakhmid_dynasty
		OR = {
			game_start_date = 395.1.17
			game_start_date = 361.11.17
		}
		has_title = title:k_lakhmid
	}

	is_valid = {
		has_title = title:k_lakhmid
		prestige_level >= 3
		completely_controls = title:c_kufa
	}

	cost = {
		prestige = 500
		gold = 500
	}

	effect = {
		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:TFE_construct_khawarnaq
		}
		title:b_an-najaf.title_province = {
			add_special_building = palace_khawarnaq
			
		}
		trigger_event = TFE_flavour_events.0007
		add_prestige = 500
		dynasty = {
			add_dynasty_prestige = 500
		}
	}

	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 100
	}
}
	}
}

"common\decisions\TFE_rome_decisions.txt" = {
	{
recall_belisarius = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_roman_knight.dds"
	}
	decision_group_type = roman

	ai_check_interval = 6

	desc = recall_belisarius_desc
	selection_tooltip = recall_belisarius_tooltip

	is_shown = {
		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:recall_belisarius
			}
		}
		#OR = {
		#	root = global_var:justinian
		#	has_trait = paranoid
		#}
		has_global_variable = vandalic_war_won
		current_date >= 530.1.1
		current_date <= 600.1.1
		OR = {
			has_title = title:e_byzantium
			has_title = title:e_roman_empire
		}
		exists = title:k_africae.holder
		title:k_africae.holder = {
			is_vassal_of = root
		}
		game_start_date = 532.2.1
	}

	is_valid = {
		character:belisarius_001 = title:k_africae.holder
	}

	effect = {
		root = {
			save_scope_as = emperor
		}
		title:k_africae.holder = {
			save_scope_as = belisarius
		}
		custom_tooltip = recall_belisarius_warning
		character:belisarius_001 = {
			add_opinion = {
				modifier = angry_opinion
				target = root
				opinion = -20
			}
			trigger_event = {
				id = western_roman.0044
				days = 1
			}
		}
		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:recall_belisarius
		}
	}

	cost = {
		prestige = {
			if = {
				limit = {
					is_ai = no
				}
				add = {
					value = 500
				}
			}
		}
		gold = {
			if = {
				limit = {
					is_ai = no
				}
				add = {
					value = 250
				}
			}
		}
	}

	ai_potential = {
		is_at_war = no
	}
	ai_will_do = {
		base = 100
	}
}
	}
	
	{
start_amalasuntha_coup = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_destiny_goal.dds"
	}
	decision_group_type = roman

	ai_goal = yes

	desc = start_amalasuntha_coup_desc
	selection_tooltip = start_amalasuntha_coup_tooltip

	is_shown = {
		OR = {
			has_title = title:e_byzantium
			has_title = title:e_roman_empire
		}
		NOT = {
			exists = global_var:gothic_war_declared
		}
		exists = global_var:amalasuntha_coup_unlock
		current_date >= 530.1.1
		current_date <= 600.1.1
		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:started_gothic_war
			}
		}
		character:992020 = {
			is_alive = yes
			liege = title:k_ostrogoths.holder
		}
		title:k_ostrogoths.holder = {
			has_active_diarchy = yes
			diarch = character:992020
		}
		game_start_date = 532.2.1
	}

	is_valid = {
		trigger_if = {
			limit = {
				is_ai = yes
			}
			is_at_war = no
		}
		trigger_if = {
			limit = {
				is_ai = yes
				character:belisarius_001 = {
					is_ai = no
				}
			}
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:recall_belisarius
			}
		}
	}

	effect = {
		root = {
			save_scope_as = emperor
			trigger_event = {
				id = germanic_events.0033
				days = 1
			}
		}
		custom_tooltip = gothic_war_belisarius_warning
		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:started_gothic_war
		}
	}

	cost = {
		prestige = {
			if = {
				limit = {
					is_ai = no
				}
				add = {
					value = 250
				}
			}
		}
	}

	ai_potential = {
		always = yes
	}
	ai_will_do = {
		base = 100
	}
}
	}
	
	{
vandalic_war = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_vandalic_war.dds"
	}
	decision_group_type = roman

	ai_check_interval = 12

	desc = vandalic_war_desc
	selection_tooltip = vandalic_war_tooltip

	is_shown = {
		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:vandalic_war
			}
		}
		exists = title:k_vandals
		has_title = title:e_byzantium
		current_date >= 530.1.1
		game_start_date = 532.2.1
		OR = {
			character:vandals_005 = {
				is_alive = yes
			}
			AND = {
				current_date <= 550.1.1
				any_courtier = {
					has_claim_on = title:k_vandals
				}
			}
		}
	}

	effect = {
		custom_tooltip = vandalic_war_decision_1
		custom_tooltip = vandalic_war_decision_2
		custom_tooltip = vandalic_war_decision_3

		hidden_effect = {
			every_vassal = {
				add_opinion = {
					modifier = respect_opinion
					target = root
					opinion = -20
				}
			}
			add_to_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:vandalic_war
			}
			trigger_event = {
				id = western_roman.0039
				days = 1
			}
		}
	}

	cost = {
		prestige = {
			if = {
				limit = {
					is_ai = no
				}
				add = {
					value = 750
				}
			}
		}
		gold = {
			if = {
				limit = {
					is_ai = no
				}
				add = {
					value = 250
				}
			}
		}
	}

	ai_potential = {
		always = yes
	}
	ai_will_do = {
		base = 100
	}

}
	}
}


"common/decisions/tfe_culture_decisions.txt" = {
	{
dong_zhuo_culture_decision = {
	ai_check_interval = 0
	is_shown = {
		has_game_rule = larp_enabled
		NOT = {
			culture = {
				this = culture:soissons
			}
		}
		dynasty = dynasty:syagri
		game_start_date = 395.1.17
	}
	is_valid = {
		culture = { has_cultural_pillar = heritage_levantine }
		custom_description = {
			text = soissonstrigger1
			culture = { any_parent_culture_or_above = { this = culture:han } }
		}
		dynasty = dynasty:syagri
		has_title = title:k_israel
		custom_description = {
			text = soissonstrigger2
			current_date = 690.4.20
		}
	}
	effect = {
		save_scope_as = soi
		#Convert your, and your whole family's, culture
		set_culture = culture:soissons
		add_prestige = 10000
		hidden_effect = {
			if = {
				limit = { any_spouse = { is_landed = no } }
				every_spouse = {
					limit = {
						is_landed = no
					}
					set_culture = culture:soissons
				}
			}
			if = {
				limit = {
					any_close_family_member = {
						is_landed = no
						NOT = { is_spouse_of = root }
					}
				}
				every_close_family_member = {
					limit = {
						is_landed = no
						NOT = { is_spouse_of = root }
					}
					custom = all_unlanded_family_members
					set_culture = culture:soissons
				}
			}

			#Convert appropriate vassals, and their family
			if = {
				limit = {
					any_vassal_or_below = {
						is_ai = yes
					}
				}
				every_vassal_or_below = {
					limit = {
						is_ai = yes
					}
					set_culture = culture:soissons
				}
			}

			#Flip Counties
			every_realm_county = {
				set_county_culture = culture:soissons
			}

			culture:soissons = {
				hidden_effect = {
					reset_culture_creation_date = yes
					get_all_innovations_from = culture:han
					get_all_innovations_from = culture:hebrew
				}
			}

			trigger_event = tfe_culture.9900
		}
	}
	cost = { gold = 69 }
}
	}
}

"gfx/portraits/portrait_modifiers/00_custom_hair.txt" = {
	{
			modifier = {
                add = 200
                exists = this
                exists = character:easteregg_joe_parkin
                this = character:easteregg_joe_parkin
            }
            modifier = {
                add = 200
                exists = this
                exists = character:easteregg_alessandro_bragalini
                this = character:easteregg_alessandro_bragalini
            }
	}
}

"gfx/portraits/portrait_modifiers/50_beards_scripted_characters.txt" = {
	{
beards_scripted_characters = {

    usage = game
    selection_behavior = max

    male_beard_western_01 = { # Standard full beard
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.04 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            modifier = {
                add = 999
				exists = this
				exists = character:144998 #king_lothaire
				this = character:144998 #king_lothaire
            }
            modifier = {
                add = 999
				exists = this
                exists = character:83355 #petty_king_murchad
                this = character:83355 #petty_king_murchad
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_petter_vilberg
                this = character:easteregg_petter_vilberg
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_james_beaumont
                this = character:easteregg_james_beaumont
            }
            modifier = {
                add = 999
                exists = this
                exists = character:159038 #Coel
                this = character:159038 #ACoel
            }
            modifier = {
                add = 999
                exists = this
                exists = character:900062 #Stilicho
                this = character:900062 #Stilicho
            }
            modifier = {
                add = 999
                exists = this
                exists = character:180618 #Bahram
                this = character:180618 #Bahram
            }
            modifier = {
                add = 999
		        exists = this
                exists = character:83432 #Eochaid
                this = character:83432 #Eochaid
            }
            modifier = {
                add = 999
                exists = this
                exists = character:londinium_01 #Riothamus
                this = character:londinium_01 #Riothamus
            }
            modifier = {
                add = 999
                exists = this
                exists = character:vigg_04 #Hengest
                this = character:vigg_04 #Hengest
            }
            modifier = {
                add = 999
                exists = this
                exists = character:constantinus_05 #Ambrosius
                this = character:constantinus_05 #Ambrosius
            }
            modifier = {
                add = 999
                exists = this
                exists = character:cappadocia_07 #Ioannes
                this = character:cappadocia_07 #Ioannes
            }
            modifier = {
                add = 999
                exists = this
                exists = character:mauri_42 #Iabdas
                this = character:mauri_42 #Iabdas
            }
            modifier = {
                add = 999
                exists = this
                exists = character:997011 #Chlodomir
                this = character:997011 #Chlodomir
            }
        }
    }

    male_beard_western_02 = { # Standard goatee
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.07 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            modifier = {
                add = 999
				exists = this
                exists = character:107500 #king_sancho
                this = character:107500 #king_sancho
            }
            modifier = {
                add = 999
				exists = this
                exists = character:42018 #karlmann
                this = character:42018 #karlmann
            }
            modifier = {
                add = 999
                exists = this
                exists = character:991004 #Mundus
                this = character:991004 #Mundus
            }
        }
    }

    male_beard_western_03 = { # Short beard
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.11 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            modifier = {
                add = 999
				exists = this
                exists = character:163110 #sigurdr_snake_in_the_eye
                this = character:163110 #sigurdr_snake_in_the_eye
            }
            modifier = {
                add = 999
				exists = this
                exists = character:90104 #charles_the_bald
                this = character:90104 #charles_the_bald
            }
            modifier = {
                add = 999
				exists = this
                exists = character:109500 #king_garcia
                this = character:109500 #king_garcia
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_henrik_fahraeus
                this = character:easteregg_henrik_fahraeus
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_olof_bjork
                this = character:easteregg_olof_bjork
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_sean_hughes
                this = character:easteregg_sean_hughes
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_maximilian_olbers
                this = character:easteregg_maximilian_olbers
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_nikolaos_kaltsogiannis
                this = character:easteregg_nikolaos_kaltsogiannis
            }
        }
    }

    male_beard_western_04 = { # Short goatee
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.14 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_nils_wadensten
                this = character:easteregg_nils_wadensten
            }
            modifier = {
                add = 999
                exists = this
                exists = character:waegmunding_2 #Beowulf
                this = character:waegmunding_2 #Beowulf
            }
        }
    }

    male_beard_western_05 = { # Mustache
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.17 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            modifier = {
                add = 999
				exists = this
                exists = character:122 #king_harold
                this = character:122 #king_harold
            }
            modifier = {
                add = 999
				exists = this
                exists = character:1128 #duke_robert
                this = character:1128 #duke_robert
            }
            modifier = {
                add = 999
                exists = this
                exists = character:992016 #theodoric_the_great
                this = character:992016 #theodoric_the_great
            }
            modifier = {
                add = 999
                exists = this
                exists = character:992022 #Theodahad
                this = character:992022 #Theodahad
            }
            modifier = {
                add = 999
                exists = this
                exists = character:997003 #Merovech
                this = character:997003 #Merovech
            }
        }
    }

    male_beard_western_06 = { # Big bushy beard
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.2 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            modifier = {
                add = 999
				exists = this
                exists = character:106000 #king_antso
                this = character:106000 #king_antso
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_paul_depre
                this = character:easteregg_paul_depre
            }
            modifier = {
                add = 999
                exists = this
                exists = character:999103 #Alaric I
                this = character:999103 #Alaric I
            }
            modifier = {
                add = 999
                exists = this
                exists = character:997002 #Chlodio
                this = character:997002 #Chlodio
            }
        }
    }

    male_beard_western_07 = { # Chin strap
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.23 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            modifier = {
                add = 999
                exists = this
                exists = character:997004 #Childeric
                this = character:997004 #Childeric
            }
        }
    }

    male_beard_western_08 = { # Big with fancy mustache
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.27 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            modifier = {
                add = 999
				exists = this
                exists = character:984 #king_malcom
                this = character:984 #king_malcom
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_max_weltz
                this = character:easteregg_max_weltz
            }
            modifier = {
               	add = 999
                exists = this
		exists = character:arsacid_58 #vramshapuh
		this = character:arsacid_58 #vramshapuh
	    }
            modifier = {
               	add = 999
                exists = this
                exists = character:145071 #Heraclius
                this = character:145071 #Heraclius
	    }
        }
    }

    male_beard_western_09 = { # Pointy beard
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.30 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            modifier = {
                add = 999
                exists = this
                exists = character:159431 #Conan Meriadoc
                this = character:159431 #Conan Meriadoc
            }
            modifier = {
                add = 999
                exists = this
                exists = character:maldras_06 #Hermenerich
                this = character:maldras_06 #Hermenerich
            }
            modifier = {
                add = 999
                exists = this
                exists = character:997009 #Theodoric Meroving
                this = character:997009 #Theodoric Meroving
            }
            modifier = {
                add = 999
                exists = this
                exists = character:992063 #Fritigern
                this = character:992063 #Fritigern
            }
        }
    }

    male_beard_western_10 = { # Chin goatee
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.33 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
        }
    }

    male_beard_mena_01 = { # Very curly medium length full beard
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.35 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0

		modifier = {
                add = 999
                exists = this
                exists = character:982001 #Abu Karib
                this = character:982001 #Abu Karib
            }
        }
    }

    male_beard_mena_02 = { # Big with small mustache
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.39 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            modifier = {
                add = 999
				exists = this
                exists = character:3924 #emir_yahya
                this = character:3924 #emir_yahya
            }
	    modifier = {
                add = 999
                exists = this
                exists = character:lakhmid_06 #al-Nu'Man
                this = character:lakhmid_06 #al-Nu'Man
            }
	    modifier = {
                add = 999
                exists = this
                exists = character:rugian_03 #Feletheus
                this = character:rugian_03 #Feletheus
            }
        }
    }

    male_beard_mena_03 = { # Big chin strap
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.42 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
        }
    }

    male_beard_mena_04 = { # Short stylish
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.45 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            modifier = {
                add = 999
				exists = this
                exists = character:quadi_04 # Hermerich of the Quadi
                this = character:quadi_04 # Hermerich of the Quadi
            }
            modifier = {
                add = 999
                exists = this
                exists = character:syagri_06 #Syagrus
                this = character:syagri_06 #Syagrus
            }
            modifier = {
                add = 999
                exists = this
                exists = character:997005 #Chlodovech
                this = character:997005 #Chlodovech
            }
            modifier = {
                add = 999
                exists = this
                exists = character:belisarius_001 #Belisarius
                this = character:belisarius_001 #Belisarius
            }
        }
    }

    male_beard_northern_01 = { # Big wide
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.48 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            modifier = {
                add = 999
				exists = this
                exists = character:163111 #ivar_the_boneless
                this = character:163111 #ivar_the_boneless
            }
            modifier = {
                add = 999
				exists = this
                exists = character:102531 #harald_hardrade
                this = character:102531 #harald_hardrade
            }
        }
    }

    male_beard_northern_02 = { # Single braid
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.52 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            modifier = {
                add = 999
				exists = this
                exists = character:163112 #halfdan_whiteshirt
                this = character:163112 #halfdan_whiteshirt
            }
        }
        weight = {
            base = 0
            modifier = {
                add = 999
				exists = this
                exists = character:6878 #jarl_haesteinn
                this = character:6878 #jarl_haesteinn
            }
        }
    }

    male_beard_northern_03 = { # Beaded beard
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.54 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            modifier = {
                add = 999
				exists = this
                exists = character:163108 #bjorn_ironside
                this = character:163108 #bjorn_ironside
            }
            modifier = {
                add = 999
				exists = this
                exists = character:40605 #rurik
                this = character:40605 #rurik
            }
            modifier = {
                add = 999
				exists = this
                exists = character:easteregg_peter_johannesson
                this = character:easteregg_peter_johannesson
            }
		modifier = {
		add = 999
		exists = character:997013 #Chlothar
		this = character:997013 #Chlothar
	    }
	   }
    }

    male_beard_steppe_01 = { # long at chin with mustache
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.58 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
		modifier = {
		add = 999
		exists = character:ashina_03 #Tuwu
		this = character:ashina_03 #Tuwu
	    }
		modifier = {
		add = 999
		exists = character:ashina_04 #Bumin
		this = character:ashina_04 #Bumin
	    }
	   }
    }

    male_beard_steppe_02 = { # low rough 
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.61 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            modifier = {
                add = 999
				exists = this
                exists = character:159137 #almos_arpad
                this = character:159137 #almos_arpad
            }
		modifier = {
		add = 999
		exists = character:990006 #Attila
		this = character:990006 #Attila
	    }
		modifier = {
		add = 999
		exists = character:ashina_05 #Istemi
		this = character:ashina_05 #Istemi
	    }
           modifier = {
                add = 999
                exists = this
                exists = character:hephthalite_misc_017 #Katulf
                this = character:hephthalite_misc_017 #Katulf
            }
	   }
    }

    male_beard_sub_saharan_01 = { # Full african beard medium
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.64 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
        }
        weight = {
               	base = 0
		modifier = {
			add = 999
                	exists = this
                	exists = character:nuvelan_11 #Gildo
                	this = character:nuvelan_11 #Gildo
		}
		modifier = {
			add = 999
                	exists = this
                	exists = character:aksum_16 #Ouazeba
                	this = character:aksum_16 #Ouazeba
		}
            	modifier = {
               	add = 999
                exists = this
		        exists = character:himyarite_30 #Abraha
		        this = character:himyarite_30 #Abraha
	        }
	}
    }

    male_beard_sub_saharan_02 = { # Stylish african goatee
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.67 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            modifier = {
                add = 999
                exists = this
                exists = character:aksum_17 #eon
                this = character:aksum_17 #eon
            }
        }
    }

    male_beard_sub_saharan_03 = { # Full african beard long
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.70 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
        }
    }

    male_beard_indian_01 = { # Handlebar mustache
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.74 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            modifier = {
				add = 999
				exists = this
				exists = character:easteregg_struan_mccallum
				this = character:easteregg_struan_mccallum
			}
	    modifier = {
                add = 999
                exists = this
                exists = character:alchonid_005 #Khingila
                this = character:alchonid_005 #Khingila
            }
	    modifier = {
                add = 999
                exists = this
                exists = character:arsacid_64 #Mystakon
                this = character:arsacid_64 #Mystakon
            }
        }
    }

    male_beard_indian_02 = { # Indian pointy
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.77 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            modifier = {
                add = 999
                exists = this
                exists = character:900016 #Faramund
                this = character:900016 #Faramund
            }
	    modifier = {
                add = 999
                exists = this
                exists = character:xionite_001 #Kidara
                this = character:xionite_001 #Kidara
            }
	    modifier = {
                add = 999
                exists = this
                exists = character:145072 #Focas
                this = character:145072 #Focas
            }
	    modifier = {
                add = 999
                exists = this
                exists = character:greek_17 #Plutarch
                this = character:greek_17 #Plutarch
            }
        }
    }

    male_beard_indian_03 = { # Very curly medium length full beard
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.80 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0

        }
    }

    male_beard_rtt_01 = { # Wizard beard
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.0 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
        }
    }

    ### FP2 Beards ###

    male_beard_fp2_iberian_christian_01 = { # Twin braids with metal rings
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_02
                value = 0.11 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
        }
    }

    male_beard_fp2_iberian_christian_02 = { # Twin braids with metal rings
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_02
                value = 0.235 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            modifier = {
                add = 999
                exists = this
                exists = character:996002 #Odovacar
                this = character:996002 #Odovacar
            }
             modifier = {
                add = 999
                exists = this
                exists = character:168137
                this = character:168137
            }

            modifier = {
                add = 999
               	exists = this
               	exists = character:70292
                this = character:70292
            }
        }
    }

    male_beard_fp2_iberian_christian_03 = { # Twin braids with metal rings
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_02
                value = 0.36 # For the randomness to work correctly
            }
        }
        weight = {
            base = 0

            modifier = {
                add = 999
                exists = this
                exists = character:73813
                this = character:73813
            }

            modifier = {
                add = 999
                exists = this
                exists = character:surunbaqi0001
                this = character:surunbaqi0001
            }
        }
    }

    male_beard_fp2_iberian_christian_04 = {
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_02
                value = 0.485 # For the randomness to work correctly
            }
        }
        weight = {
            base = 0

            modifier = {
                add = 999
                exists = this
                exists = character:barcelona_00003
                this = character:barcelona_00003
            }
            modifier = {
                add = 999
                exists = this
                exists = character:200280 #Theodis
                this = character:200280 #Theodis
            }
            modifier = {
                add = 999
                exists = this
                exists = character:997015 #Theodobert
                this = character:997015 #Theodobert
            }
        }
    }

    male_beard_fp2_iberian_muslim_01 = { # Thick Groomed Beard
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_02
                value = 0.61 # For the randomness to work correctly
            }
        }
        weight = {
            base = 0

             modifier = {
                add = 999
                exists = this
                exists = character:70150
                this = character:70150
            }

            modifier = {
                add = 999
                exists = this
                exists = character:180628 #Khosrau
                this = character:180628 #Khosrau
            }

             modifier = {
                add = 999
                exists = this
                exists = character:73683
                this = character:73683
            }
            modifier = {
                add = 999
                exists = this
                exists = character:200284 #euric
                this = character:200284 #euric
            }
            modifier = {
                add = 999
                exists = this
                exists = character:aelling_01 #Aelle
                this = character:aelling_01 #Aelle
            }
            modifier = {
                add = 999
                exists = this
                exists = character:159012 #Cadwallon
                this = character:159012 #Cadwallon
            }
        }
    }

    male_beard_fp2_iberian_muslim_02 = { # Scholar's beard
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_02
                value = 0.735 # For the randomness to work correctly
            }
        }
        weight = {
            base = 0

              modifier = {
                add = 999
                exists = this
                exists = character:danis0005
                this = character:danis0005
            }
             modifier = {
                add = 999
                exists = this
                exists = character:vandals_003
                this = character:vandals_003
            }
            modifier = {
               	add = 999
                exists = this
		exists = character:145237 #julian_the_apostate
		this = character:145237 #julian_the_apostate
            }
             modifier = {
                add = 999
                exists = this
                exists = character:greek_20 #Proklos
                this = character:greek_20 #Proklos
            }
        }
    }



    male_beard_fp2_iberian_muslim_03 = { # Forked beard
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_02
                value = 0.860 # For the randomness to work correctly
            }
        }
        weight = {
            base = 0
            modifier = {
                add = 999
                exists = this
                exists = character:mauri_36 #Masties
                this = character:mauri_36 #Masties
            }
        }
    }

    no_beard = {
    	dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_02
                value = 1 # For the randomness to work correctly
            }
        }
        weight = {
            base = 0
            modifier = {
                add = 999
				exists = this
				exists = character:73857
				this = character:73857
            }
            modifier = {
                add = 999
	        	exists = this
                exists = character:nepos_02 #Nepos
                this = character:nepos_02 #Nepos
            }
            modifier = {
                add = 999
                exists = this
                exists = character:70512 #Justinian
                this = character:70512 #Justinian
            }
            modifier = {
                add = 999
                exists = this
                exists = character:205141 #Ceredig
                this = character:205141 #Ceredig
            }
            modifier = {
                add = 999
                exists = this
                exists = character:vandals_005 #Hilderic
                this = character:vandals_005 #Hilderic
            }
            modifier = {
                add = 999
                exists = this
                exists = character:vandals_012 #Gelimer
                this = character:vandals_012 #Gelimer
            }
            modifier = {
                add = 999
                exists = this
                exists = character:992023 #Athalaric
                this = character:992023 #Athalaric
            }
           modifier = {
                add = 999
                exists = this
                exists = character:70515  #Zeno
                this = character:70515  #Zeno
            }
           modifier = {
                add = 999
                exists = this
                exists = character:70517  #Leo
                this = character:70517  #Leo
            }
           modifier = {
                add = 999
                exists = this
                exists = character:70514  #Anastasius
                this = character:70514  #Anastasius
            }
           modifier = {
                add = 999
                exists = this
                exists = character:armenian_01  #Narses
                this = character:armenian_01  #Narses
            }
           modifier = {
                add = 999
                exists = this
                exists = character:mauro_roman_kings_02  #Massonas
                this = character:mauro_roman_kings_02  #Massonas
            }
           modifier = {
                add = 999
                exists = this
                exists = character:samo_01  #Samo
                this = character:samo_01  #Samo
            }
        }
    }


    ### FP1 Beards ###
    male_beard_fp1_01 = { # Twin braids with metal rings
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.84 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
        }
    }

    male_beard_fp1_02 = { # Short low beard
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.1 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
           modifier = {
                add = 999
                exists = this
                exists = character:159117  #Kubrat
                this = character:159117  #Kubrat
            }
        }
    }

    male_beard_fp1_03 = { # Wavy pointy beard
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.90 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            
        }
    }

    male_beard_fp1_04 = { # Huge braid
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.94 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
        }
    }

    male_beard_fp1_05 = { # Long narrow wavy
        dna_modifiers = {
            accessory = {
                mode = add
                gene = beards
                template = scripted_character_beards_01
                value = 0.97 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
            modifier = {
                add = 999
                exists = this
                exists = character:997012 #Childebert
                this = character:997012 #Childebert
            }
            modifier = {
                add = 999
                exists = this
                exists = character:992003 #Hermanaric
                this = character:992003 #Hermanaric
            }
        }
    }
}
	}
}

"gfx/portraits/portrait_modifiers/50_headgear_scripted_characters.txt" = {
	{
headgear_scripted_characters = {

    usage = game
    selection_behavior = max
    priority = 10

    no_headgear = { # No headgear
        dna_modifiers = {
            accessory = {
                mode = add
                gene = headgear
                template = fp2_scripted_headgear_01
                value = 0.1 # For the randomness to work correctly
            }
        }   
        weight = {
            base = 0
		modifier = {
			add = 50
			exists = this
			exists = character:73857
                	this = character:73857
		}
		modifier = {
			add = 50
			exists = this
			exists = character:108501
              	  	this = character:108501
		}
            	modifier = {
               	 	add = 999
                	exists = this
                	exists = character:900062 #Stilicho
                	this = character:900062 #Stilicho
		}
            	modifier = {
               	 	add = 999
                	exists = this
                	exists = character:nuvelan_11 #Gildo
                	this = character:nuvelan_11 #Gildo
		}
		modifier = {
                	add = 999
                	exists = this
                	exists = character:belisarius_001 #Belisarius
                	this = character:belisarius_001 #Belisarius
		}
          }
    }

    male_headgear_secular_fp2_iberian_muslim_common_01_low = {
        dna_modifiers = {
            accessory = {
                mode = add
                gene = headgear
                template = fp2_scripted_headgear_01
                value = 0.5  # For the randomness to work correctly
            }
        }   
        weight = {
			base = 0
			modifier = {
				add = 50
				exists = this
				exists = character:73813 # Musa
                this = character:73813
			}
		}
    	}

    	male_headgear_secular_fp2_iberian_muslim_high_nobility_01 = {
        dna_modifiers = {
            accessory = {
                mode = add
                gene = headgear
                template = fp2_scripted_headgear_01
                value = 1 # For the randomness to work correctly
            }
        }   
        weight = {
			base = 0
			modifier = {
				add = 50
				exists = this
				exists = character:danis0005 # Adanis
                this = character:danis0005
			}
		}
	}
	male_headgear_secular_roman_pannonian_hat_high_nobility = {
		dna_modifiers = {
			accessory = {
				mode = add
				gene = headgear
				template = roman_pannonian_hat_high
				value = 1
			}
		}
		weight = {
			base = 0
            			modifier = {
               	 		add = 999
                		exists = this
                		exists = character:nepos_02 #Nepos
                		this = character:nepos_02 #Nepos
			}
		}
		weight = {
			base = 0
            			modifier = {
               	 		add = 999
                		exists = this
                		exists = character:syagri_06 #Syagrius
                		this = character:syagri_06 #Syagrius
			}
		}
	}
	male_headgear_secular_western_high_nobility = {
		dna_modifiers = {
			accessory = {
				mode = add
				gene = headgear
				template = western_high_nobility
				value = 1
			}
		}
		weight = {
			base = 0
				modifier = {
                		add = 999
                		exists = this
                		exists = character:900016 #Faramund
                		this = character:900016 #Faramund
			}
		}
	}
	male_headgear_secular_roman_diadem = {
		dna_modifiers = {
			accessory = {
				mode = add
				gene = headgear
				template = roman_diadem 
				value = 1
			}
		}
		weight = {
			base = 0
				modifier = {
                		add = 999
                		exists = this
                		exists = character:70515  #Zeno
                		this = character:70515  #Zeno
			}
		}
	}
	male_headgear_secular_sassanid_crown = {
		dna_modifiers = {
			accessory = {
				mode = add
				gene = headgear
				template = ep1_sassanid_crown
				value = 1
			}
		}
		weight = {
			base = 0
				modifier = {
                		add = 999
                		exists = this
                		exists = character:180628 #Khosrau
                		this = character:180628 #Khosrau
			}
		}
	}
}
	}
}

"common/dna_data/00_dna_patrons.txt" = {
	{
bitcoin_patron ={
	portrait_info={
			genes={ 		
			hair_color={ 13 247 117 230 }
	 		skin_color={ 159 149 199 103 }
	 		eye_color={ 241 76 44 160 }
	 		gene_chin_forward={ "chin_forward_neg" 125 "chin_forward_neg" 125 }
	 		gene_chin_height={ "chin_height_neg" 114 "chin_height_neg" 114 }
	 		gene_chin_width={ "chin_width_pos" 183 "chin_width_pos" 183 }
	 		gene_eye_angle={ "eye_angle_pos" 133 "eye_angle_pos" 133 }
	 		gene_eye_depth={ "eye_depth_neg" 119 "eye_depth_neg" 119 }
 			gene_eye_height={ "eye_height_pos" 131 "eye_height_pos" 131 }
 			gene_eye_distance={ "eye_distance_pos" 137 "eye_distance_pos" 137 }
 			gene_eye_shut={ "eye_shut_pos" 139 "eye_shut_pos" 139 }
 			gene_forehead_angle={ "forehead_angle_neg" 107 "forehead_angle_neg" 107 }
 			gene_forehead_brow_height={ "forehead_brow_height_neg" 105 "forehead_brow_height_neg" 105 }
 			gene_forehead_roundness={ "forehead_roundness_pos" 166 "forehead_roundness_pos" 166 }
 			gene_forehead_width={ "forehead_width_neg" 114 "forehead_width_neg" 114 }
 			gene_forehead_height={ "forehead_height_pos" 161 "forehead_height_pos" 161 }
 			gene_head_height={ "head_height_neg" 112 "head_height_neg" 86 }
 			gene_head_width={ "head_width_pos" 156 "head_width_pos" 131 }
 			gene_head_profile={ "head_profile_pos" 177 "head_profile_pos" 134 }
 			gene_head_top_height={ "head_top_height_pos" 0 "head_top_height_pos" 128 }
	 		gene_head_top_width={ "head_top_width_pos" 125 "head_top_width_pos" 146 }
	 		gene_jaw_angle={ "jaw_angle_neg" 105 "jaw_angle_neg" 105 }
	 		gene_jaw_forward={ "jaw_forward_pos" 139 "jaw_forward_pos" 139 }
	 		gene_jaw_height={ "jaw_height_pos" 129 "jaw_height_pos" 129 }
 			gene_jaw_width={ "jaw_width_neg" 101 "jaw_width_neg" 101 }
 			gene_mouth_corner_depth={ "mouth_corner_depth_pos" 130 "mouth_corner_depth_pos" 130 }
 			gene_mouth_corner_height={ "mouth_corner_height_neg" 127 "mouth_corner_height_neg" 127 }
 			gene_mouth_forward={ "mouth_forward_pos" 131 "mouth_forward_pos" 131 }
 			gene_mouth_height={ "mouth_height_neg" 114 "mouth_height_neg" 114 }
 			gene_mouth_width={ "mouth_width_pos" 137 "mouth_width_pos" 137 }
 			gene_mouth_upper_lip_size={ "mouth_upper_lip_size_pos" 151 "mouth_upper_lip_size_pos" 151 }
 			gene_mouth_lower_lip_size={ "mouth_lower_lip_size_neg" 91 "mouth_lower_lip_size_neg" 91 }
 			gene_mouth_open={ "mouth_open_neg" 115 "mouth_open_neg" 115 }
			gene_neck_length={ "neck_length_neg" 141 "neck_length_neg" 76 }
	 		gene_neck_width={ "neck_width_neg" 117 "neck_width_neg" 117 }
 			gene_bs_cheek_forward={ "cheek_forward_pos" 163 "cheek_forward_pos" 163 }
			gene_bs_cheek_height={ "cheek_height_neg" 14 "cheek_height_neg" 14 }
	 		gene_bs_cheek_width={ "cheek_width_neg" 9 "cheek_width_neg" 9 }
 			gene_bs_ear_angle={ "ear_angle_neg" 112 "ear_angle_neg" 112 }
	 		gene_bs_ear_inner_shape={ "ear_inner_shape_pos" 11 "ear_inner_shape_pos" 11 }
 			gene_bs_ear_bend={ "ear_upper_bend_pos" 35 "ear_upper_bend_pos" 35 }
 			gene_bs_ear_outward={ "ear_outward_pos" 7 "ear_outward_pos" 7 }
 			gene_bs_ear_size={ "ear_size_pos" 119 "ear_size_pos" 119 }
 			gene_bs_eye_corner_depth={ "eye_corner_depth_pos" 243 "eye_corner_depth_pos" 243 }
 			gene_bs_eye_fold_shape={ "eye_fold_shape_pos" 149 "eye_fold_shape_pos" 149 }
 			gene_bs_eye_size={ "eye_size_neg" 37 "eye_size_neg" 37 }
 			gene_bs_eye_upper_lid_size={ "eye_upper_lid_size_pos" 15 "eye_upper_lid_size_pos" 15 }
 			gene_bs_forehead_brow_curve={ "forehead_brow_curve_neg" 48 "forehead_brow_curve_neg" 48 }
 			gene_bs_forehead_brow_forward={ "forehead_brow_forward_neg" 98 "forehead_brow_forward_neg" 98 }
 			gene_bs_forehead_brow_inner_height={ "forehead_brow_inner_height_neg" 51 "forehead_brow_inner_height_neg" 51 }
 			gene_bs_forehead_brow_outer_height={ "forehead_brow_outer_height_pos" 59 "forehead_brow_outer_height_pos" 59 }
 			gene_bs_forehead_brow_width={ "forehead_brow_width_pos" 30 "forehead_brow_width_pos" 30 }
 			gene_bs_jaw_def={ "jaw_def_neg" 19 "jaw_def_neg" 19 }
 			gene_bs_mouth_lower_lip_def={ "mouth_lower_lip_def_pos" 44 "mouth_lower_lip_def_pos" 44 }
 			gene_bs_mouth_lower_lip_full={ "mouth_lower_lip_full_pos" 60 "mouth_lower_lip_full_pos" 60 }
 			gene_bs_mouth_lower_lip_pad={ "mouth_lower_lip_pad_neg" 2 "mouth_lower_lip_pad_neg" 2 }
 			gene_bs_mouth_lower_lip_width={ "mouth_lower_lip_width_pos" 14 "mouth_lower_lip_width_pos" 14 }
 			gene_bs_mouth_philtrum_def={ "mouth_philtrum_def_pos" 51 "mouth_philtrum_def_pos" 51 }
 			gene_bs_mouth_philtrum_shape={ "mouth_philtrum_shape_neg" 23 "mouth_philtrum_shape_neg" 23 }
 			gene_bs_mouth_philtrum_width={ "mouth_philtrum_width_neg" 36 "mouth_philtrum_width_neg" 36 }
 			gene_bs_mouth_upper_lip_def={ "mouth_upper_lip_def_pos" 33 "mouth_upper_lip_def_pos" 33 }
 			gene_bs_mouth_upper_lip_full={ "mouth_upper_lip_full_pos" 24 "mouth_upper_lip_full_pos" 24 }
 			gene_bs_mouth_upper_lip_profile={ "mouth_upper_lip_profile_neg" 99 "mouth_upper_lip_profile_neg" 99 }
 			gene_bs_mouth_upper_lip_width={ "mouth_upper_lip_width_neg" 33 "mouth_upper_lip_width_neg" 33 }
 			gene_bs_nose_forward={ "nose_forward_pos" 255 "nose_forward_neg" 76 }
 			gene_bs_nose_height={ "nose_height_pos" 115 "nose_height_pos" 14 }
 			gene_bs_nose_length={ "nose_length_neg" 133 "nose_length_pos" 93 }
 			gene_bs_nose_nostril_height={ "nose_nostril_height_pos" 34 "nose_nostril_height_pos" 34 }
 			gene_bs_nose_nostril_width={ "nose_nostril_width_pos" 38 "nose_nostril_width_pos" 38 }
 			gene_bs_nose_profile={ "nose_profile_hawk" 62 "nose_profile_neg" 62 }
 			gene_bs_nose_ridge_angle={ "nose_ridge_angle_pos" 25 "nose_ridge_angle_pos" 25 }
 			gene_bs_nose_ridge_width={ "nose_ridge_width_neg" 20 "nose_ridge_width_neg" 20 }
 			gene_bs_nose_size={ "nose_size_pos" 53 "nose_size_pos" 53 }
 			gene_bs_nose_tip_angle={ "nose_tip_angle_neg" 33 "nose_tip_angle_neg" 33 }
 			gene_bs_nose_tip_forward={ "nose_tip_forward_neg" 42 "nose_tip_forward_neg" 42 }
 			gene_bs_nose_tip_width={ "nose_tip_width_pos" 21 "nose_tip_width_pos" 21 }
 			face_detail_cheek_def={ "cheek_def_01" 39 "cheek_def_01" 39 }
 			face_detail_cheek_fat={ "cheek_fat_01_pos" 0 "cheek_fat_01_neg" 45 }
 			face_detail_chin_cleft={ "chin_dimple" 16 "chin_dimple" 16 }
 			face_detail_chin_def={ "chin_def_neg" 214 "chin_def_neg" 214 }
 			face_detail_eye_lower_lid_def={ "eye_lower_lid_def" 119 "eye_lower_lid_def" 119 }
 			face_detail_eye_socket={ "eye_socket_03" 9 "eye_socket_03" 9 }
 			face_detail_nasolabial={ "nasolabial_01" 0 "nasolabial_01" 17 }
 			face_detail_nose_ridge_def={ "nose_ridge_def_pos" 1 "nose_ridge_def_pos" 1 }
 			face_detail_nose_tip_def={ "nose_tip_def" 205 "nose_tip_def" 205 }
 			face_detail_temple_def={ "temple_def" 244 "temple_def" 244 }
 			expression_brow_wrinkles={ "brow_wrinkles_02" 50 "brow_wrinkles_02" 50 }
 			expression_eye_wrinkles={ "eye_wrinkles_02" 175 "eye_wrinkles_02" 175 }
 			expression_forehead_wrinkles={ "forehead_wrinkles_03" 157 "forehead_wrinkles_03" 157 }
 			expression_other={ "cheek_wrinkles_both_01" 0 "cheek_wrinkles_both_01" 0 }
 			complexion={ "complexion_1" 255 "complexion_3" 168 }
 			gene_height={ "normal_height" 123 "normal_height" 123 }
 			gene_bs_body_type={ "body_fat_head_fat_full" 92 "body_fat_head_fat_full" 122 }
 			gene_bs_body_shape={ "body_shape_apple_half" 0 "body_shape_apple_half" 0 }
 			gene_bs_bust={ "bust_clothes" 204 "bust_shape_3_full" 161 }
 			gene_age={ "old_1" 225 "old_1" 225 }
 			gene_eyebrows_shape={ "far_spacing_avg_thickness" 248 "far_spacing_avg_thickness" 248 }
 			gene_eyebrows_fullness={ "layer_2_low_thickness" 149 "layer_2_low_thickness" 149 }
 			gene_body_hair={ "body_hair_avg" 95 "body_hair_avg" 95 }
 			gene_hair_type={ "hair_wavy" 168 "hair_wavy" 168 }
 			gene_baldness={ "no_baldness" 127 "no_baldness" 127 }
 			eye_accessory={ "normal_eyes" 18 "normal_eyes" 18 }
 			teeth_accessory={ "normal_teeth" 0 "normal_teeth" 0 }
 			eyelashes_accessory={ "normal_eyelashes" 73 "normal_eyelashes" 73 }
 			hairstyles={ "western_hairstyles_straight" 42 "all_hairstyles" 0 }
 			beards={ "no_beard" 255 "no_beard" 0 }
 			clothes={ "western_bedchamber" 79 "most_clothes" 0 }
 		}
	}
	enabled = yes
}
cloverskeeper_winner={
	type=male
	id=0
	genes={                 hair_color={ 135 152 80 76 }
			skin_color={ 60 80 60 80 }
			eye_color={ 233 129 172 132 }
			gene_chin_forward={ "chin_forward_neg" 137 "chin_forward_neg" 124 }
			gene_chin_height={ "chin_height_neg" 114 "chin_height_neg" 95 }
			gene_chin_width={ "chin_width_pos" 113 "chin_width_pos" 127 }
			gene_eye_angle={ "eye_angle_pos" 128 "eye_angle_pos" 128 }
			gene_eye_depth={ "eye_depth_neg" 135 "eye_depth_neg" 118 }
			gene_eye_height={ "eye_height_neg" 122 "eye_height_neg" 122 }
			gene_eye_distance={ "eye_distance_pos" 131 "eye_distance_pos" 131 }
			gene_eye_shut={ "eye_shut_pos" 145 "eye_shut_pos" 145 }
			gene_forehead_angle={ "forehead_angle_neg" 136 "forehead_angle_neg" 120 }
			gene_forehead_brow_height={ "forehead_brow_height_neg" 90 "forehead_brow_height_neg" 120 }
			gene_forehead_roundness={ "forehead_roundness_pos" 160 "forehead_roundness_pos" 160 }
			gene_forehead_width={ "forehead_width_pos" 125 "forehead_width_pos" 131 }
			gene_forehead_height={ "forehead_height_pos" 151 "forehead_height_pos" 132 }
			gene_head_height={ "head_height_pos" 165 "head_height_pos" 165 }
			gene_head_width={ "head_width_pos" 130 "head_width_pos" 151 }
			gene_head_profile={ "head_profile_pos" 166 "head_profile_pos" 166 }
			gene_head_top_height={ "head_top_height_pos" 128 "head_top_height_pos" 128 }
			gene_head_top_width={ "head_top_width_pos" 122 "head_top_width_pos" 127 }
			gene_jaw_angle={ "jaw_angle_pos" 172 "jaw_angle_pos" 128 }
			gene_jaw_forward={ "jaw_forward_neg" 105 "jaw_forward_neg" 105 }
			gene_jaw_height={ "jaw_height_pos" 126 "jaw_height_pos" 139 }
			gene_jaw_width={ "jaw_width_pos" 120 "jaw_width_pos" 175 }
			gene_mouth_corner_depth={ "mouth_corner_depth_neg" 116 "mouth_corner_depth_neg" 116 }
			gene_mouth_corner_height={ "mouth_corner_height_pos" 160 "mouth_corner_height_pos" 160 }
			gene_mouth_forward={ "mouth_forward_neg" 120 "mouth_forward_neg" 120 }
			gene_mouth_height={ "mouth_height_pos" 152 "mouth_height_pos" 152 }
			gene_mouth_width={ "mouth_width_neg" 121 "mouth_width_neg" 121 }
			gene_mouth_upper_lip_size={ "mouth_upper_lip_size_neg" 87 "mouth_upper_lip_size_neg" 87 }
			gene_mouth_lower_lip_size={ "mouth_lower_lip_size_neg" 118 "mouth_lower_lip_size_neg" 99 }
			gene_mouth_open={ "mouth_open_pos" 152 "mouth_open_pos" 178 }
			gene_neck_length={ "neck_length_pos" 134 "neck_length_pos" 134 }
			gene_neck_width={ "neck_width_pos" 137 "neck_width_pos" 137 }
			gene_bs_cheek_forward={ "cheek_forward_pos" 79 "cheek_forward_pos" 37 }
			gene_bs_cheek_height={ "cheek_height_pos" 79 "cheek_height_neg" 35 }
			gene_bs_cheek_width={ "cheek_width_neg" 53 "cheek_width_neg" 7 }
			gene_bs_ear_angle={ "ear_angle_neg" 197 "ear_angle_neg" 33 }
			gene_bs_ear_inner_shape={ "ear_inner_shape_pos" 23 "ear_inner_shape_pos" 23 }
			gene_bs_ear_bend={ "ear_both_bend_pos" 4 "ear_upper_bend_pos" 125 }
			gene_bs_ear_outward={ "ear_outward_pos" 45 "ear_outward_pos" 34 }
			gene_bs_ear_size={ "ear_size_pos" 63 "ear_size_pos" 50 }
			gene_bs_eye_corner_depth={ "eye_corner_depth_pos" 51 "eye_corner_depth_pos" 213 }
			gene_bs_eye_fold_shape={ "eye_fold_shape_pos" 1 "eye_fold_shape_pos" 1 }
			gene_bs_eye_size={ "eye_size_pos" 53 "eye_size_pos" 28 }
			gene_bs_eye_upper_lid_size={ "eye_upper_lid_size_neg" 49 "eye_upper_lid_size_pos" 8 }
			gene_bs_forehead_brow_curve={ "forehead_brow_curve_neg" 118 "forehead_brow_curve_neg" 118 }
			gene_bs_forehead_brow_forward={ "forehead_brow_forward_pos" 3 "forehead_brow_forward_pos" 48 }
			gene_bs_forehead_brow_inner_height={ "forehead_brow_inner_height_pos" 105 "forehead_brow_inner_height_pos" 121 }
			gene_bs_forehead_brow_outer_height={ "forehead_brow_outer_height_pos" 89 "forehead_brow_outer_height_pos" 120 }
			gene_bs_forehead_brow_width={ "forehead_brow_width_pos" 63 "forehead_brow_width_pos" 27 }
			gene_bs_jaw_def={ "jaw_def_neg" 57 "jaw_def_neg" 2 }
			gene_bs_mouth_lower_lip_def={ "mouth_lower_lip_def_pos" 85 "mouth_lower_lip_def_pos" 85 }
			gene_bs_mouth_lower_lip_full={ "mouth_lower_lip_full_pos" 81 "mouth_lower_lip_full_pos" 31 }
			gene_bs_mouth_lower_lip_pad={ "mouth_lower_lip_pad_neg" 47 "mouth_lower_lip_pad_neg" 104 }
			gene_bs_mouth_lower_lip_width={ "mouth_lower_lip_width_neg" 5 "mouth_lower_lip_width_neg" 5 }
			gene_bs_mouth_philtrum_def={ "mouth_philtrum_def_pos" 27 "mouth_philtrum_def_pos" 27 }
			gene_bs_mouth_philtrum_shape={ "mouth_philtrum_shape_pos" 38 "mouth_philtrum_shape_pos" 38 }
			gene_bs_mouth_philtrum_width={ "mouth_philtrum_width_neg" 113 "mouth_philtrum_width_neg" 113 }
			gene_bs_mouth_upper_lip_def={ "mouth_upper_lip_def_pos" 42 "mouth_upper_lip_def_pos" 42 }
			gene_bs_mouth_upper_lip_full={ "mouth_upper_lip_full_pos" 97 "mouth_upper_lip_full_pos" 22 }
			gene_bs_mouth_upper_lip_profile={ "mouth_upper_lip_profile_pos" 162 "mouth_upper_lip_profile_pos" 162 }
			gene_bs_mouth_upper_lip_width={ "mouth_upper_lip_width_pos" 11 "mouth_upper_lip_width_pos" 11 }
			gene_bs_nose_forward={ "nose_forward_pos" 31 "nose_forward_neg" 15 }
			gene_bs_nose_height={ "nose_height_pos" 7 "nose_height_neg" 24 }
			gene_bs_nose_length={ "nose_length_pos" 47 "nose_length_pos" 122 }
			gene_bs_nose_nostril_height={ "nose_nostril_height_neg" 79 "nose_nostril_height_pos" 18 }
			gene_bs_nose_nostril_width={ "nose_nostril_width_neg" 141 "nose_nostril_width_neg" 50 }
			gene_bs_nose_profile={ "nose_profile_neg" 43 "nose_profile_neg" 58 }
			gene_bs_nose_ridge_angle={ "nose_ridge_angle_pos" 33 "nose_ridge_angle_neg" 37 }
			gene_bs_nose_ridge_width={ "nose_ridge_width_neg" 7 "nose_ridge_width_neg" 32 }
			gene_bs_nose_size={ "nose_size_pos" 24 "nose_size_pos" 24 }
			gene_bs_nose_tip_angle={ "nose_tip_angle_pos" 7 "nose_tip_angle_pos" 7 }
			gene_bs_nose_tip_forward={ "nose_tip_forward_neg" 213 "nose_tip_forward_neg" 18 }
			gene_bs_nose_tip_width={ "nose_tip_width_neg" 135 "nose_tip_width_neg" 51 }
			face_detail_cheek_def={ "cheek_def_02" 173 "cheek_def_01" 10 }
			face_detail_cheek_fat={ "cheek_fat_01_neg" 43 "cheek_fat_01_pos" 3 }
			face_detail_chin_cleft={ "chin_cleft" 181 "chin_dimple" 13 }
			face_detail_chin_def={ "chin_def_neg" 249 "chin_def_neg" 249 }
			face_detail_eye_lower_lid_def={ "eye_lower_lid_def" 140 "eye_lower_lid_def" 83 }
			face_detail_eye_socket={ "eye_socket_color_01" 25 "eye_socket_color_02" 25 }
			face_detail_nasolabial={ "nasolabial_03" 55 "nasolabial_03" 55 }
			face_detail_nose_ridge_def={ "nose_ridge_def_neg" 18 "nose_ridge_def_pos" 18 }
			face_detail_nose_tip_def={ "nose_tip_def" 60 "nose_tip_def" 60 }
			face_detail_temple_def={ "temple_def" 226 "temple_def" 226 }
			expression_brow_wrinkles={ "brow_wrinkles_01" 33 "brow_wrinkles_01" 33 }
			expression_eye_wrinkles={ "eye_wrinkles_02" 217 "eye_wrinkles_02" 217 }
			expression_forehead_wrinkles={ "forehead_wrinkles_03" 172 "forehead_wrinkles_03" 172 }
			expression_other={ "cheek_wrinkles_both_01" 0 "cheek_wrinkles_both_01" 0 }
			complexion={ "complexion_7" 255 "complexion_5" 201 }
			gene_height={ "normal_height" 126 "normal_height" 116 }
			gene_bs_body_type={ "body_fat_head_fat_low" 126 "body_fat_head_fat_full" 126 }
			gene_bs_body_shape={ "body_shape_hourglass_half" 51 "body_shape_hourglass_half" 0 }
			gene_bs_bust={ "bust_clothes" 80 "bust_default" 111 }
			gene_age={ "old_3" 123 "old_3" 123 }
			gene_eyebrows_shape={ "avg_spacing_lower_thickness" 116 "avg_spacing_avg_thickness" 138 }
			gene_eyebrows_fullness={ "layer_2_low_thickness" 91 "layer_2_avg_thickness" 147 }
			gene_body_hair={ "body_hair_avg" 167 "body_hair_avg" 167 }
			gene_hair_type={ "hair_straight" 117 "hair_straight" 117 }
			gene_baldness={ "no_baldness" 127 "no_baldness" 127 }
			eye_accessory={ "normal_eyes" 103 "normal_eyes" 103 }
			teeth_accessory={ "normal_teeth" 0 "normal_teeth" 0 }
			eyelashes_accessory={ "normal_eyelashes" 201 "normal_eyelashes" 201 }
			beards={ "no_beard" 255 "no_beard" 0 }
			hairstyles={ "northern_hairstyles_straight" 95 "all_hairstyles" 0 }
			clothes={ "western_bedchamber" 79 "most_clothes" 0 }
 }
	override={
			portrait_modifier_overrides={
					custom_beards=male_empty
					custom_hair=male_hair_northern_02
			}
	}
 
	entity={ 0 0 }
}
	}
}

"common/dna_data/00_dna_ee.txt" = {
	{
2000003 = {
	dna = "gIySVE1eTFw2rCWTAaAAfAGDAYMAdgGEAHoBggGkAHMAegB/AHgAbQGHAYABggGfAY0BsgGcAc8AcwGoAbABhAGYAYAAZAHMAFgBoAB2AHIBqgGLAZwBhQBzAHoBfwGAAB8BkQGGAYwAeQGLAYwAdgB2AF0BhAB/AFIBsgBmAF0AJQG3AX8BjwGBAHUALQEnAAEBcAAzAQoABQATAHIArAIWAAwAMwAiATEAMgFDAf4BFgAlARYBKgEwARAAPgEAACgALgAdAQMAPgEpAUkBLwEoASEAPQAyARsBHgA0ACEAZwACACwAEgAMAWUAKgFIACQADgAmAAgATgAVACgBeAAHACIADAEHAFAAMQENAAkBAACcAjMBYAEBAQUAAQEkAAoBMwFhARUBLQAbAG4ARgELAK0BdQAfASsAEAESAQUAIADnAAcFAAIIAZoAHAAfAPAA6wDvAJcDDAJdAKgARgAvAfMCAAIABMUBhAGKAYkBkAN4CwQIAAVkApgDEALABIgIWwR2A28BgQCgAo4BbAB/AH8AcwBzAAAAAAE2ATY="
}
dna_marshalnsc = {
	type = male
	id = 0
	genes = { 		
		hair_color={ 88 252 88 252 }
 		skin_color={ 222 115 222 115 }
 		eye_color={ 39 245 39 245 }
 		gene_chin_forward={ "chin_forward_neg" 71 "chin_forward_neg" 71 }
 		gene_chin_height={ "chin_height_pos" 140 "chin_height_pos" 140 }
 		gene_chin_width={ "chin_width_neg" 125 "chin_width_neg" 125 }
 		gene_eye_angle={ "eye_angle_pos" 138 "eye_angle_pos" 138 }
 		gene_eye_depth={ "eye_depth_pos" 136 "eye_depth_pos" 136 }
 		gene_eye_height={ "eye_height_neg" 103 "eye_height_neg" 103 }
 		gene_eye_distance={ "eye_distance_neg" 123 "eye_distance_neg" 123 }
 		gene_eye_shut={ "eye_shut_pos" 146 "eye_shut_pos" 146 }
 		gene_forehead_angle={ "forehead_angle_pos" 134 "forehead_angle_pos" 134 }
 		gene_forehead_brow_height={ "forehead_brow_height_pos" 135 "forehead_brow_height_pos" 135 }
 		gene_forehead_roundness={ "forehead_roundness_neg" 52 "forehead_roundness_neg" 52 }
 		gene_forehead_width={ "forehead_width_neg" 107 "forehead_width_neg" 107 }
 		gene_forehead_height={ "forehead_height_pos" 168 "forehead_height_pos" 168 }
 		gene_head_height={ "head_height_neg" 104 "head_height_neg" 104 }
 		gene_head_width={ "head_width_pos" 138 "head_width_pos" 138 }
 		gene_head_profile={ "head_profile_neg" 96 "head_profile_neg" 96 }
 		gene_head_top_height={ "head_top_height_pos" 138 "head_top_height_pos" 138 }
 		gene_head_top_width={ "head_top_width_pos" 142 "head_top_width_pos" 142 }
 		gene_jaw_angle={ "jaw_angle_neg" 118 "jaw_angle_neg" 118 }
 		gene_jaw_forward={ "jaw_forward_neg" 125 "jaw_forward_neg" 125 }
 		gene_jaw_height={ "jaw_height_pos" 152 "jaw_height_pos" 152 }
 		gene_jaw_width={ "jaw_width_pos" 138 "jaw_width_pos" 138 }
 		gene_mouth_corner_depth={ "mouth_corner_depth_pos" 135 "mouth_corner_depth_pos" 135 }
 		gene_mouth_corner_height={ "mouth_corner_height_neg" 120 "mouth_corner_height_neg" 120 }
 		gene_mouth_forward={ "mouth_forward_neg" 124 "mouth_forward_neg" 124 }
 		gene_mouth_height={ "mouth_height_neg" 124 "mouth_height_neg" 124 }
 		gene_mouth_width={ "mouth_width_neg" 41 "mouth_width_neg" 41 }
 		gene_mouth_upper_lip_size={ "mouth_upper_lip_size_neg" 126 "mouth_upper_lip_size_neg" 126 }
 		gene_mouth_lower_lip_size={ "mouth_lower_lip_size_neg" 119 "mouth_lower_lip_size_neg" 119 }
 		gene_mouth_open={ "mouth_open_neg" 96 "mouth_open_neg" 96 }
 		gene_neck_length={ "neck_length_pos" 128 "neck_length_pos" 128 }
 		gene_neck_width={ "neck_width_neg" 113 "neck_width_neg" 113 }
 		gene_bs_cheek_forward={ "cheek_forward_pos" 14 "cheek_forward_pos" 14 }
 		gene_bs_cheek_height={ "cheek_height_pos" 47 "cheek_height_pos" 47 }
 		gene_bs_cheek_width={ "cheek_width_neg" 21 "cheek_width_neg" 21 }
 		gene_bs_ear_angle={ "ear_angle_pos" 122 "ear_angle_pos" 122 }
 		gene_bs_ear_inner_shape={ "ear_inner_shape_pos" 38 "ear_inner_shape_pos" 38 }
 		gene_bs_ear_bend={ "ear_both_bend_pos" 6 "ear_both_bend_pos" 6 }
 		gene_bs_ear_outward={ "ear_outward_neg" 29 "ear_outward_neg" 29 }
 		gene_bs_ear_size={ "ear_size_pos" 40 "ear_size_pos" 40 }
 		gene_bs_eye_corner_depth={ "eye_corner_depth_neg" 194 "eye_corner_depth_neg" 194 }
 		gene_bs_eye_fold_shape={ "eye_fold_shape_pos" 32 "eye_fold_shape_pos" 32 }
 		gene_bs_eye_size={ "eye_size_pos" 44 "eye_size_pos" 44 }
 		gene_bs_eye_upper_lid_size={ "eye_upper_lid_size_neg" 217 "eye_upper_lid_size_neg" 217 }
 		gene_bs_forehead_brow_curve={ "forehead_brow_curve_neg" 16 "forehead_brow_curve_neg" 16 }
 		gene_bs_forehead_brow_forward={ "forehead_brow_forward_neg" 49 "forehead_brow_forward_neg" 49 }
 		gene_bs_forehead_brow_inner_height={ "forehead_brow_inner_height_pos" 14 "forehead_brow_inner_height_pos" 14 }
 		gene_bs_forehead_brow_outer_height={ "forehead_brow_outer_height_pos" 116 "forehead_brow_outer_height_pos" 116 }
 		gene_bs_forehead_brow_width={ "forehead_brow_width_neg" 16 "forehead_brow_width_neg" 16 }
 		gene_bs_jaw_def={ "jaw_def_neg" 195 "jaw_def_neg" 195 }
 		gene_bs_mouth_lower_lip_def={ "mouth_lower_lip_def_pos" 87 "mouth_lower_lip_def_pos" 87 }
 		gene_bs_mouth_lower_lip_full={ "mouth_lower_lip_full_pos" 14 "mouth_lower_lip_full_pos" 14 }
 		gene_bs_mouth_lower_lip_pad={ "mouth_lower_lip_pad_neg" 4 "mouth_lower_lip_pad_neg" 4 }
 		gene_bs_mouth_lower_lip_width={ "mouth_lower_lip_width_neg" 6 "mouth_lower_lip_width_neg" 6 }
 		gene_bs_mouth_philtrum_def={ "mouth_philtrum_def_pos" 15 "mouth_philtrum_def_pos" 15 }
 		gene_bs_mouth_philtrum_shape={ "mouth_philtrum_shape_pos" 34 "mouth_philtrum_shape_pos" 34 }
 		gene_bs_mouth_philtrum_width={ "mouth_philtrum_width_neg" 47 "mouth_philtrum_width_neg" 47 }
 		gene_bs_mouth_upper_lip_def={ "mouth_upper_lip_def_pos" 114 "mouth_upper_lip_def_pos" 114 }
 		gene_bs_mouth_upper_lip_full={ "mouth_upper_lip_full_pos" 32 "mouth_upper_lip_full_pos" 32 }
 		gene_bs_mouth_upper_lip_profile={ "mouth_upper_lip_profile_neg" 11 "mouth_upper_lip_profile_neg" 11 }
 		gene_bs_mouth_upper_lip_width={ "mouth_upper_lip_width_neg" 15 "mouth_upper_lip_width_neg" 15 }
 		gene_bs_nose_forward={ "nose_forward_pos" 22 "nose_forward_pos" 22 }
 		gene_bs_nose_height={ "nose_height_pos" 72 "nose_height_pos" 72 }
 		gene_bs_nose_length={ "nose_length_neg" 79 "nose_length_neg" 79 }
 		gene_bs_nose_nostril_height={ "nose_nostril_height_pos" 11 "nose_nostril_height_pos" 11 }
 		gene_bs_nose_nostril_width={ "nose_nostril_width_neg" 79 "nose_nostril_width_neg" 79 }
 		gene_bs_nose_profile={ "nose_profile_pos" 33 "nose_profile_pos" 33 }
 		gene_bs_nose_ridge_angle={ "nose_ridge_angle_pos" 10 "nose_ridge_angle_pos" 10 }
 		gene_bs_nose_ridge_width={ "nose_ridge_width_pos" 48 "nose_ridge_width_pos" 48 }
 		gene_bs_nose_size={ "nose_size_pos" 59 "nose_size_pos" 59 }
 		gene_bs_nose_tip_angle={ "nose_tip_angle_neg" 27 "nose_tip_angle_neg" 27 }
 		gene_bs_nose_tip_forward={ "nose_tip_forward_neg" 175 "nose_tip_forward_neg" 175 }
 		gene_bs_nose_tip_width={ "nose_tip_width_neg" 8 "nose_tip_width_neg" 8 }
 		face_detail_cheek_def={ "cheek_def_01" 74 "cheek_def_01" 74 }
 		face_detail_cheek_fat={ "cheek_fat_01_pos" 152 "cheek_fat_01_pos" 152 }
 		face_detail_chin_cleft={ "chin_cleft" 22 "chin_cleft" 22 }
 		face_detail_chin_def={ "chin_def_neg" 55 "chin_def_neg" 55 }
 		face_detail_eye_lower_lid_def={ "eye_lower_lid_def" 107 "eye_lower_lid_def" 107 }
 		face_detail_eye_socket={ "eye_socket_03" 6 "eye_socket_03" 6 }
 		face_detail_nasolabial={ "nasolabial_01" 11 "nasolabial_01" 11 }
 		face_detail_nose_ridge_def={ "nose_ridge_def_neg" 12 "nose_ridge_def_neg" 12 }
 		face_detail_nose_tip_def={ "nose_tip_def" 20 "nose_tip_def" 20 }
 		face_detail_temple_def={ "temple_def" 0 "temple_def" 0 }
 		expression_brow_wrinkles={ "brow_wrinkles_03" 13 "brow_wrinkles_03" 13 }
 		expression_eye_wrinkles={ "eye_wrinkles_01" 32 "eye_wrinkles_01" 32 }
 		expression_forehead_wrinkles={ "forehead_wrinkles_02" 150 "forehead_wrinkles_02" 150 }
 		expression_other={ "cheek_wrinkles_both_01" 0 "cheek_wrinkles_both_01" 0 }
 		complexion={ "complexion_2" 137 "complexion_2" 137 }
 		gene_height={ "normal_height" 126 "normal_height" 126 }
 		gene_bs_body_type={ "body_fat_head_fat_medium" 134 "body_fat_head_fat_medium" 134 }
 		gene_bs_body_shape={ "body_shape_rectangle_full" 70 "body_shape_rectangle_full" 19 }
 		gene_bs_bust={ "bust_clothes" 9 "bust_shape_1_half" 12 }
 		gene_age={ "old_2" 12 "old_2" 12 }
 		gene_eyebrows_shape={ "far_spacing_low_thickness" 240 "far_spacing_low_thickness" 240 }
 		gene_eyebrows_fullness={ "layer_2_low_thickness" 234 "layer_2_low_thickness" 234 }
 		gene_body_hair={ "body_hair_sparse_low_stubble" 7 "body_hair_sparse_low_stubble" 7 }
 		gene_hair_type={ "hair_straight_thin_beard" 190 "hair_straight_thin_beard" 190 }
 		gene_baldness={ "male_pattern_baldness" 239 "male_pattern_baldness" 168 }
 		eye_accessory={ "normal_eyes" 131 "normal_eyes" 131 }
 		teeth_accessory={ "normal_teeth" 0 "normal_teeth" 0 }
 		eyelashes_accessory={ "normal_eyelashes" 207 "normal_eyelashes" 207 }
 		hairstyles={ "male_hair_fp1_07" 190 "all_hairstyles" 0 }
 		beards={ "no_beard" 255 "no_beard" 0 }
 		clothes={ "western_bedchamber" 79 "most_clothes" 0 }
	}

	override = {
		portrait_modifier_overrides = {
			custom_hair = male_hair_fp1_07
			custom_beards = male_empty
		}
	}

	entity = { 0 0 }
}

dna_tazon = {
	portrait_info = {
	genes = {
 		hair_color={ 147 249 225 211 }
 		skin_color={ 56 73 150 107 }
 		eye_color={ 51 179 17 164 }
 		gene_chin_forward={ "chin_forward_pos" 143 "chin_forward_pos" 141 }
 		gene_chin_height={ "chin_height_pos" 149 "chin_height_pos" 153 }
 		gene_chin_width={ "chin_width_pos" 137 "chin_width_pos" 136 }
 		gene_eye_angle={ "eye_angle_pos" 82 "eye_angle_pos" 155 }
 		gene_eye_depth={ "eye_depth_neg" 168 "eye_depth_neg" 123 }
 		gene_eye_height={ "eye_height_neg" 188 "eye_height_neg" 115 }
 		gene_eye_distance={ "eye_distance_neg" 150 "eye_distance_neg" 125 }
 		gene_eye_shut={ "eye_shut_pos" 118 "eye_shut_pos" 134 }
 		gene_forehead_angle={ "forehead_angle_pos" 143 "forehead_angle_pos" 165 }
 		gene_forehead_brow_height={ "forehead_brow_height_pos" 114 "forehead_brow_height_pos" 163 }
 		gene_forehead_roundness={ "forehead_roundness_neg" 162 "forehead_roundness_neg" 117 }
 		gene_forehead_width={ "forehead_width_pos" 148 "forehead_width_pos" 131 }
 		gene_forehead_height={ "forehead_height_pos" 144 "forehead_height_pos" 128 }
 		gene_head_height={ "head_height_neg" 156 "head_height_neg" 108 }
 		gene_head_width={ "head_width_pos" 97 "head_width_pos" 225 }
 		gene_head_profile={ "head_profile_neg" 102 "head_profile_neg" 92 }
 		gene_head_top_height={ "head_top_height_pos" 155 "head_top_height_pos" 157 }
 		gene_head_top_width={ "head_top_width_pos" 131 "head_top_width_pos" 166 }
 		gene_jaw_angle={ "jaw_angle_pos" 89 "jaw_angle_pos" 131 }
 		gene_jaw_forward={ "jaw_forward_pos" 126 "jaw_forward_pos" 139 }
 		gene_jaw_height={ "jaw_height_neg" 108 "jaw_height_neg" 126 }
 		gene_jaw_width={ "jaw_width_pos" 136 "jaw_width_pos" 144 }
 		gene_mouth_corner_depth={ "mouth_corner_depth_pos" 82 "mouth_corner_depth_pos" 127 }
 		gene_mouth_corner_height={ "mouth_corner_height_pos" 120 "mouth_corner_height_pos" 160 }
 		gene_mouth_forward={ "mouth_forward_pos" 134 "mouth_forward_pos" 134 }
 		gene_mouth_height={ "mouth_height_pos" 203 "mouth_height_pos" 138 }
 		gene_mouth_width={ "mouth_width_pos" 115 "mouth_width_pos" 136 }
 		gene_mouth_upper_lip_size={ "mouth_upper_lip_size_neg" 121 "mouth_upper_lip_size_neg" 107 }
 		gene_mouth_lower_lip_size={ "mouth_lower_lip_size_neg" 143 "mouth_lower_lip_size_neg" 117 }
 		gene_mouth_open={ "mouth_open_neg" 1 "mouth_open_neg" 13 }
 		gene_neck_length={ "neck_length_neg" 121 "neck_length_neg" 109 }
 		gene_neck_width={ "neck_width_pos" 120 "neck_width_pos" 144 }
 		gene_bs_cheek_forward={ "cheek_forward_pos" 17 "cheek_forward_pos" 7 }
 		gene_bs_cheek_height={ "cheek_height_pos" 55 "cheek_height_pos" 32 }
 		gene_bs_cheek_width={ "cheek_width_neg" 21 "cheek_width_neg" 7 }
 		gene_bs_ear_angle={ "ear_angle_pos" 57 "ear_angle_pos" 41 }
 		gene_bs_ear_inner_shape={ "ear_inner_shape_pos" 22 "ear_inner_shape_pos" 22 }
 		gene_bs_ear_bend={ "ear_lower_bend_pos" 102 "ear_both_bend_pos" 44 }
 		gene_bs_ear_outward={ "ear_outward_neg" 99 "ear_outward_pos" 20 }
 		gene_bs_ear_size={ "ear_size_pos" 9 "ear_size_pos" 33 }
 		gene_bs_eye_corner_depth={ "eye_corner_depth_pos" 109 "eye_corner_depth_pos" 230 }
 		gene_bs_eye_fold_shape={ "eye_fold_shape_neg" 33 "eye_fold_shape_pos" 29 }
 		gene_bs_eye_size={ "eye_size_pos" 59 "eye_size_neg" 26 }
 		gene_bs_eye_upper_lid_size={ "eye_upper_lid_size_pos" 127 "eye_upper_lid_size_neg" 7 }
 		gene_bs_forehead_brow_curve={ "forehead_brow_curve_pos" 13 "forehead_brow_curve_neg" 108 }
 		gene_bs_forehead_brow_forward={ "forehead_brow_forward_pos" 109 "forehead_brow_forward_pos" 38 }
 		gene_bs_forehead_brow_inner_height={ "forehead_brow_inner_height_pos" 67 "forehead_brow_inner_height_pos" 121 }
 		gene_bs_forehead_brow_outer_height={ "forehead_brow_outer_height_neg" 41 "forehead_brow_outer_height_pos" 44 }
 		gene_bs_forehead_brow_width={ "forehead_brow_width_neg" 39 "forehead_brow_width_neg" 45 }
 		gene_bs_jaw_def={ "jaw_def_neg" 15 "jaw_def_neg" 51 }
 		gene_bs_mouth_lower_lip_def={ "mouth_lower_lip_def_pos" 127 "mouth_lower_lip_def_pos" 123 }
 		gene_bs_mouth_lower_lip_full={ "mouth_lower_lip_full_neg" 75 "mouth_lower_lip_full_neg" 83 }
 		gene_bs_mouth_lower_lip_pad={ "mouth_lower_lip_pad_neg" 39 "mouth_lower_lip_pad_pos" 23 }
 		gene_bs_mouth_lower_lip_width={ "mouth_lower_lip_width_neg" 59 "mouth_lower_lip_width_neg" 32 }
 		gene_bs_mouth_philtrum_def={ "mouth_philtrum_def_pos" 89 "mouth_philtrum_def_pos" 50 }
 		gene_bs_mouth_philtrum_shape={ "mouth_philtrum_shape_pos" 19 "mouth_philtrum_shape_neg" 1 }
 		gene_bs_mouth_philtrum_width={ "mouth_philtrum_width_pos" 109 "mouth_philtrum_width_neg" 195 }
 		gene_bs_mouth_upper_lip_def={ "mouth_upper_lip_def_pos" 127 "mouth_upper_lip_def_pos" 34 }
 		gene_bs_mouth_upper_lip_full={ "mouth_upper_lip_full_pos" 27 "mouth_upper_lip_full_neg" 3 }
 		gene_bs_mouth_upper_lip_profile={ "mouth_upper_lip_profile_neg" 47 "mouth_upper_lip_profile_pos" 64 }
 		gene_bs_mouth_upper_lip_width={ "mouth_upper_lip_width_neg" 43 "mouth_upper_lip_width_pos" 67 }
 		gene_bs_nose_forward={ "nose_forward_neg" 37 "nose_forward_neg" 20 }
 		gene_bs_nose_height={ "nose_height_pos" 79 "nose_height_pos" 77 }
 		gene_bs_nose_length={ "nose_length_pos" 27 "nose_length_pos" 46 }
 		gene_bs_nose_nostril_height={ "nose_nostril_height_pos" 21 "nose_nostril_height_pos" 125 }
 		gene_bs_nose_nostril_width={ "nose_nostril_width_neg" 27 "nose_nostril_width_neg" 47 }
 		gene_bs_nose_profile={ "nose_profile_pos" 31 "nose_profile_pos" 18 }
 		gene_bs_nose_ridge_angle={ "nose_ridge_angle_neg" 9 "nose_ridge_angle_neg" 10 }
 		gene_bs_nose_ridge_width={ "nose_ridge_width_pos" 109 "nose_ridge_width_pos" 32 }
 		gene_bs_nose_size={ "nose_size_neg" 13 "nose_size_neg" 29 }
 		gene_bs_nose_tip_angle={ "nose_tip_angle_neg" 3 "nose_tip_angle_pos" 39 }
 		gene_bs_nose_tip_forward={ "nose_tip_forward_pos" 5 "nose_tip_forward_neg" 19 }
 		gene_bs_nose_tip_width={ "nose_tip_width_neg" 1 "nose_tip_width_pos" 103 }
 		face_detail_cheek_def={ "cheek_def_01" 47 "cheek_def_02" 56 }
 		face_detail_cheek_fat={ "cheek_fat_02_pos" 64 "cheek_fat_01_pos" 25 }
 		face_detail_chin_cleft={ "chin_cleft" 4 "chin_cleft" 18 }
 		face_detail_chin_def={ "chin_def_neg" 63 "chin_def" 5 }
 		face_detail_eye_lower_lid_def={ "eye_lower_lid_def" 176 "eye_lower_lid_def" 233 }
 		face_detail_eye_socket={ "eye_socket_color_01" 150 "eye_socket_color_01" 208 }
 		face_detail_nasolabial={ "nasolabial_03" 21 "nasolabial_03" 21 }
 		face_detail_nose_ridge_def={ "nose_ridge_def_neg" 0 "nose_ridge_def_pos" 194 }
 		face_detail_nose_tip_def={ "nose_tip_def" 30 "nose_tip_def" 74 }
 		face_detail_temple_def={ "temple_def" 33 "temple_def" 140 }
 		expression_brow_wrinkles={ "brow_wrinkles_04" 35 "brow_wrinkles_04" 35 }
 		expression_eye_wrinkles={ "eye_wrinkles_01" 70 "eye_wrinkles_01" 70 }
 		expression_forehead_wrinkles={ "forehead_wrinkles_01" 90 "forehead_wrinkles_01" 90 }
 		expression_other={ "cheek_wrinkles_both_01" 0 "cheek_wrinkles_both_01" 0 }
 		complexion={ "complexion_1" 209 "complexion_2" 129 }
 		gene_height={ "normal_height" 122 "normal_height" 127 }
 		gene_bs_body_type={ "body_fat_head_fat_low" 116 "body_fat_head_fat_low" 116 }
 		gene_bs_body_shape={ "body_shape_hourglass_half" 0 "body_shape_hourglass_half" 0 }
 		gene_bs_bust={ "bust_clothes" 31 "bust_shape_3_full" 154 }
 		gene_age={ "old_3" 80 "old_3" 80 }
 		gene_eyebrows_shape={ "avg_spacing_low_thickness" 143 "far_spacing_low_thickness" 235 }
 		gene_eyebrows_fullness={ "layer_2_avg_thickness" 151 "layer_2_low_thickness" 174 }
 		gene_body_hair={ "body_hair_avg" 129 "body_hair_avg" 129 }
 		gene_hair_type={ "hair_straight" 158 "hair_straight" 158 }
 		gene_baldness={ "male_pattern_baldness" 94 "male_pattern_baldness" 94 }
 		eye_accessory={ "normal_eyes" 218 "normal_eyes" 218 }
 		teeth_accessory={ "normal_teeth" 0 "normal_teeth" 0 }
 		eyelashes_accessory={ "normal_eyelashes" 204 "normal_eyelashes" 204 }
 		beards={ "western_beards_straight" 255 "no_beard" 0 }
 		hairstyles={ "western_hairstyles_straight" 231 "all_hairstyles" 0 }
		}
	}
	enabled=yes
}
	}
}

"events/gothic_wars_events.txt" = {
	{
### King of the Goths is crowned after the Death of Theodosius and starts a rebellion 
### by Juli
gothic_wars.0001 = {
	type = character_event
	theme = war
	title = gothic_wars_0001.t
	desc = gothic_wars_0001.desc
	override_icon = { reference = "gfx/interface/icons/event_types/special_visigoths.dds" }

	left_portrait = {
		character = ROOT 
		animation = rage 
	}
	right_portrait = {
		character = character:70534
		animation = zealous
	}
	lower_left_portrait = {
		character = title:e_western_roman_empire.holder
		animation = cynical
	}
	lower_right_portrait = {
		character = title:e_byzantium.holder
		animation = grief
	}
	
	option = {
		name = gothic_wars_0001.a
		add_character_modifier = {
			modifier = TFE_king_of_the_goths_modifier # They became King of the Goths
		}
	}
}
### King of the Goth Has won the rebellion and now can choose to press demands on the emperor
### by Juli
gothic_wars.0002 = {
	type = character_event
	theme = war
	title = gothic_wars_0002.t
	desc = gothic_wars_0002.desc
	override_icon = { reference = "gfx/interface/icons/event_types/special_visigoths.dds" }

	left_portrait = {
		character = ROOT 
		animation = personality_zealous 
	}
	right_portrait = {
		character = title:e_byzantium.holder
		animation = shame
	}
	
	option = { # The King chooses to pressure the Emperor into giving him an office
		custom_tooltip = gothic_wars_0002.option.a.tooltip
		name = gothic_wars_0002.a
		title:e_byzantium.holder = {trigger_event = gothic_wars.0003 }
		ai_chance = {
			# AI should always be fairly likely to pick this.
			base = 100
		}
	}
	option = { # The King chooses to forgive the romans and settle with the plundering he gained
		name = gothic_wars_0002.b
		ai_chance = {
			base = 1
		}
	}
}
### Emperor of Byzantium recieves demand from the Goths
### by Juli
gothic_wars.0003 = {
	type = character_event
	theme = war
	title = gothic_wars_0003.t
	desc = gothic_wars_0003.desc
	override_icon = { reference = "gfx/interface/icons/event_types/special_visigoths.dds" }

	left_portrait = {
		character = title:k_visigoths.holder
		animation = personality_greedy
	}
	right_portrait = {
		character = title:e_byzantium.holder
		animation = vengeful
	}
	
	option = { # The Emperor accepts the demands
		name = gothic_wars_0003.a
		title:k_visigoths.holder = {trigger_event = gothic_wars.0004 }
		ai_chance = {
			# AI should always be fairly likely to pick this.
			base = 100
		}
	}
	option = { # The Emperor declines the offer, making the goths rebel again
		name = gothic_wars_0003.b
		title:k_visigoths.holder = {
			start_war = {
				casus_belli = depose_war
				target = title:e_byzantium.holder
				target_title = title:e_byzantium
			}
		}
		ai_chance = {
			base = 1
		}
	}
}
### King of the Goths is granted an Office in Illyricum
### by Juli
gothic_wars.0004 = {
	type = character_event
	theme = war
	title = gothic_wars_0004.t
	desc = gothic_wars_0004.desc
	override_icon = { reference = "gfx/interface/icons/event_types/special_visigoths.dds" }

	left_portrait = {
		character = ROOT 
		animation = personality_bold
	}
	right_portrait = {
		character = title:e_byzantium.holder
		animation = shame
	}
	
	option = { # The Emperor accepted the demands and grants Illyricum to Alaric
		name = gothic_wars_0004.a
		every_county_in_region = {
			region = custom_roman_illyricum
			limit = {
				holder = {
					highest_held_title_tier < tier_kingdom #to not vassalize the vicar
					top_liege = title:e_byzantium.holder
				}
			}
			create_title_and_vassal_change = {
			  type = conquest
			  save_scope_as = change
			  add_claim_on_loss = no
			}
			holder = {
				change_liege = {
					liege = root
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
		}
		hidden_effect = {
			every_realm_county = {
				limit = {
					NOT = {
						any_county_in_region = {
							region = custom_roman_illyricum
							THIS = PREV
						}
					}
					holder = {
						OR = {
							any_liege_or_above = {
								THIS = root
							}
							THIS = root
						}
					}
				}
				if = {
					limit = {
						holder = root
					}
					create_character = {
						location = THIS.title_province
						gender = male
						dynasty = generate
						faith = root.faith
						culture = root.culture
						save_scope_as = local_warlord
					}
					create_title_and_vassal_change = {
						type = usurped
						save_scope_as = change
						add_claim_on_loss = no
					}
					change_title_holder = {
						holder = scope:local_warlord
						change = scope:change
						take_baronies = yes
					}
					resolve_title_and_vassal_change = scope:change
					create_title_and_vassal_change = {
						type = conquest
						save_scope_as = change
						add_claim_on_loss = no
					}
					scope:local_warlord = {
						change_liege = {
							liege = title:e_byzantium.holder
							change = scope:change
						}
					}
					resolve_title_and_vassal_change = scope:change
				}
				else = {
					holder = {
						create_title_and_vassal_change = {
							type = conquest
							save_scope_as = change
							add_claim_on_loss = no
						}
						change_liege = {
							liege = title:e_byzantium.holder
							change = scope:change
						}
						resolve_title_and_vassal_change = scope:change
					}
				}
				
			}
		}
		add_pressed_claim = title:k_italia_suburbicariae
	}
}
	}

	{
### Invasion of the Gothic pagan Radagaisus around in 405-406 - Hróð
gothic_wars.0011 = {
	scope = none
	hidden = yes

	immediate = {
		debug_log = "Radagaisus appeared!"
		debug_log_date = yes
		spawn_radagaisus_character_effect = yes
	}
}
	}

	{
## Radagaisus notification event global - Hróð
gothic_wars.0012 = {
	type = character_event
	theme = war
	title = gothic_wars_0012.t
	desc = gothic_wars_0012.desc

	left_portrait = {
		character = character:radagaisian_02
		animation = rage 
	}
	right_portrait = {
		character = title:e_western_roman_empire.holder
		animation = fear
	}

	option = {
		name = gothic_wars_0012.a
	}
}
## Radagaisus notification event for defender - Hróð
gothic_wars.0013 = {
	type = character_event
	theme = war
	title = gothic_wars_0012.t
	desc = gothic_wars_0013.desc

	left_portrait = {
		character = character:radagaisian_02
		animation = rage 
	}
	right_portrait = {
		character = ROOT
		animation = fear
	}

	option = {
		name = gothic_wars_0013.a
	}
}
## Defender event if Radagaisus wins - Hróð
gothic_wars.0014 = {
	type = character_event
	theme = war
	title = gothic_wars_0012.t
	desc = gothic_wars_0014.desc

	left_portrait = {
		character = character:radagaisian_02
		animation = personality_bold
	}
	right_portrait = {
		character = scope:defender
		animation = shame
	}

	option = {
		name = gothic_wars_0014.a
		scope:defender = {
			add_pressed_claim = title:k_italia_annonariae
			add_pressed_claim = title:k_italia_suburbicariae
		}
	}
}
## Event for the Visigothic King if Radagaisus loses - Hróð
gothic_wars.0015 = {
	type = character_event
	theme = war
	title = gothic_wars_0012.t
	desc = gothic_wars_0015.desc

	left_portrait = {
		character = scope:defender
		animation = personality_bold
	}
	right_portrait = {
		character = character:radagaisian_02
		animation = grief
	}

	option = {
		name = gothic_wars_0015.a
		scope:visigothic_king = {
			add_unpressed_claim = title:k_italia_annonariae
			add_unpressed_claim = title:k_italia_suburbicariae
		}
		title:e_western_roman_empire.holder = {
			add_opinion = {
				target = scope:visigothic_king
				modifier = angry_opinion
				opinion = -30
			}
		}
		title:e_byzantium.holder = {
			add_opinion = {
				target = scope:visigothic_king
				modifier = angry_opinion
				opinion = -30
			}
		}
		spawn_smaller_gothic_troops_effect = yes
		ai_chance = {
			base = 50

			opinion_modifier = {
				if = {
					exists = scope:visigothic_king.liege
				}
				who = scope:visigothic_king
				opinion_target = scope:visigothic_king.liege
				multiplier = 1
			}
		}
	}
	option = {
		name = gothic_wars_0015.b
		title:e_western_roman_empire.holder = {
			add_opinion = {
				target = scope:visigothic_king
				modifier = pleased_opinion
				opinion = 30
			}
		}
		title:e_byzantium.holder = {
			add_opinion = {
				target = scope:visigothic_king
				modifier = pleased_opinion
				opinion = 30
			}
		}
		ai_chance = {
			base = 50

			opinion_modifier = {
				if = {
					exists = scope:visigothic_king.liege
				}
				who = scope:visigothic_king
				opinion_target = scope:visigothic_king.liege
				multiplier = 1
			}
		}
	}
}
	}
}

"common/scripted_effects/TFE_landless_adventurer_effects.txt" = {
	{
		############################################################
		# 
		# 361 LAAMP
		# 
		############################################################

		# Charietto
		character:ripurian_misc_001 ?= {
			if = {
				limit = {
					is_alive = yes
					is_landless_adventurer = yes
				}
				add_realm_law_skip_effects = camp_purpose_brigands
			}
		}

		# Moses the Black
		character:nobatia_12 ?= {
			if = {
				limit = {
					is_alive = yes
					is_landless_adventurer = yes
				}
				add_realm_law_skip_effects = camp_purpose_brigands
			}
		}
	}

	{
		############################################################
		# 
		# 395 LAAMP
		# 
		############################################################

		# Olympiodorus
		character:aegyptian_misc_009 ?= {
			if = {
				limit = {
					is_alive = yes
					is_landless_adventurer = yes
				}
				add_realm_law_skip_effects = camp_purpose_scholars
			}
		}

		# Claudius Marius Victorius/Victorinus
		character:gallo_roman_misc_010 ?= {
			if = {
				limit = {
					is_alive = yes
					is_landless_adventurer = yes
				}
				add_realm_law_skip_effects = camp_purpose_scholars
			}
		}

		# Fravitta
		character:992079 ?= {
			if = {
				limit = {
					is_alive = yes
					is_landless_adventurer = yes
				}
				add_realm_law_skip_effects = camp_purpose_mercenaries
			}
		}
	}

	{
		############################################################
		# 
		# 476 LAAMP
		# 
		############################################################


		# Damascius
		character:syrian_misc_06 ?= {
			if = {
				limit = {
					is_alive = yes
					is_landless_adventurer = yes
				}
				add_realm_law_skip_effects = camp_purpose_scholars
			}
		}

		# Pamprepius
		character:aegyptus_84 ?= {
			if = {
				limit = {
					is_alive = yes
					is_landless_adventurer = yes
				}
				add_realm_law_skip_effects = camp_purpose_scholars
			}
		}
	}

	{
		############################################################
		# 
		# 532 LAAMP
		# 
		############################################################

		# Cosmas Indicopleustes
		character:aegyptian_misc_008 ?= {
			if = {
				limit = {
					is_alive = yes
					is_landless_adventurer = yes
				}
				add_realm_law_skip_effects = camp_purpose_explorers
			}
		}
	}
}

"events/liang_events.txt" = {
	{
# Meng Min is a cool guy, but destiny calls for Li Gao to do his part as the distant ancestor of the Tang Dynasty
liang.0012 = {
	type = character_event
	hidden = yes
	
	trigger = {
		this = character:western_liang_043 # Meng Min
		character:western_liang_005 = { # Li Gao is alive
			is_alive = yes
		}
	}

	immediate = {
		death = {
			death_reason = death_natural_causes
		}
	}
}
	}

	{
# Give Li Gao the territory
liang.0010 = {
	type = character_event
	title = liang.0010.t
	desc = liang.0010.desc
	theme = realm
	
	left_portrait = {
		character = scope:governor
		animation = personality_content
	}
	right_portrait = {
		character = scope:li_gao
		animation = personality_forgiving
	}
	lower_center_portrait = {
		character = scope:guo_nen
	}

	trigger = {
		game_start_date < 400.1.1
		game_start_date > 385.1.1
		NOT = { has_global_variable = TFE_li_gao_becomes_governor }
		scope:title = {
			this = title:d_guiyi
		}
		character:western_liang_005 ?= {
			is_alive = yes
			NOT = { has_title = scope:title }
		}
	}

	immediate = {
		set_global_variable = {
			name = TFE_li_gao_becomes_governor
			value = yes
		}
		save_scope_as = governor
		character:western_liang_005 = {
			save_scope_as = li_gao
		}
		character:liang_007 = {
			save_scope_as = guo_nen
		}
	}

	# Give Li Gao the title
	option = {
		name = liang.0010.a
		add_character_flag = gave_li_gao_title
		scope:li_gao = {
			trigger_event = liang.0011
		}
		show_as_tooltip = {			
			scope:li_gao = {
				get_title = scope:title
			}
			if = {
				limit = {
					has_title = title:d_aksay
				}
				scope:li_gao = {
					get_title = title:d_aksay
				}
			}
			if = {
				limit = {
					has_title = title:c_guazhou
				}
				scope:li_gao = {
					get_title = title:c_guazhou
				}
			}
			scope:li_gao = {
				add_prestige = 500
			}
		}
		if = {
			limit = {
				scope:li_gao = {
					is_ai = yes
				}
			}	
			set_player_character = scope:li_gao	
		}
	}

	# Don't give Li Gao the title
	option = {
		name = liang.0010.b
		trigger = {
			is_ai = no
		}
		add_prestige = -250
		add_character_modifier = {
			modifier = TFE_refused_to_give_up_dunhuang
		}
		scope:li_gao = {
			add_pressed_claim = scope:title		
		}
		if = {
			limit = {
				has_title = title:d_aksay
			}
			scope:li_gao = {
				add_pressed_claim = title:d_aksay
			}
		}
		if = {
			limit = {
				has_title = title:c_guazhou
			}
			scope:li_gao = {
				add_pressed_claim = title:c_guazhou
			}
		}	
	}

	after = {
		hidden_effect = {
			if = {
				limit = {
					has_character_flag = gave_li_gao_title
				}
				if = {
					limit = {
						is_landed = yes
						highest_held_title_tier < tier_duchy
					}
					create_title_and_vassal_change = {
						type = swear_fealty
						save_scope_as = change
					}
					scope:governor = {
						change_liege = {
							liege = scope:li_gao
							change = scope:change
						}
					}
					resolve_title_and_vassal_change = scope:change
				}
				else_if = {
					limit = {
						is_landed = no
					}
					scope:li_gao = {
						add_courtier = scope:governor
					}
				}
				remove_character_flag = gave_li_gao_title
			}
		}
	}
}
	}
}

"events/roman_events.txt" = {
	{
western_roman.0027 = {
	type = character_event
	title = western_roman.0027.t
	desc = western_roman.0027.desc
	theme = realm
	left_portrait = {
		character = root
		animation = personality_vengeful
	}
	right_portrait = {
		character = character:orestes_02
		animation = personality_greedy
	}

	immediate = {
		play_music_cue = "TFE_General_Cue"
	}

	option = {
		name = western_roman.0027.a
		add_stress = major_stress_gain
		set_relation_rival = {
			target = character:996002
			reason = rival_usurper
		}
		add_pressed_claim = title:k_italy
		add_pressed_claim = title:d_romagna
		add_pressed_claim = title:c_ravenna
		remove_trait = diligent
		add_trait = impatient
		custom_tooltip = nepos_ambition_tooltip
		set_global_variable = {
			name = nepos_ambition_var
			value = yes
		}
		ai_chance = {
			base = 90
		}
	}
	option = {
		name = western_roman.0027.b
		add_prestige = 500
		every_vassal = {
			add_opinion = {
				modifier = friendliness_opinion
				target = scope:root
				opinion = 20
			}
		}
		remove_trait = ambitious
		add_trait = content
		ai_chance = {
			base = 10
		}
	}
}
	}

	{
western_roman.0038 = {
	type = character_event
	title = western_roman.0038.t
	desc = western_roman.0038.desc
	theme = realm
	override_icon = { reference = "gfx/interface/icons/event_types/special_rhomaion.dds" }

	left_portrait = {
		character = root
		animation = anger
	}
	lower_center_portrait = {
		character = global_var:gelimer
		animation = personality_greedy
	}
	right_portrait = {
		character = global_var:hildirix
		animation = fear
	}

	immediate = {
		title:e_byzantium.holder = {
			add_legitimacy = -400
		}
		if = {
			limit = {
				character:vandals_005 = {
					is_alive = yes
				}
			}
			set_global_variable = {
				name = hildirix
				value = character:vandals_005
			}
			character:vandals_005 = {
				add_character_flag = {
					flag = is_being_tortured
					years = 20 #
				}
			}
			title:k_vandals.holder = {
				imprison = {
					target = global_var:hildirix
					type = house_arrest
				}
			}
			set_global_variable = {
				name = gelimer
				value = title:k_vandals.holder
			}
		}
		add_character_modifier = {
			modifier = renovatio_imperii
			years = 10
		}
	}

	option = {
		name = western_roman.0038.a
		ai_chance = {
			base = 100
		}		
	}

	option = {
		name = western_roman.0038.b
		ai_chance = {
			base = 0
		}		
	}

}
	}

	{
western_roman.0039 = {
	type = character_event
	title = western_roman.0039.t
	desc = western_roman.0039.desc
	theme = realm
	override_icon = { reference = "gfx/interface/icons/event_types/special_rhomaion.dds" }

	left_portrait = {
		character = root
		animation = personality_vengeful
	}
	lower_center_portrait = {
		character = scope:commander_2
		animation = personality_bold
	}
	right_portrait = {
		character = scope:commander_1
		animation = personality_bold
	}

	immediate = {
		title:k_vandals.holder = {
			set_scope_as = target_ruler
		}
		if = {
			limit = {
				global_var:belisarius = {
					is_alive = yes
				}
			}
			global_var:belisarius = {
				save_scope_as = commander_1
			}
		}
		else_if = {
			limit = {
				character:armenian_01 = {
					is_alive = yes
				}
				character:armenian_01 = {
					is_courtier_of = root
				}
			}
			character:armenian_01 = {
				save_scope_as = commander_1
			}
		}
		else_if = {
			limit = {
				character:armenian_02 = {
					is_alive = yes
				}
				character:armenian_02 = {
					is_courtier_of = root
				}
			}
			character:armenian_02 = {
				save_scope_as = commander_1
			}
		}
		else = {
			random_courtier = {
				limit = {
					is_adult = yes
					is_male = yes
				}
				save_scope_as = commander_1
			}
		}
		random_courtier = {
			limit = {
				NOT = { THIS = scope:commander_1 }
				is_adult = yes
				is_male = yes
			}
			save_scope_as = commander_2
		}
	}

	option = {
		name = western_roman.0039.a
		hidden_effect = {
			set_global_variable = {
				name = justinian_commander
				value = scope:commander_1
			}
			start_vandalic_war_effect = yes
		}
		ai_chance = {
			base = 100
		}		
	}

	option = {
		name = western_roman.0039.b
		hidden_effect = {
			set_global_variable = {
				name = justinian_commander
				value = scope:commander_2
			}
			start_vandalic_war_effect = yes
		}
		ai_chance = {
			base = 0
		}		
	}
}
	}

	{
western_roman.0041 = {
	type = character_event
	title = western_roman.0041.t
	desc = western_roman.0041.desc
	theme = realm
	override_icon = { reference = "gfx/interface/icons/event_types/special_rhomaion.dds" }

	left_portrait = {
		character = root
		animation = personality_honorable
	}

	immediate = {
		global_var:justinian_commander = {
			add_character_flag = STOP_ADMIN
		}
		title:k_vandals.holder = {
			save_scope_as = justinian_commander
		}
		set_global_variable = {
			name = vandalic_war_won
			value = yes
		}
		title:e_byzantium.holder = {
			add_legitimacy = 100
		}
		if = {
			limit = {
				character:vandals_146 = {
					is_alive = yes
					is_landed = yes
					top_liege = root
				}
			}
			character:vandals_146 = {
				vassal_contract_set_obligation_level = { type = feudal_government_taxes level = 2 }
				vassal_contract_set_obligation_level = { type = feudal_government_levies level = 1 }
				vassal_contract_set_obligation_level = { type = religious_rights level = 1 }
			}
		}
	}

	option = {
		name = western_roman.0041.a
		if = {
			limit = {
				exists = title:d_tunis.holder
				title:d_tunis.holder = { is_vassal_or_below_of = scope:justinian_commander }
			}
			title:d_tunis = {
				save_temporary_scope_as = current_county
			}
			create_title_and_vassal_change = {
				type = usurped
				save_scope_as = change
				add_claim_on_loss = no
			}
			scope:current_county = {
				change_title_holder = {
					holder = scope:justinian_commander
					change = scope:change
					take_baronies = yes
				}
			}
			resolve_title_and_vassal_change = scope:change
		}
		if = {
			limit = {
				title:c_tunis.holder = { is_vassal_or_below_of = scope:justinian_commander }
			}
			title:c_tunis = {
				save_temporary_scope_as = current_county
			}
			create_title_and_vassal_change = {
				type = usurped
				save_scope_as = change
				add_claim_on_loss = no
			}
			scope:current_county = {
				change_title_holder = {
					holder = scope:justinian_commander
					change = scope:change
					take_baronies = yes
				}
			}
			resolve_title_and_vassal_change = scope:change
		}
		end_vandalic_war_africae_effect = yes
		global_var:justinian_commander = {
			remove_character_flag = STOP_ADMIN
		}
		ai_chance = {
			base = 5
		}		
	}

	option = {
		name = western_roman.0041.b
		trigger = {
			NOT = { scope:justinian_commander = character:belisarius_001 }
		}
		end_vandalic_war_africae_effect = yes
		title:k_africae = {
			save_temporary_scope_as = current_county
		}
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:current_county = {
			change_title_holder = {
				holder = root
				change = scope:change
				take_baronies = yes
			}
		}
		resolve_title_and_vassal_change = scope:change

		title:c_trapani = {
			save_temporary_scope_as = current_county
		}
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:current_county = {
			change_title_holder = {
				holder = scope:justinian_commander
				change = scope:change
				take_baronies = yes
			}
		}

		resolve_title_and_vassal_change = scope:change

		title:c_mahdiya = {
			save_temporary_scope_as = current_county
		}
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:current_county = {
			change_title_holder = {
				holder = scope:justinian_commander.top_liege
				change = scope:change
				take_baronies = yes
			}
		}
		resolve_title_and_vassal_change = scope:change

		global_var:justinian_commander = {
			remove_character_flag = STOP_ADMIN
		}

		ai_chance = {
			base = 0
		}		
	}
	option = {
		name = western_roman.0041.c
		trigger = {
			global_var:hildirix = {
				is_alive = yes
			}
		}
		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:recall_belisarius
		}
		title:c_tunis = {
			save_temporary_scope_as = current_county
		}
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:current_county = {
			change_title_holder = {
				holder = global_var:hildirix
				change = scope:change
				take_baronies = yes
			}
		}
		resolve_title_and_vassal_change = scope:change

		title:k_vandals = {
			add_to_list = titles_to_usurp
		}

		title:k_vandals.holder = {
			every_vassal = {
				limit = {
					capital_county = {
						NOT = { empire = { this = title:e_byzantium } }
					}
				}
				add_to_list = vassals_to_defect
			}
		}

		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = title_change
			add_claim_on_loss = no
		}
		every_in_list = {
			list = titles_to_usurp
			change_title_holder = {
				holder = global_var:hildirix
				change = scope:title_change
				take_baronies = no
			}
		}
		every_in_list = {
			list = vassals_to_defect
			change_liege = {
				liege = global_var:hildirix
				change = scope:title_change
			}
		}
		resolve_title_and_vassal_change = scope:title_change

		title:c_trapani = {
			save_temporary_scope_as = current_county
		}
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:current_county = {
			change_title_holder = {
				holder = scope:justinian_commander
				change = scope:change
				take_baronies = yes
			}
		}
		scope:justinian_commander = {
			change_liege = {
				liege = top_liege
				change = scope:title_change
			}
		}
		resolve_title_and_vassal_change = scope:change

		title:c_mahdiya = {
			save_temporary_scope_as = current_county
		}
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:current_county = {
			change_title_holder = {
				holder = global_var:hildirix
				change = scope:change
				take_baronies = yes
			}
		}
		resolve_title_and_vassal_change = scope:change

		global_var:justinian_commander = {
			remove_character_flag = STOP_ADMIN
		}

		ai_chance = {
			base = 90
		}		
	}
	option = {
		name = western_roman.0041.d
		trigger = {
			global_var:hildirix = {
				is_alive = yes
			}
		}
		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:recall_belisarius
		}
		title:c_tunis = {
			save_temporary_scope_as = current_county
		}
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:current_county = {
			change_title_holder = {
				holder = global_var:hildirix
				change = scope:change
				take_baronies = yes
			}
		}
		resolve_title_and_vassal_change = scope:change

		title:k_vandals = {
			add_to_list = titles_to_usurp
		}

		title:k_vandals.holder = {
			every_vassal = {
				limit = {
					capital_county = {
						NOT = { empire = { this = title:e_byzantium } }
					}
				}
				add_to_list = vassals_to_defect
			}
		}

		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = title_change
			add_claim_on_loss = no
		}
		every_in_list = {
			list = titles_to_usurp
			change_title_holder = {
				holder = global_var:hildirix
				change = scope:title_change
				take_baronies = no
			}
		}
		every_in_list = {
			list = vassals_to_defect
			change_liege = {
				liege = global_var:hildirix
				change = scope:title_change
			}
		}
		resolve_title_and_vassal_change = scope:title_change

		create_title_and_vassal_change = {
			type = independency 
			save_scope_as = change
		}
		global_var:hildirix = {
			becomes_independent = {
				change = scope:change
			}
		}
		resolve_title_and_vassal_change = scope:change

		make_tributary = {
			TYPE = tributary_permanent
			SUZERAIN = title:e_byzantium.holder
			TRIBUTARY = global_var:hildirix
		}

		title:c_trapani = {
			save_temporary_scope_as = current_county
		}
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:current_county = {
			change_title_holder = {
				holder = scope:justinian_commander
				change = scope:change
				take_baronies = yes
			}
		}
		resolve_title_and_vassal_change = scope:change

		title:c_mahdiya = {
			save_temporary_scope_as = current_county
		}
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:current_county = {
			change_title_holder = {
				holder = global_var:hildirix
				change = scope:change
				take_baronies = yes
			}
		}
		resolve_title_and_vassal_change = scope:change

		create_title_and_vassal_change = {
			type = independency 
			save_scope_as = change
		}
		scope:justinian_commander = {
			becomes_independent = {
				change = scope:change
			}
		}
		resolve_title_and_vassal_change = scope:change

		create_title_and_vassal_change = {
			type = swear_fealty
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:justinian_commander = {
			change_liege = {
				liege = root
				change = scope:change
			}
			resolve_title_and_vassal_change = scope:change
		}

		global_var:justinian_commander = {
			remove_character_flag = STOP_ADMIN
		}

		ai_chance = {
			base = 5
		}		
	}
}
	}

	{
western_roman.0043 = {
	type = character_event
	title = western_roman.0043.t
	desc = western_roman.0043.desc
	theme = realm
	left_portrait = {
		character = root
		animation = fear
	}
	right_portrait = {
		character = scope:emperor
		animation = personality_vengeful
	}
	lower_center_portrait = {
		character = scope:vicar
		animation = personality_honorable
	}

	immediate = {
		root = {
			save_scope_as = recipient
		}
		scope:emperor = {
			save_scope_as = actor
		}
	}

	option = {
		name = western_roman.0043.a
		if = {
			limit = { 
				OR = {
					liege = title:k_africae.holder
					AND = {
						liege = {
							liege = scope:defender
						}
						NOT = {
							faith = liege.faith
						}
					}
				}
			}
			add_character_flag = should_become_independent
		}
		if = {
			limit = {
				scope:actor = {
					any_character_war = {
						AND = {
							using_cb = independence_war_vandal
							casus_belli = {
								primary_defender = scope:actor
							}
						}
					}
				}
			}
			scope:actor = {
				every_character_war = {
					limit = {
						using_cb = independence_war_vandal
						casus_belli = {
							primary_defender = scope:actor
						}
					}
					add_attacker = scope:recipient
				}
			}
		}
		else = {
			start_war = {
				cb = independence_war_vandal
				target = scope:actor
			}
		}
		ai_chance = {
			base = 75
			ai_value_modifier = {
				ai_boldness = 0.5
				ai_zeal = 1
			}
			opinion_modifier = {
				opinion_target = top_liege
				who = root
				multiplier = 0.25
			}
		}		
	}

	option = {
		name = western_roman.0043.b
		demand_conversion_interaction_effect = yes
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_greed = 0.25
				ai_boldness = -0.5
				ai_zeal = -1
				ai_rationality = 0.25
			}
			opinion_modifier = {
				opinion_target = top_liege
				who = root
				multiplier = -0.25
			}
		}		
	}
}
	}

	{
western_roman.0064 = {
	type = character_event
	title = western_roman.0064.t
	desc = western_roman.0064.desc
	override_icon = { reference = "gfx/interface/icons/event_types/special_rhomaion.dds" }
	theme = realm
	left_portrait = {
		character = scope:truce_breaker
		animation = personality_greedy
	}
	right_portrait = {
		character = scope:truce_breakee
		animation = rage
	}

	immediate = {
		title:e_byzantium.holder = {
			save_scope_as = truce_breakee
		}
		title:e_persia.holder = {
			save_scope_as = truce_breaker
		}
	}

	option = {
		name = western_roman.0064.a
		trigger = {
			AND = {
				scope:truce_breaker = {
					character_is_land_realm_neighbor = scope:truce_breakee
				}
				NOT = { scope:truce_breakee = { is_at_war_with = scope:truce_breaker } }
			}
		}
		scope:truce_breakee = {
			random_sub_realm_county = {
				limit = {
					is_neighbor_to_realm = scope:truce_breaker
				}
				save_scope_as = target_title_eternal_placeholder
			}
		}
		scope:truce_breaker = {
			start_war = {
				cb = TFE_gothic_outbreak_county_struggle_cb
				target = scope:truce_breakee
				target_title = scope:target_title_eternal_placeholder
				claimant = scope:truce_breaker
			}
		}
		if = {
			limit = {
				OR = {
					scope:truce_breakee = {
						any_character_war = {
							using_cb = gothic_war_regular_cb
							attacker_war_score <= 75
						}
					}
					AND = {
						exists = title:k_ostrogoths.holder
						title:k_ostrogoths.holder = {
							any_character_war = {
								using_cb = cb_gothic_wars_amalasuntha
								defender_war_score <= 75
							}
						}
					}
					scope:truce_breakee = {
						any_vassal_or_below = {
							any_character_war = {
								using_cb = gothic_duchy_conquest_cb
								attacker_war_score <= 75
							}
						}
					}
				}
			}
			scope:truce_breakee = {
				trigger_event = {
					id = western_roman.0065
					days = 1
				}
			}
		}
		ai_chance = {
			base = 1
		}		
	}
	option = {
		name = western_roman.0064.b
		trigger = {
			AND = {
				exists = title:d_abkhazia.holder
				title:d_abkhazia.holder = {
					exists = var:my_suzerain
					var:my_suzerain = scope:truce_breakee
				}
				NOT = { title:d_abkhazia.holder = { is_at_war_with = scope:truce_breaker } }
			}
		}
		scope:truce_breaker = {
			start_war = {
				cb = individual_duchy_de_jure_cb
				target = title:d_abkhazia.holder
				target_title = title:d_abkhazia
				claimant = scope:truce_breaker
			}
		}
		if = {
			limit = {
				OR = {
					scope:truce_breakee = {
						any_character_war = {
							using_cb = gothic_war_regular_cb
							attacker_war_score <= 75
						}
					}
					AND = {
						exists = title:k_ostrogoths.holder
						title:k_ostrogoths.holder = {
							any_character_war = {
								using_cb = cb_gothic_wars_amalasuntha
								defender_war_score <= 75
							}
						}
					}
					scope:truce_breakee = {
						any_vassal_or_below = {
							any_character_war = {
								using_cb = gothic_duchy_conquest_cb
								attacker_war_score <= 75
							}
						}
					}
				}
			}
			scope:truce_breakee = {
				trigger_event = {
					id = western_roman.0065
					days = 1
				}
			}
		}
		ai_chance = {
			base = 100
		}		
	}
	option = {
		name = western_roman.0064.c
		ai_chance = {
			base = 1
		}		
	}
}

western_roman.0065 = {
	type = character_event
	title = western_roman.0065.t
	desc = western_roman.0065.desc
	override_icon = { reference = "gfx/interface/icons/event_types/special_rhomaion.dds" }
	theme = realm
	left_portrait = {
		character = scope:truce_breaker
		animation = personality_greedy
	}
	right_portrait = {
		character = scope:truce_breakee
		animation = rage
	}

	option = {
		name = western_roman.0065.a
		trigger = {
			OR = {
				character:belisarius_001 = {
					is_alive = yes
					is_landed = yes
					any_character_war = {
						using_cb = gothic_war_regular_cb
					}
				}
				character:belisarius_001 = {
					is_alive = yes
					is_landed = yes
					any_character_war = {
						using_cb = cb_gothic_wars_amalasuntha
					}
				}
				character:belisarius_001 = {
					is_alive = yes
					is_landed = yes
					any_character_war = {
						using_cb = gothic_duchy_conquest_cb
					}
				}
			}
		}
		character:belisarius_001 = {
			trigger_event = {
				id = western_roman.0066
				days = 1
			}
		}
		ai_chance = {
			base = 100
		}		
	}
	option = {
		name = western_roman.0065.b
		trigger = {
			NOT = {
				OR = {
					character:belisarius_001 = {
						is_alive = yes
						is_landed = yes
						any_character_war = {
							using_cb = gothic_war_regular_cb
						}
					}
					character:belisarius_001 = {
						is_alive = yes
						is_landed = yes
						any_character_war = {
							using_cb = cb_gothic_wars_amalasuntha
						}
					}
					character:belisarius_001 = {
						is_alive = yes
						is_landed = yes
						any_character_war = {
							using_cb = gothic_duchy_conquest_cb
						}
					}
				}
			}
		}
		save_scope_as = peace_offerer
		title:k_ostrogoths.holder = {
			trigger_event = western_roman.0071
		}
		ai_chance = {
			base = 100
		}		
	}
	option = {
		name = western_roman.0065.c
		ai_chance = {
			base = 1
		}		
	}
}
	}

	{
western_roman.0069 = {
	type = character_event
	title = western_roman.0069.t
	desc = western_roman.0069.desc
	override_icon = { reference = "gfx/interface/icons/event_types/special_rhomaion.dds" }
	theme = realm
	left_portrait = {
		character = root
		animation = personality_bold
	}

	option = {
		name = western_roman.0069.a
		struggle:italian_struggle = {
            activate_struggle_catalyst = {
                catalyst = catalyst_TFE_major_historical_event_devastation
                character = root
            }
        }
		set_global_variable = {
			name = belisarius_betrayal
			value = yes
		}
		set_global_variable = {
			name = belisarius_betrayal_white_peace
			value = yes
		}
		scope:truce_breakee = {
			set_relation_rival = {
				target = root
				reason = rival_betrayed_friendship
			}
		}
		add_opinion = {
			modifier = hate_opinion
			target = scope:truce_breakee
			opinion = -100
		}
		reverse_add_opinion = {
			modifier = hate_opinion
			target = scope:truce_breakee
			opinion = -100
		}
		scope:truce_breakee = {
			trigger_event = {
				id = western_roman.0070
				days = 1
			}
		}
		character:belisarius_001 = {
			if = {
				limit = {
					has_trait = loyal
				}
				remove_trait = loyal
			}
			else = {
				add_trait = disloyal
			}
			every_character_war = {
				limit = {
					OR = {
						using_cb = gothic_duchy_conquest_cb
						using_cb = cb_gothic_wars_amalasuntha
						using_cb = gothic_war_regular_cb
					}
				}
				end_war = white_peace
			}
			get_title = title:e_western_roman_empire
			if = {
				limit = {
					exists = title:e_italy.holder
					title:e_italy.holder = title:k_ostrogoths.holder
				}
				destroy_title = title:e_italy
			}
			create_title_and_vassal_change = {
				type = swear_fealty
				save_scope_as = changev
				add_claim_on_loss = no
			}
			title:k_ostrogoths.holder = {
				change_liege = {
					liege = character:belisarius_001
					change = scope:changev
				}
			}
			resolve_title_and_vassal_change = scope:changev
			title:k_ostrogoths.holder = {
				save_scope_as = destroychar
				every_held_title = {
					limit = {
						tier >= tier_kingdom
					}
					scope:destroychar = { destroy_title = prev }
				}
			}
			scope:truce_breakee = {
				start_war = {
					cb = gothic_subjugation_cb
					target = character:belisarius_001
					claimant = scope:truce_breakee
				}
			}
		}
		ai_chance = {
			base = 1
		}		
	}

	option = {
		name = western_roman.0069.b
		if = {
			limit = {
				character:belisarius_001 = {
					NOT = { has_trait = loyal }
				}
			}
			character:belisarius_001 = {
				remove_trait = disloyal
				add_trait = loyal
			}
		}
		ai_chance = {
			base = 100
		}		
	}
}
	}

	{
western_roman.0071 = {
	type = character_event
	title = western_roman.0071.t
	desc = western_roman.0071.desc
	override_icon = { reference = "gfx/interface/icons/event_types/special_rhomaion.dds" }
	theme = realm
	left_portrait = {
		character = root
		animation = worry
	}

	option = {
		name = western_roman.0071.a
		struggle:italian_struggle = {
            activate_struggle_catalyst = {
                catalyst = catalyst_TFE_major_historical_event_rebuilding
                character = root
            }
        }
		ai_chance = {
			base = 100
		}		
		scope:peace_offerer = {
			send_interface_toast = {
				title = WHITE_PEACE_ACCEPTED
				left_icon = root
			}
		}
		end_gothic_war_early_effect = yes
		if = {
			limit = {
				character:belisarius_001 = {
					is_landed = yes
					top_liege = scope:truce_breakee
				}
				exists = title:k_pontus.holder
				title:k_pontus.holder.top_liege = scope:truce_breakee
			}
			character:belisarius_001 = {
				every_held_title = {
					add_to_list = title_to_return
				}
				every_vassal = {
					add_to_list = vassal_to_return
				}
			}
			title:c_trebizond = {
				save_temporary_scope_as = current_county
			}
			create_title_and_vassal_change = {
				type = usurped
				save_scope_as = change
				add_claim_on_loss = no
			}
			scope:current_county = {
				change_title_holder = {
					holder = character:belisarius_001
					change = scope:change
					take_baronies = yes
				}
			}
			resolve_title_and_vassal_change = scope:change

			title:k_pontus = {
				save_temporary_scope_as = current_county
			}
			create_title_and_vassal_change = {
				type = usurped
				save_scope_as = change
				add_claim_on_loss = no
			}
			scope:current_county = {
				change_title_holder_include_vassals = {
					holder = character:belisarius_001
					change = scope:change
					take_baronies = no
				}
			}
			resolve_title_and_vassal_change = scope:change

			create_title_and_vassal_change = {
				type = usurped
				save_scope_as = title_change
				add_claim_on_loss = no
			}
			every_in_list = {
				list = title_to_return
				change_title_holder = {
					holder = character:belisarius_001.top_liege
					change = scope:title_change
					take_baronies = no
				}
			}
			every_in_list = {
				list = vassal_to_return
				change_liege = {
					liege = character:belisarius_001.top_liege
					change = scope:title_change
				}
			}
			resolve_title_and_vassal_change = scope:title_change
		}
	}

	option = {
		name = western_roman.0071.b
		scope:peace_offerer = {
			send_interface_toast = {
				title = WHITE_PEACE_DECLINED
				left_icon = root
			}
		}
		ai_chance = {
			base = 1
		}		
	}
}
	}

	{
western_roman.0072 = {
	scope = none
	hidden = yes
	immediate = {
		title:e_byzantium.holder = {
			save_scope_as = emperor
		}
		if = {
			limit = {
				character:thracio_03 = {
					is_alive = yes
				}
				OR = {
					character:thracio_03 = {
						is_landed = no
					}
					character:thracio_03 = {
						is_landed = yes
						top_liege = { has_title = title:e_byzantium }
						capital_province = { geographical_region = custom_roman_africae }
					}
				}
			}
			character:thracio_03 = {
				save_scope_as = berber_leader
			}
		}
		else_if = {
			limit = {
				character:mauro_roman_05 = {
					is_alive = yes
					is_landed = yes
					top_liege = { has_title = title:e_byzantium }
				}
			}
			character:mauro_roman_05 = {
				save_scope_as = berber_leader
			}
		}
		else = {
			title:e_byzantium.holder = {
				random_vassal_or_below =  {
					limit = {
						highest_held_title_tier > tier_barony
						OR = {
							culture = { has_cultural_pillar = heritage_berber }
							culture = culture:mauro_roman
						}
					}
					save_scope_as = berber_leader
				}
			}
		}
		if = {
			limit = {
				character:thracio_03 = {
					is_alive = yes
					is_landed = no
				}
				scope:berber_leader = character:thracio_03
			}
			title:c_qashtiliya = {
				save_temporary_scope_as = current_county
			}
			create_title_and_vassal_change = {
				type = usurped
				save_scope_as = change
				add_claim_on_loss = no
			}
			scope:current_county = {
				change_title_holder = {
					holder = scope:berber_leader
					change = scope:change
					take_baronies = yes
				}
			}
			resolve_title_and_vassal_change = scope:change
		}
		if = {
			limit = {
				character:mauro_roman_05 = {
					is_alive = yes
					is_landed = yes
					top_liege = { has_title = title:e_byzantium }
				}
				character:mauro_roman_06 = {
					is_alive = yes
					is_married = no
				}
				character:thracio_03 = {
					is_alive = yes
					is_married = no
				}
				scope:berber_leader = character:thracio_03
			}
			character:mauro_roman_05 = {
				trigger_event = {
					id = western_roman.0073
					days = 1
				}
			}
		}
		title:e_byzantium.holder = {
			every_vassal_or_below = {
				limit = {
					highest_held_title_tier > tier_barony
					OR = {
						culture = { has_cultural_pillar = heritage_berber }
						culture = culture:mauro_roman
					}
					NOT = { this = scope:berber_leader }
				}
				trigger_event = {
					id = western_roman.0075
					days = 2
				}
			}
		}
		title:e_byzantium.holder = {
			trigger_event = {
				id = western_roman.0077
				days = 2
			}
		}
		if = {
			limit = {
				exists = title:k_mauro_roman_kingdom.holder
			}
			title:k_mauro_roman_kingdom.holder = {
				trigger_event = {
					id = western_roman.0075
					days = 2
				}
			}
		}
		if = {
			limit = {
				exists = title:d_avaritana.holder
			}
			title:d_avaritana.holder = {
				trigger_event = {
					id = western_roman.0075
					days = 2
				}
			}
		}
		if = {
			limit = {
				exists = title:d_zaba.holder
			}
			title:d_zaba.holder = {
				trigger_event = {
					id = western_roman.0076
					days = 2
				}
			}
		}
		if = {
			limit = {
				exists = title:d_naffur.holder
			}
			title:d_naffur.holder = {
				trigger_event = {
					id = western_roman.0075
					days = 2
				}
			}
		}
		scope:berber_leader = {
			trigger_event = {
				id = western_roman.0074
				days = 1
			}
		}
	}
}
	}
}

"events/germanic_events.txt" = {
	{
germanic_events.0014 = {
	title = germanic_events.0014.t
	desc = germanic_events.0014.desc
	scope = character
	theme = realm

	left_portrait = {
		character = scope:suitor_1
		animation = personality_greedy
	}
	right_portrait = {
		character = scope:suitor_2
		animation = personality_greedy
	}
	lower_center_portrait = {
		character = scope:suitor_3
		animation = personality_greedy
	}

	immediate = {
		if = {
			limit = {
				character:992100 = {
					is_alive = yes
					is_landed = yes
					is_vassal_of = root
					is_betrothed = no
					is_married = no
				}
			}
			character:992100 = {
				save_scope_as = suitor_1
			}
		}
		else = {
			random_vassal = {
				limit = {
					is_male = yes
					is_betrothed = no
					is_married = no
					exists = dynasty
					NOT = { dynasty = root.dynasty }
				}
				save_scope_as = suitor_1
			}
		}
		if = {
			limit = {
				character:992030 = {
					is_alive = yes
					is_landed = yes
					is_betrothed = no
					is_married = no
					is_vassal_of = root
				}
			}
			character:992030 = {
				save_scope_as = suitor_2
			}
		}
		else = {
			random_vassal = {
				limit = {
					is_male = yes
					is_betrothed = no
					is_married = no
					exists = dynasty
					NOT = { dynasty = root.dynasty }
					NOT = { scope:suitor_1 = THIS }
				}
				save_scope_as = suitor_2
			}
		}
		if = {
			limit = {
				character:rugian_17 = {
					is_alive = yes
					is_landed = yes
					is_betrothed = no
					is_married = no
					is_vassal_of = root
				}
			}
			character:rugian_17 = {
				save_scope_as = suitor_3
			}
		}
		else = {
			random_vassal = {
				limit = {
					is_male = yes
					is_betrothed = no
					is_married = no
					exists = dynasty
					NOT = { dynasty = root.dynasty }
					NOT = { scope:suitor_1 = THIS }
					NOT = { scope:suitor_2 = THIS }
				}
				save_scope_as = suitor_3
			}
		}
	}

	option = {
		name = germanic_events.0014.option.a
		trigger = {
			exists = scope:suitor_1
			scope:suitor_1 = {
				is_alive = yes
				is_landed = yes
				is_betrothed = no
				is_married = no
				is_vassal_of = root
			}
		}
		character:992024 = {
			create_betrothal = scope:suitor_1
		}
		character:992023 = {
			create_alliance = {
				target = scope:suitor_1
				allied_through_owner = character:992024
				allied_through_target = scope:suitor_1
			}
		}
		ai_chance = { 
			base = 10
			modifier = {
				scope:suitor_1 = character:992100
				add = 90
			}
		}
	}
	option = {
		name = germanic_events.0014.option.b
		trigger = {
			exists = scope:suitor_2
			scope:suitor_2 = {
				is_alive = yes
				is_landed = yes
				is_betrothed = no
				is_married = no
				is_vassal_of = root
			}
		}
		character:992024 = {
			create_betrothal = scope:suitor_2
		}
		character:992023 = {
			create_alliance = {
				target = scope:suitor_2
				allied_through_owner = character:992024
				allied_through_target = scope:suitor_2
			}
		}
		ai_chance = { 
			base = 10
			modifier = {
				exists = scope:suitor_1
				scope:suitor_1 = character:992100
				add = -10
			}
		}
	}
	option = {
		name = germanic_events.0014.option.c
		trigger = {
			exists = scope:suitor_3
			scope:suitor_3 = {
				is_alive = yes
				is_landed = yes
				is_betrothed = no
				is_married = no
				is_vassal_of = root
			}
		}
		character:992024 = {
			create_betrothal = scope:suitor_3
		}
		character:992023 = {
			create_alliance = {
				target = scope:suitor_3
				allied_through_owner = character:992024
				allied_through_target = scope:suitor_3
			}
		}
		ai_chance = { 
			base = 10
			modifier = {
				exists = scope:suitor_1
				scope:suitor_1 = character:992100
				add = -10
			}
		}
	}
	option = {
		name = germanic_events.0014.option.d
		ai_chance = { 
			base = 1
		}
	}
}
	}

	{
germanic_events.0015 = {
	scope = none
	hidden = yes

	immediate = {
		#title:k_ostrogoths.holder = {
		#	add_gold = 50000
		#}
		character:992020 = {
			save_scope_as = regent
		}
		title:k_ostrogoths.holder = {
			if = {
				limit = {
					dynasty = scope:regent.dynasty
				}
				title:k_ostrogoths.holder = {
					add_character_flag = {
						flag = deposed
						years = 1
					}
				}
				if = {
					limit = {
						any_vassal = {
							THIS = character:992022
						}
					}
					character:992022 = {
						save_scope_as = ostrogoth_king
					}
				}
				else_if = {
					limit = {
						any_vassal = {
							THIS = character:992100
						}
					}
					character:992100 = {
						save_scope_as = ostrogoth_king
					}
				}
				else_if = {
					limit = {
						any_vassal = {
							is_greek_or_roman = no
						}
					}
					random_vassal =  {
						limit = {
							is_greek_or_roman = no
						}
						save_scope_as = ostrogoth_king
					}
				}
			}
			else = {
				title:k_ostrogoths.holder = {
					save_scope_as = ostrogoth_king
				}
			}
		}
		title:e_byzantium.holder = {
			save_scope_as = emperor
		}
		title:k_ostrogoths.holder = {
			every_vassal = {
				limit = {
					highest_held_title_tier >= tier_county
					is_ai = yes
					NOT = { is_in_list = roman_vassals }
					NOT = { is_in_list = ostrogoth_vassals }
				}
				save_scope_as = deciding_vassal
				random_list = {
					50 = { #Side with Romans
						modifier = {
							add = -500
							OR = {
								#Future Ostrogothic kings
								THIS = character:992022
								THIS = character:992100
								THIS = character:992030
								THIS = character:rugian_17
								THIS = character:992029
								THIS = character:992104
								THIS = scope:ostrogoth_king
							}
						}
						modifier = {
							add = 20
							scope:deciding_vassal = {
								is_greek_or_roman = yes
							}
						}
						modifier = {
							add = -20
							scope:deciding_vassal = {
								culture = {
									has_cultural_pillar = heritage_east_germanic
								}
							}
						}
						opinion_modifier = {
							who = scope:deciding_vassal
							opinion_target = scope:roman_king
							multiplier = 0.25
						}
						opinion_modifier = {
							who = scope:deciding_vassal
							opinion_target = scope:emperor
							multiplier = 0.25
						}
						opinion_modifier = {
							who = scope:deciding_vassal
							opinion_target = scope:ostrogoth_king
							multiplier = -0.5
						}
						add_to_list = roman_vassals
					}
					50 = { #Side with Ostrogoths
						modifier = {
							add = 500
							OR = {
								#Future Ostrogothic kings
								THIS = character:992022
								THIS = character:992100
								THIS = character:992030
								THIS = character:rugian_17
								THIS = character:992029
								THIS = character:992104
								THIS = scope:ostrogoth_king
							}
						}
						modifier = {
							add = 20
							scope:deciding_vassal = {
								culture = {
									has_cultural_pillar = heritage_east_germanic
								}
							}
						}
						modifier = {
							add = -20
							scope:deciding_vassal = {
								is_greek_or_roman = yes
							}
						}
						opinion_modifier = {
							who = scope:deciding_vassal
							opinion_target = scope:roman_king
							multiplier = -0.25
						}
						opinion_modifier = {
							who = scope:deciding_vassal
							opinion_target = scope:emperor
							multiplier = -0.25
						}
						opinion_modifier = {
							who = scope:deciding_vassal
							opinion_target = scope:ostrogoth_king
							multiplier = 0.5
						}
						add_to_list = ostrogoth_vassals
					}
				}
			}
		}

		if = {
			limit = {
				scope:roman_king = {
					is_landed = yes
				}
			}
			scope:roman_king = {
				every_held_title = {
					add_to_list = revert_to_emperor_titles
				}
				every_vassal = {
					add_to_list = revert_to_emperor_vassals
				}
			}
		}

		if = {
			limit = {
				character:992020 = {
					is_landed = yes
				}
			}
			character:992020 = {
				every_held_title = {
					add_to_list = titles_to_usurp
				}
				every_vassal = {
					add_to_list = roman_vassals
				}
			}
		}

		if = {
			limit = {
				title:k_ostrogoths.holder = {
					has_character_flag = deposed
				}
			}

			title:k_ostrogoths.holder = {
				add_to_list = roman_vassals
				every_held_title = {
					limit = {
						tier = tier_kingdom
					}
					add_to_list = revert_to_goths_titles
				}
				every_vassal = {
					add_to_list = revert_to_goths_vassals
				}
			}

			create_title_and_vassal_change = {
				type = usurped
				save_scope_as = title_change
				add_claim_on_loss = yes
			}
			every_in_list = {
				list = revert_to_goths_titles
				change_title_holder = {
					holder = scope:ostrogoth_king
					change = scope:title_change
					take_baronies = no
				}
			}
			every_in_list = {
				list = revert_to_goths_vassals
				change_liege = {
					liege = scope:ostrogoth_king
					change = scope:title_change
				}
			}
			resolve_title_and_vassal_change = scope:title_change
		}

		title:c_roma = {
			save_temporary_scope_as = current_county
		}
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:current_county = {
			change_title_holder = {
				holder = scope:roman_king
				change = scope:change
				take_baronies = yes
			}
		}
		resolve_title_and_vassal_change = scope:change

		if = {
			limit = {
				scope:roman_king = {
					any_held_title = {
						NOT = { THIS = title:c_roma }
					}
				}
			}
			create_title_and_vassal_change = {
				type = usurped
				save_scope_as = title_change
				add_claim_on_loss = yes
			}
			every_in_list = {
				list = revert_to_emperor_titles
				change_title_holder = {
					holder = scope:emperor
					change = scope:title_change
					take_baronies = no
				}
			}
			every_in_list = {
				list = revert_to_emperor_vassals
				change_liege = {
					liege = scope:emperor
					change = scope:title_change
				}
			}
			resolve_title_and_vassal_change = scope:title_change
		}


		scope:ostrogoth_king = {
			every_held_title = {
				limit = {
					NOT = { this = title:k_ostrogoths }
					tier = tier_kingdom
				}
				add_to_list = titles_to_usurp
				clear_title_laws = yes
			}
		}

		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = title_change
			add_claim_on_loss = yes
		}
		every_in_list = {
			list = titles_to_usurp
			change_title_holder = {
				holder = scope:roman_king
				change = scope:title_change
				take_baronies = no
			}
		}
		every_in_list = {
			list = roman_vassals
			change_liege = {
				liege = scope:roman_king
				change = scope:title_change
			}
		}
		resolve_title_and_vassal_change = scope:title_change

		scope:ostrogoth_king = {
			set_relation_rival = {
				target = scope:roman_king
				reason = rival_usurper
			}
		}

		if = {
			limit = {
				scope:roman_king = {
					is_independent_ruler = no
				}
			}
			scope:roman_king = {
				create_title_and_vassal_change = {
					type = independency
					save_scope_as = going_independent
					add_claim_on_loss = no
				}
				becomes_independent = {
					change = scope:going_independent
				}
				resolve_title_and_vassal_change = scope:going_independent
			}
		}

		scope:ostrogoth_king = {
			start_war = {
				cb = cb_gothic_wars_amalasuntha
				target = scope:roman_king
			}
		}

		scope:emperor = {
			trigger_event = {
				id = germanic_events.0016
				days = 1
			}
		}
		scope:ostrogoth_king = {
			trigger_event = {
				id = germanic_events.0017
				days = 1
			}
		}
		every_player = {
			limit = {
				OR = {
					is_vassal_of = scope:ostrogoth_king
					is_vassal_of = scope:roman_king
				}
			}
			trigger_event = {
				id = germanic_events.0018
				days = 1
			}
		}
	}
}
	}

	{
germanic_events.0025 = {
	type = character_event
	title = germanic_events.0025.t
	desc = germanic_events.0025.desc
	theme = realm
	override_icon = { reference = "gfx/interface/icons/event_types/special_rhomaion.dds" }

	left_portrait = {
		character = title:e_byzantium.holder
		animation = personality_bold
	}
	lower_center_portrait = {
		character = scope:commander_2
		animation = personality_bold
	}
	right_portrait = {
		character = scope:commander_1
		animation = personality_bold
	}

	immediate = {
		struggle:italian_struggle = {
            activate_struggle_catalyst = {
                catalyst = catalyst_TFE_major_historical_event_devastation
                character = root
            }
        }
		title:k_ostrogoths.holder = {
			set_scope_as = target_ruler
		}
		if = {
			limit = {
				global_var:belisarius = {
					is_alive = yes
					OR = {
						is_at_war = no
						NOT = {
							any_character_war = {
								using_cb = vandalic_war_cb
							}
						}
					}
					OR = {
						NOT = { exists = title:k_africae.holder }
						NOT = { title:k_africae.holder = global_var:belisarius }
					}
				}
				NOT = { exists = global_var:belisarius_betrayal }
			}
			global_var:belisarius = {
				save_scope_as = commander_1
			}
		}
		else_if = {
			limit = {
				character:armenian_01 = {
					is_alive = yes
				}
				character:armenian_01 = {
					is_courtier_of = root
				}
			}
			character:armenian_01 = {
				save_scope_as = commander_1
			}
		}
		else_if = {
			limit = {
				character:armenian_02 = {
					is_alive = yes
				}
				character:armenian_02 = {
					is_courtier_of = root
				}
			}
			character:armenian_02 = {
				save_scope_as = commander_1
			}
		}
		else = {
			random_courtier = {
				limit = {
					is_adult = yes
					is_male = yes
				}
				save_scope_as = commander_1
			}
		}
		random_courtier = {
			limit = {
				NOT = { THIS = scope:commander_1 }
				is_adult = yes
				is_male = yes
			}
			save_scope_as = commander_2
		}
	}

	option = {
		name = germanic_events.0025.a
		hidden_effect = {
			set_global_variable = {
				name = justinian_gothic_commander
				value = scope:commander_1
			}
			start_gothic_war_effect = yes
		}
		ai_chance = {
			base = 100
		}		
	}

	option = {
		name = germanic_events.0025.b
		hidden_effect = {
			set_global_variable = {
				name = justinian_gothic_commander
				value = scope:commander_2
			}
			start_gothic_war_effect = yes
		}
		ai_chance = {
			base = 0
		}		
	}
}
	}

	{
germanic_events.0033 = {
	type = character_event
	title = germanic_events.0033.t
	desc = germanic_events.0033.desc
	theme = realm
	override_icon = { reference = "gfx/interface/icons/event_types/special_rhomaion.dds" }

	left_portrait = {
		character = title:e_byzantium.holder
		animation = personality_bold
	}
	lower_center_portrait = {
		character = scope:commander_2
		animation = personality_bold
	}
	right_portrait = {
		character = scope:commander_1
		animation = personality_bold
	}

	immediate = {
		title:k_ostrogoths.holder = {
			set_scope_as = target_ruler
		}
		if = {
			limit = {
				character:armenian_01 = {
					is_alive = yes
				}
				character:armenian_01 = {
					top_liege = scope:emperor
				}
			}
			character:armenian_01 = {
				save_scope_as = commander_1
			}
		}
		else_if = {
			limit = {
				character:belisarius_001 = {
					is_alive = yes
				}
				character:belisarius_001 = {
					top_liege = scope:emperor
					OR = {
						is_at_war = no
						NOT = {
							any_character_war = {
								using_cb = vandalic_war_cb
							}
						}
					}
				}
				NOT = { exists = global_var:belisarius_betrayal }
			}
			character:belisarius_001 = {
				save_scope_as = commander_1
			}
		}
		else_if = {
			limit = {
				character:armenian_02 = {
					is_alive = yes
				}
				character:armenian_02 = {
					top_liege = scope:emperor
				}
			}
			character:armenian_02 = {
				save_scope_as = commander_1
			}
		}
		else = {
			scope:emperor = {
				random_courtier = {
					limit = {
						is_adult = yes
						is_male = yes
						is_landed = no
					}
					save_scope_as = commander_1
				}
			}
		}
		if = {
			limit = {
				NOT = { scope:commander_1 = character:belisarius_001 }
			}
			character:belisarius_001 = {
				save_scope_as = commander_2
			}
		}
		else = {
			random_courtier = {
				limit = {
					NOT = { THIS = scope:commander_1 }
					is_adult = yes
					is_male = yes
				}
				save_scope_as = commander_2
			}
		}
	}

	option = {
		name = germanic_events.0033.a
		hidden_effect = {
			scope:commander_1 = {
				save_scope_as = roman_king
			}
			trigger_event = {
				id = germanic_events.0015
				days = 1
			}
		}
		ai_chance = {
			base = 1
			modifier = {
				add = 100
				scope:commander_1 = {
					is_ai = no
				}
			}
		}		
	}

	option = {
		name = germanic_events.0033.b
		hidden_effect = {
			scope:commander_2 = {
				save_scope_as = roman_king
			}
			trigger_event = {
				id = germanic_events.0015
				days = 1
			}
		}
		ai_chance = {
			base = 1
			modifier = {
				add = 100
				scope:commander_2 = {
					is_ai = no
				}
			}
		}		
	}
}
	}
}

"common/script_values/TFE_values.txt" = {
	{
# Counter for Britannian counties owned by non-Involved
struggle_britannia_ending_compromise_decision_region_interloper_value = {
	value = 0
	every_county_in_region = {
		region = world_europe_west_britannia
		limit = {
			holder.top_liege = { britannia_character_involved_in_struggle_trigger = no }
		}
		add = 1
	}
}

# Percentage of Britannian counties owned by non-Involved
struggle_britannia_ending_compromise_decision_region_interloper_percent_value = {
	value = struggle_britannia_ending_compromise_decision_region_interloper_value
	divide = struggle_britannia_ending_ending_decision_region_total_value
	multiply = 100
}
	}
}

"events/TFE_flavour_events.txt" = {
	{
TFE_flavour_events.0007 = {
	title = TFE_flavour_events.0007.t
	desc = TFE_flavour_events.0007.desc
	scope = character
	theme = martial
	trigger = {
		character:cenmar_01 = {
			is_alive = yes
		}
	}
	override_background = {
		reference = throne_room
	}
	left_portrait = {
		character = root
		animation = rage
	}
	right_portrait = {
		character = character:cenmar_01
		animation = worry
	}
	option = {
		name = TFE_flavour_events.0007.a
		character:cenmar_01 = {
			death = {
				death_reason = death_defenestration
				killer = root
			}
		}
		add_dread = 10
		add_prestige = -100
		stress_impact = {
			vengeful = minor_stress_impact_loss
			sadistic = minor_stress_impact_loss
			compassionate = minor_stress_impact_gain
		}
	}
	option = {
		name = TFE_flavour_events.0007.b
		add_prestige = 100
		stress_impact = {
			vengeful = minor_stress_impact_gain
			sadistic = minor_stress_impact_gain
			compassionate = minor_stress_impact_loss
		}
		remove_courtier_or_guest = character:cenmar_01
	}
}
	}

	{
TFE_flavour_events.0051 = {
	hidden = yes
	scope = none

	immediate = {
		if = {
			limit = {
				character:vandals_013 = {
					is_alive = yes
					is_landed = yes
					is_vassal_or_below_of = scope:defender
				}
			}
			scope:war = {
				add_defender = character:vandals_013
			}
		}
		if = {
			limit = {
				character:vandals_146 = {
					is_alive = yes
					is_landed = yes
					is_vassal_or_below_of = scope:defender
				}
			}
			scope:war = {
				add_attacker = character:vandals_146
			}
		}
		
	}
}
	}
}

"common/buildings/TFE_special_buildings.txt" = {
	{
palace_khawarnaq = {
	construction_time = slow_construction_time

	type_icon = "aljaferia.dds"

	can_construct_potential = {
		always = yes
	}

	can_construct = {
		always = yes
	}

	character_modifier = {
		vassal_opinion = 5
		monthly_prestige_gain_per_happy_powerful_vassal_add = 0.05
		monthly_dynasty_prestige_mult = 0.05
	}
	county_modifier = {
		tax_mult = 0.1
		development_growth_factor = 0.05
	}
	ai_value = {
		base = 100
		ai_tier_1_building_modifier = yes
	}
	on_complete = {
		county_controller = {
			trigger_event = TFE_flavour_events.0007
		}
	}
	cost_gold = expensive_building_tier_3_cost
	type = special
	flag = travel_point_of_interest_wonder
}
	}
}