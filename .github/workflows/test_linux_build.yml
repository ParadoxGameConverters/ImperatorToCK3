name: Test Linux build

on:
  push:
    branches:
      - test-wf

jobs:
  test_wf:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: "Init submodules"
      run: |
       git submodule update --init --recursive
    - name: Setup Dotnet for use with actions
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.*'
    - name: "Build frontend"
      run: |
        sudo apt install libcurl4-openssl-dev
        sudo apt-key adv --fetch-keys https://repos.codelite.org/CodeLite.asc
        sudo apt-add-repository 'deb https://repos.codelite.org/wx3.1.5/ubuntu/ focal universe'
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt update
        sudo apt install gcc-11 g++-11
        sudo apt install libwxbase3.1-0-unofficial libwxbase3.1unofficial-dev libwxgtk3.1-0-unofficial libwxgtk3.1unofficial-dev wx3.1-headers wx-common
        # Link gcc-11 and g++-11 to their standard commands
        sudo ln -s /usr/bin/gcc-11 /usr/local/bin/gcc
        sudo ln -s /usr/bin/g++-11 /usr/local/bin/g++
        # Export CC and CXX to tell cmake which compiler to use
        export CC=/usr/bin/gcc-11
        export CXX=/usr/bin/g++-11
        # Check versions of gcc, g++ and cmake
        gcc -v && g++ -v && cmake --version

        rm -rf Release/
        cd Fronter
        ./build_linux.sh
        mv Release ../
    - name: "Build updater executable"
      run: |
       cd Fronter/Updater
       pip3 install -r requirements.txt
       pyinstaller --onefile --icon=updater.ico updater.py
       mkdir ../../Release/Updater
       mv dist/updater ../../Release/Updater/updater
    - name: "Build backend"
      run: |
        cd ImperatorToCK3
        dotnet publish -p:PublishProfile=linux-x64 -c:Release
        cd ..
        rm -r "Release/ImperatorToCK3"
        cp -R Publish/ Release/
    - name: "Save commit ID"
      run: |
       git rev-parse HEAD > Release/commit_id.txt
    - name: Archive Release folder
      uses: thedoctor0/zip-release@master
      with:
        type: 'zip'
        directory: Release/
        filename: 'ImperatorToCK3-linux-x64.zip'
    - name: Print directory tree
      run: |
       sudo apt-get install tree
       tree
