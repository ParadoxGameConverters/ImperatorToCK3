name: Build

on:
  push:
    branches-ignore:
      - master
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: "Init submodules"
      run: |
       git submodule update --init --recursive
    # install dependencies, build, and test
    - name: Setup Dotnet for use with actions
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.*'
    - name: Build
      run: |
       cd ImperatorToCK3
       dotnet restore
       dotnet build
    - name: "Build updater executable"
      run: |
       cd Fronter/Updater
       pip install -r requirements.txt
       pyinstaller --onefile --icon=updater.ico updater.py
       mkdir ../Release/Updater
       if [ "$RUNNER_OS" == "Windows" ]; then
          mv dist/updater.exe ../Release/Updater/updater.exe
       else
          mv dist/updater ../Release/Updater/updater

       